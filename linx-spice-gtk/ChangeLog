2015-03-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: fix out-of-tree build from tarball
	There are generated files in build directory too. Fixes:

	CC       util.o
	In file included from ../../tests/session.c:3:0:
	../../gtk/spice-session.h:24:30: fatal error: spice-glib-enums.h:
	No such file or directory #include "spice-glib-enums.h"

	Prepare v0.28 release

2015-03-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: fix required libsoup version for webdav support

	Revert spice-common change
	Commit 85ed268 shouldn't have change spice-common, my bad

	session: bind path and read-only to webdav server
	Keep the server property in sync with the session properties

	session: add share-dir-ro property
	Add a property to specify if share folder access is read-only.

	webdav: use a pipe to connect to server
	Instead of listening on TCP sockets, and proxying connections there,
	make the webdav server accept new connections from stream. The streams
	are user-space GIOStream pipe, one side is connected to the Spice webdav
	channel muxer/demuxer, the other side is a SoupSocket client.

	This makes the server not exposed any local public access, avoid the
	need for server threads, or proxying the connections through system
	sockets.

	Use libphodav-2 (breaks webdav server temporarily)
	This change breaks webdav server, since libphodav-2 no longer
	set up a TCP service running in a thread. It's up to the client
	to decide how best to accept and handle new connections.

	This commits remove all the hacks related to proxying the incoming
	connections to a TCP socket, and protected with a magic sequence.

	The following commit will use GIOStream pipes to handle each client
	connections.

	Add GIOStream-based pipe
	This code creates a pipe between 2 GIOStream, the input side read from
	the peer output side, and vice-versa.

	In the following patches, this will avoid the socket communication
	to exchange with the embedded webdav server.

	glib-2.0 >= 2.43.90 because GSimpleIOStream dependency.

2015-02-27  Victor Toso  <victortoso@redhat.com>

	tests: add spice-session test
	Checking if URIs are being parsed and generated correctly.

	session: accept argument in URI without value
	The examples below should be considered valid URIs:

	e.g: spice://localhost?port=5900&tls-port=
	e.g: spice://localhost?tls-port=&port=5900

	This patch deals with arguments with empty value;

2015-02-23  Pavel Grunt  <pgrunt@redhat.com>

	vncdisplaykeymap: Use XkbGetMap and XkbGetNames instead of XkbGetKeyboard
	XkbGetKeyboard does not work in XWayland (bfo#89240).

	Fixes https://bugs.freedesktop.org/show_bug.cgi?id=89105

2015-02-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: reset connection_id on switch-host
	The server expects no connection_id during link time, in order to
	realize a full reconnection.

	The alternative would be to assume that the destination server has the
	exact same channels and attempt to recreate and to reconnect them one by
	one. However, if the destination is slightly different (say,
	configuration or order of channels differs), this will likely fail. It's
	best to start with a new session without prior knowledge.

	channel: remove unused ChannelClass::channel_disconnect()
	This virtual method turns out to be unnecessary anymore, and
	was never override. channel_reset() is enough.

	channel: set c->has_error to finish coroutine
	It's unnecessary to call channel_disconnect() to finish the coroutine
	and disconnect. Use c->has_error instead, like the rest of channel error
	code.

	Call channel_reset() directly when finishing coroutine
	channel_disconnect() virtual method isn't overloaded by any
	channel, and can be replaced by the equivalent channel_reset()
	when finishing the coroutine.

	channel: reset migration state when calling channel_reset()
	channel_reset() is called in channel_disconnect(). We can just move that
	state change in channel_reset() in order to get rid of
	channel_disconnect().

	channel: use exisiting reconnection code when switching
	Switching for migration reason is similar to a reconnection during
	initial connection.

	A notable difference is that new code path doesn't schedule a
	delayed_unref callback. This is fine since the channel is still running
	and delayed_unref is mainly used for signaling disconnections and none
	should be emitted when switching.

	channel: reset channel state to unconnected
	After coroutine has exited, reset channel state to unconnected,
	this allows recycling a channel for reconnection, even in "normal"
	disconnect/reconnect cases.

	channel: remove useless precondition
	This precondition isn't useful, since the channel is already
	dereferenced before, and I've never seen an idle callback not passing
	the user_data correctly.

	channel: emit close event when coroutine has finished
	Move signaling of closed channel after the coroutine has exited in
	delayed_unref callback, similarly to error events, so it's easier to
	schedule reconnect since coroutine has terminated.

2015-02-16  Javier Celaya  <javier.celaya@flexvm.es>

	channel-port: Remove dependency cycle
	channel-port.h includes spice-client.h, that includes channel-webdav.h,
	that includes channel-port.h again. It's enough if channel-port.h
	includes spice-channel.h

	Without this change, if one tries to build a source file which only
	includes spice-port.h, the build fails with:

	In file included from /usr/include/spice-client-glib-2.0/spice-client.h:46:0,
	                 from /usr/include/spice-client-glib-2.0/channel-port.h:22,
	                 from ./port.c:1:
	/usr/include/spice-client-glib-2.0/channel-webdav.h:44:5: error: unknown type name 'SpicePortChannel'
	     SpicePortChannel parent;
	     ^
	/usr/include/spice-client-glib-2.0/channel-webdav.h:58:5: error: unknown type name 'SpicePortChannelClass'
	     SpicePortChannelClass parent_class;

2015-02-16  Pavel Grunt  <pgrunt@redhat.com>

	widget: Do not draw cursor if widget is not realized
	Silences the runtime warning in virt-viewer and gnome-boxes (bgo#744432):
	Gtk-CRITICAL **: gtk_widget_queue_draw_area: assertion 'width >= 0' failed

2015-02-12  Pavel Grunt  <pgrunt@redhat.com>

	widget: Send keys to guest when keyboard grab is released
	Keys should be sent to the guest if the widget has the focus even
	when the keyboard grab is released.

2015-02-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	webdav: fix checking for shared directory property
	Trivial fix for 6163828e8cb15d539c80cc3f0bfb5008be9b2247:
	Channel should be created if the shared-dir property is set.

2015-02-06  Benjamin Gilbert  <bgilbert@cs.cmu.edu>

	Don't build libspice-client-gtk if configured --without-gtk
	libspice-client-glib is useful as a client library on platforms that
	don't support GTK.

2015-02-06  Christophe Fergeau  <cfergeau@redhat.com>

	Update git submodule
	This fixes build with mingw as well as lz4 support:

	3aad79d LZ4: Do not include arpa/inet.h in Windows builds
	9287e53 LZ4: Add support for 24bit pixman surfaces
	d167e2e LZ4: Fix the row alignment when it is not on a 32bit boundary
	f76fc28 LZ4: Decode the image format from the stream
	83c0d64 LZ4: Adjust reading the top_down flag
	6049db4 LZ4: Fix output buffer size
	ac26fd7 Remove redundant #if defined(SW_CANVAS_CACHE) || defined(SW_CANVAS_IMAGE_CACHE)
	062bf67 Remove unused 'invers' arg from canvas_get_*
	619b995 common: fix build with mingw
	862b9b1 build-sys: Move pixman check to m4 macro
	137b1a5 build-sys: Move opengl check to m4 macro
	f9e0a64 build-sys: Move opus check to m4 macro
	dd57d05 build-sys: Move celt check to m4 macro
	fb3fe22 build-sys: Move smartcard check to m4 macro
	df74a17 build-sys: Move posix checks to a separate m4 macro
	2f1ba3b build-sys: Add fallback for AS_VAR_APPEND
	2195369 build-sys: Small cleanup of AM_CPPFLAGS
	ed873a9 build-sys: Remove unused WITH_SMARTCARD conditional
	2da14b6 build-sys: Remove unused win32 check
	5bfa9ca build-sys: Remove unused X check
	268d3e3 Remove unused header file

2015-01-29  Christophe Fergeau  <cfergeau@redhat.com>

	Don't set SpiceSession::cmain twice during migration
	During migration, migrate_connect() ends with:
	spice_session_set_main_channel(mig->session,
	                               migrate_channel_connect(mig, SPICE_CHANNEL_MAIN, 0));

	migrate_channel_connect() calls spice_channel_new() which will create a
	new SpiceMainChannel instance.
	spice_channel_constructed() will be called during this instanciation,
	which will call spice_session_channel_new(), which will set
	SpiceSession::cmain for SpiceMainChannel instances.

	When calling spice_session_set_main_channel(), SpiceSession::cmain will
	thus already be set, which causes a runtime warning as
	spice_session_set_main_channel() has a precondition checking that
	SpiceSession::cmain is not set already.

	This commit removes the call to spice_session_set_main_channel() from
	migrate_connect() as this call is not doing anything more than the call
	to migrate_channel_connect().

	Remove runtime warning when setting a NULL shared-dir
	Now that the webdav channel can cope with a NULL shared dir (by not
	creating the webdav server), we no longer need to reject NULL shared
	directories with a warning.

	This fixes part of https://bugzilla.redhat.com/show_bug.cgi?id=1175721

	webdav: Cope with NULL SpiceSession::shared-dir
	shared-dir default value is
	g_get_user_special_dir(G_USER_DIRECTORY_PUBLIC_SHARE)
	which can be NULL (for example if ~/.config/user-dirs.dirs does not
	exist).
	This commit makes sure we don't create a PhodavServer when this occurs

	display: Fix 'exisiting' typo in debug log

	display: s/dropin/dropping in debug message

	session: Add more debugging logs
	Initial SPICE connection can sometimes fail without clear indications
	where/how it failed. This commit adds more debug logs/more accurate logs
	in order to help narrow down such issues.

	display: Improve DisplayChannel::num_drops_on_arive name
	'arive' has a typo, and 'num_drops_on_receive' is clearer.

	Use macro to swap data in spice_session_start_migrating()
	spice_session_start_migrating() swaps connection details between 2
	SpiceSession instances. Instead of doing it manually, use a macro to do
	it for us.

2015-01-29  Pavel Grunt  <pgrunt@redhat.com>

	desktop-integration: check owner of bus name
	It avoids calling D-Bus methods when the bus name
	"org.gnome.SessionManager" does not exist.

	Silences:
	GSpice-WARNING **: Error calling 'org.gnome.SessionManager.Inhibit': GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .service files

2015-01-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	spicy: deal with spice+unix:// URI

	session: teach spice_uri_create() about UNIX path

	session: prettify query parameters
	Use & as parameters separators, this is more usual. Remove
	trailing one, no further parameters are useful anyway.

	session: return allocated string from spice_uri_create()
	This allows more flexible string building.

	session: parse spice+unix:// URI

	session: connect to UNIX path

	session: add unix-path property

	channel: reset connection state on error
	Fix regression introduced in 6b475802, to permit reconnection on error,
	the channel state must be < STATE_CONNECTING. Since the error is
	reported after coroutine exits and channel is reset, the state can be
	modified before throwing the error now.

	channel: reset tls state when client calls connect
	The channel TLS state is kept during disconnection and reset, for
	automatic reconnection and migrations reasons. However, when
	spice_channel_connect() is called by client, it should first try
	non-TLS connection.

	channel: delay event report to after coroutine exit
	Move to a common place error reporting, after the coroutine exits.

2015-01-23  Pavel Grunt  <pgrunt@redhat.com>

	spice-widget: Don't return early from focus_in_event when widget is not realized
	Otherwise SpiceDisplay might not get the keyboard grab.
	It also silence GSpice-CRITICAL on focus out event:
	GSpice-CRITICAL **: spice_gtk_session_request_auto_usbredir: assertion 's->auto_usbredir_reqs > 0' failed

2015-01-16  Zeeshan Ali (Khattak)  <zeeshanak@gnome.org>

	session: Improved docs for spice_session_connect()
	Make it clear that users of this function must provide additional
	sockets for individual channels.

2015-01-08  Benjamin Gilbert  <bgilbert@cs.cmu.edu>

	inputs: Correct documentation of scancode arguments
	AT scancodes" implies AT set 2, but the SPICE protocol expects
	AT set 1.  spice-gtk additionally expects a mangled version of
	set 1 scancodes, which are then unmangled by spice_make_scancode()

2015-01-06  Fabiano Fidêncio  <fidencio@redhat.com>

	README: update gstreamer info

	nsis: drop gst-0.10 in favour of gst-1.0
	Based on Victor Toso's patch for virt-viewer:
	https://git.fedorahosted.org/cgit/virt-viewer.git/commit/?id=3bbf1ded1cb01429d600b11035d5fb0d60bfe20b

	audio: drop gst-0.10 in favour of gst-1.0
	As gstreamer-1,0 support was introduced by commit d4d60c97 and
	it works pretty much as gstreamer-0,10 used to work (tests were
	made both on Linux and Windows clients), let's drop the old
	gstreamer-0.10 support in favour of gstreamer-1.0.

2014-12-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	usbredir: prevent crash when calling without host
	Quite annoyingly, usbredir doesn't have public functions arguments
	preconditions, and will weirdly run the flush callback during
	initialization.

	With 201a8c2 change, the channel state is kept as it is when calling
	reset. This will result in the following crash that was avoided before
	thanks to a precondition on the channel to be ready. Adding a further
	precondition check on priv->host != NULL solves the following crash
	during reset():

	Program received signal SIGSEGV, Segmentation fault.
	usbredirhost_write_guest_data (host=0x0) at usbredirhost.c:868
	868                               return
	usbredirparser_do_write(host->parser);
	(gdb) bt
	 #0  0x00007fffb2ed24d0 in usbredirhost_write_guest_data (host=0x0) at
	 #usbredirhost.c:868
	 #1  0x00007fffc81d463b in
	 #usbredir_write_flush_callback (user_data=0x2d95250) at
	 #channel-usbredir.c:469
	 #2  0x00007fffb2ed23f9 in usbredirhost_open_full (usb_ctx=0x2baba70,
	 #usb_dev_handle=0x0, log_func=<optimized out>,
	 #read_guest_data_func=0x7fffc81d482c <usbredir_read_callback>,
	 #write_guest_data_func=0x7fffc81d4952 <usbredir_write_callback>,
	 #flush_writes_func=0x7fffc81d45c3 <usbredir_write_flush_callback>,
	 #alloc_lock_func=0x7fffc81d49f1 <usbredir_alloc_lock>,
	 #lock_func=0x7fffc81d4a41 <usbredir_lock_lock>,
	 #unlock_func=0x7fffc81d4a86 <usbredir_unlock_lock>,
	 #free_lock_func=0x7fffc81d4acb <usbredir_free_lock>,
	 #func_priv=0x2d95250, version=0x7fffc8283dcf "spice-gtk
	 #0.27.7-89db-dirty", verbose=4, flags=1) at usbredirhost.c:748
	 #3  0x00007fffc81d3b22 in
	 #spice_usbredir_channel_set_context (channel=0x2d95250
	 #[SpiceUsbredirChannel], context=0x2baba70) at channel-usbredir.c:212
	 #4  0x00007fffc81d37a9 in spice_usbredir_channel_reset (c=0x2d95250
	 #[SpiceUsbredirChannel], migrating=0)
	 at channel-usbredir.c:125
	 #5  0x00007fffc81b7f8d in spice_channel_reset (channel=0x2d95250
	 [SpiceUsbredirChannel], migrating=0)
	 at spice-channel.c:2688
	 #6  0x00007fffc81b8057 in channel_disconnect (channel=0x2d95250
	 [SpiceUsbredirChannel]) at spice-channel.c:2706
	 #7  0x00007fffc81b7559 in
	 spice_channel_coroutine (data=0x2d95250) at spice-channel.c:2490

2014-12-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: clear channel error after auth error
	When entered authentication details are wrong, spice-gtk will reset
	channel error, which will result in the following warning:

	(remote-viewer:20753): GLib-WARNING **: GError set over the top of a
	previous GError or uninitialized memory.
	This indicates a bug in someone's code. You must ensure an error is NULL
	before it's set.

	Clear channel error after reporting authentication error.

	channel: throw auth error when coroutine ends
	It is common that clients attempt to reconnect during the
	SPICE_CHANNEL_ERROR_AUTH callback.  However, the channel must exit
	the coroutine first before reconnection can happen.

	channel: introduce SPICE_CHANNEL_STATE_RECONNECTING
	Add a new state that permits reconnection, because it's < CONNECTING.
	It also simplifies some code by removing unneeded variables in
	spice_channel_coroutine(): the channel.tls and session.protocol version
	properties are already modified during initial connection steps.

	channel: do not enter channel iterate on early error
	There is no need to enter channel_iterate() if we found an early
	connection steps error.

	channel: factorize failed authentication
	There are a few things that should be common to all wrong authentication
	cases. Let's put them all in the same function.

	session: keep main channel on reconnect
	For legacy reasons, spice-gtk should keep at least one channel in the
	session when reconnecting (clients may decide that the session is
	disconnected when all channels are gone). The most obvious is to
	keep and reuse the main channel.

2014-12-11  Marc-André Lureau  <marcandre.lureau@gmail.com>

	Prepare 0.27 release

2014-12-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	docs: improvements for 0.27 release

2014-12-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: update git.mk

2014-12-03  Marc-André Lureau  <marcandre.lureau@gmail.com>

	Fix build for glib < 2.32
	G_SOURCE_REMOVE was introduced in 2.32

2014-12-02  Javier Celaya  <javier.celaya@flexvm.es>

	Add LZ4 compression algorithm support.
	- Use PKG_CHECK_MODULES to find liblz4.
	- Set LZ4 display channel capability.

2014-12-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	usb: keep USB context alive as long as channels exist
	It was assumed the session would remain alive as long as channel
	existed, so USB context would be valid too. Now that channels
	are removed from session, USB context may be destroyed before
	channels. This produces invalid read/write on USB context.
	Make sure the context is alive as long as USB channels are by
	adding a reference on USB manager.

	==6939== Invalid write of size 4
	==6939==    at 0x394B604482: libusb_set_debug (core.c:1850)
	==6939==    by 0x3953A063D5: usbredirhost_open_full (usbredirhost.c:741)
	==6939==    by 0x4EC7E2F:
	spice_usbredir_channel_set_context (channel-usbredir.c:212)
	==6939==    by 0x4EC7AB6:
	spice_usbredir_channel_reset (channel-usbredir.c:125)
	==6939==    by 0x4EACCDC: spice_channel_reset (spice-channel.c:2621)
	==6939==    by 0x4EACDB4: channel_disconnect (spice-channel.c:2640)
	==6939==    by 0x4EAC28F: spice_channel_coroutine (spice-channel.c:2423)
	==6939==    by 0x4EE8B1C: coroutine_trampoline (coroutine_ucontext.c:63)
	==6939==    by 0x4EE87D6: continuation_trampoline (continuation.c:55)
	==6939==    by 0x3928247FEF: ??? (in /usr/lib64/libc-2.20.so)
	==6939==    by 0x51E36FF: ??? (in
	/usr/local/stow/spice-gtk/lib/libspice-client-glib-2.0.so.8.5.0)
	==6939==    by 0xCF0C18F: ???
	==6939==  Address 0xff15f90 is 0 bytes inside a block of size 536 free'd
	==6939==    at 0x4A07CE9: free (in
	/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
	==6939==    by 0x394B606466: libusb_exit (core.c:2041)
	==6939==    by 0x4ECC590: spice_usb_device_manager_finalize (usb-device-manager.c:371)

	usb: return early if channel is not usb
	Return early if channel is not USB, replace:

	if (SPICE_IS_USBREDIR_CHANNEL(channel)) {
	    /* code */
	}

	with

	if (!SPICE_IS_USBREDIR_CHANNEL(channel))
	    return;

	session: disconnect in idle
	This is a workaround for existing clients such as virt-viewer that do
	not hold a reference to their sessions when calling
	spice_session_disconnect() and crash now that channels are removed from
	session during the call. They expect disconnection events to be deferred
	instead, let's defer actual disconnection to idle time for public
	disconnect API for compatibility reasons (it is still recommended to fix
	client code, for eventual future iterations)

	session: keep a reference on disconnect
	It is idiomatic for client code to clean up its reference on channel
	disconnection. Keeping a reference during disconnect helps solving
	potential crashes if the session is unref'ed during callbacks.

	session: remove sticky disconnecting flag
	This used to help prevent double-unref when channel were considered part
	of the session as long as they lived. Now it shouldn't be required
	anymore

	channel: deprecate spice_channel_destroy()
	This function is somewhat useless, and dangerous since it is calling
	g_object_unref() behind your back (although this is mentioned in the
	doc, I consider this a bad practice).

	display: don't reschedule stream if disconnected from session
	Avoid the following critical when a channel is disconnected with a
	pending stream (the streams are cleared on channel reset, after
	coroutine exit)

	  (process:17188): GSpice-CRITICAL **: spice_session_get_mm_time: assertion 'session != NULL' failed

	  #0  0x00007ffff71c24e5 in spice_session_get_mm_time (session=0x0) at spice-session.c:1999
	  #1  0x00007ffff71d438c in display_stream_schedule (st=0xa33040) at channel-display.c:1014
	  #2  0x00007ffff71d4a09 in display_stream_render (st=0xa33040,
	      st@entry=<error reading variable: value has been optimized out>) at channel-display.c:1165
	  #3  0x0000003e1944a553 in g_timeout_dispatch (source=0xad64e0, callback=<optimized out>, user_data=<optimized out>) at gmain.c:4520
	  #4  0x0000003e19449aeb in g_main_context_dispatch (context=0x6a32b0) at gmain.c:3111
	  #5  0x0000003e19449aeb in g_main_context_dispatch (context=context@entry=0x6a32b0) at gmain.c:3710
	  #6  0x0000003e19449e88 in g_main_context_iterate (context=0x6a32b0, block=block@entry=1, dispatch=dispatch@entry=1, self=<optimized out>) at gmain.c:3781
	  #7  0x0000003e1944a1b2 in g_main_loop_run (loop=0x97e200) at gmain.c:3975
	  #8  0x0000003e1c9ebb35 in gtk_main () at gtkmain.c:1207
	  #9  0x0000000000430185 in main (argc=1, argv=0x7fffffffdcb8) at virt-viewer-main.c:119

	session: remove channels on disconnect
	A channel is considered to be part of a session as long as it is
	alive. However, this model is problematic, since library user may hold
	channel references, and thus the channel will remain in the
	session. Calling spice_session_disconnect() several time will end up
	calling spice_channel_destroy(), releasing references that aren't owned
	by the session. This usually causes crashes, in particular with language
	bindings that do not deal well with a library model where objects can't
	be referenced at will.

	session: move SpiceSessionPrivate out of headers
	Make sure none of the SpiceSessionPrivate fields are accessed directly anymore

	gtk: do not require glib session private fields
	Use GObject object association for session helpers.

	GtkSession and DesktopIntegration are in the gtk library SpiceSession is
	in glib one. So far we had the SessionPriv structure shared between the
	two libraries, so they could fit their pointers there. But this is no
	longer possible when moving the private structure in .c. We could add
	more accessors, but they would need to be in public API, and this isn't
	supposed to be accessed by API users.

	usb: move device manager initialization to session
	Use session accessors to initialize the device manager.
	Add missing session parameter check (public API).

	webdav: move initialization to session
	Use session accessors to initialize the webdav server

	Rename display_channels_count/n_display_channels

	session: add and use internal accessors
	Avoid dereferencing session private data directly, and use accessors
	instead.

	session: set session for migration when connecting

	session: rename migration_copy/for_migration

	smartcard: use spice_session_is_for_migration()

	smartcard: do not initialize manager for migration session
	The migration session is temporary and shouldn't interact with system.

	Add spice_session_is_for_migration()

	session: protect internal functions against invalid args
	Make sure calling an internal session function returns with an error
	when called with a NULL pointer. This will help channel code when
	it is removed from session before being destructed.

	audio: move spice_audio_get() to session

	audio: add accessor to check if audio is enabled

2014-12-01  Victor Toso  <victortoso@redhat.com>

	audio: Avoid bad pipelines from gst_parse_launch
	gst_parse_launch may return not NULL even when error is set.
	This can lead to data loss when playing or recording audio.

	audio: new-sample callback must return GST_FLOW_OK

2014-12-01  Marc-André Lureau  <marcandre.lureau@gmail.com>

	build-sys: simplify autogen.sh

	build-sys: fix out-of-tree autofoo

2014-11-30  Pavel Grunt  <pgrunt@redhat.com>

	Release keyboard grab using keyboard shortcut
	This commit adds the ability to release the keyboard grab when
	the release keys (ctrl+alt) are pressed and released. It allows
	to use keyboard shortcuts (eg alt+tab, alt+f4) on the client.

	The keyboard is grabbed again when the release keys are pressed
	and released or when the mouse moves.

	https://bugs.freedesktop.org/show_bug.cgi?id=85331

2014-11-27  Fabiano Fidêncio  <fidencio@redhat.com>

	spice-widget: check whether the widget is realized in focus_in_event()
	Returning early on focus_in_event(), when widget is not realized, avoids
	segfault when running on Windows using GTK3.

	Program received signal SIGSEGV, Segmentation fault.
	_gdk_windows_has_impl <window=window@entry=0x0> at gdkwindow.c:584
	<gdb> bt
	 #0  _gdk_window_has_impl (window=window@entry=0x0) at gdkwindow.c:584
	 #1  0x70f02821 in gdk_win32_window_get_handle (window=0x0) at
	     gdkwindow-win32.c:3459
	 #2  0x00c759ef in update_display (display=0x1b18440) at
	     spice-widget.c:1297
	 #3  0x00c77280 in focus_in_event (widget=0x1b18440, focus=0x1b02b68) at
	     spice-widget.c:1462
	 #4  0x665727f5 in ?? () from C:\Program Files\VirtViewer
	     (GTK3)\bin\libgtk-3-0.dll
	 #5  0x00000000 in ?? ()

2014-11-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	migration: delay switch host reconnect
	The following critical happens on switch-host:

	(remote-viewer:4617): GSpice-CRITICAL **: channel_connect: assertion
	'c->sock == NULL' failed

	The critical happens since the main channel reset code calls
	set_agent_connected(), which will yield to main loop, so reconnection
	can't happen after calling spice_channel_disconnect(), and must wait
	until the channel reset completes.

2014-11-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	migration: don't check socket error
	During migration, the original socket is closed before the coroutine
	finishes, so it's not guaranteed that c->sock will still be set when the
	channel is in an error state in spice_channel_iterate().

	coroutine: reference object when signaling
	Before the signal is actually emitted, the channel may be
	released. Let's keep a reference to the object during
	the function time, to prevent the object from being destroyed before
	calling g_signal_emit() or g_object_notify() in main context.

	migration: use spice_session_abort_migration() on error
	Use a more complete method for the job

	migration: remove unnecessary reference

	migration: create the migration session earlier
	The migration session creation may fail. Instead of delaying the session
	creation to the main_connect() callback, do it directly from the message
	handler context, to report failure early to server.

	migration: improve debug log

	migration: remove migration cleanup from dispose
	The spice_session_disconnect() method now calls
	spice_session_abort_migration(), so it is not necessary to do migration
	cleanups in dispose anymore

	migration: set connecting state before fd request
	During migration, the main channel coroutine initiating the process is
	waiting for connection completion of all
	channels. migrate_channel_event_cb() yields back to the main channel
	coroutine once all channels have completed connection, or it will abort
	migration for unexpected channel events, such as SPICE_CHANNEL_CLOSED

	If the migration is cancelled before connection completes, but the
	channels state are still in the SPICE_CHANNEL_STATE_UNCONNECTED state,
	no events will be emitted in channel_disconnect(), and the source
	session main channel will remain frozen waiting for migration completion
	or failure.

	Currently, for client-fd channels, the channel state remains UNCONNECTED
	until the fd is provided. But if cancellation occurs, no channel events
	are emitted and the source session is stuck.

	Before requesting the fd, set the channel state to connecting, so it
	will emit an error if disconnect happens, and it will finish cancelling
	the migration in source session main channel.

	migration: fail with client provided fd
	Currently the fd request is done on the migration session, which is not
	connected with the client session, so the client has no way to provide
	fd for the migration. And the original and migration session ends up
	stuck. Failing early seems the best for now.

	migration: set session migration during connect
	Track the migration session earlier, so that disconnecting before
	migration finished will abort and release it.

	migration: add "connecting" state
	Add a new migration state to track early migration step, when migration
	session is connecting to destination

	migration: abort migrate on disconnect
	If the session has an ongoing migration, but it is disconnected,
	abort it.

	migration: add a few more pre-conditions in migration code
	Those preconditions help to figure out several issues related to
	migration.

	usb: stop processing usb events on error
	If libusb returned an error in the event loop, stop further event
	handling. This avoid spinning in an error loop in error cases.

	audio: use weak references to channel
	The audio channels are currently referenced and released on channel
	close events. However, this event may not happen if the channel never
	was connected. Keeping channels alive also prevent session from
	finishing.

	By not holding the ref, the channel can go to dispose
	when it is no longer needed, and the session can be disposed too.

	Add missing finalize chaining
	Finalize should chain up to the finalize method of the parent class.

	Trivial fix.

	Remove obsolete TODO item
	Tunnel are long obsoleted (did they ever work)
	Remove it from TODO list.

	Pushed unreviewed as trivial

2014-11-19  Fabiano Fidêncio  <fidencio@redhat.com>

	usb-device: Expose libusb device
	As we only can filter USB devices by their Classes and sometimes it is
	not enough (eg: I do not want to have Keyboard and Mouse, but I want to
	have Joysticks, being all of them part of HID Class), let's expose the
	libusb device associated to the SpiceUsbDevice, so the applications can
	have access to whatever information they need, directly from the libusb
	device, to refine their filters.

2014-11-19  Christophe Fergeau  <cfergeau@redhat.com>

	Really fix SndCodec leaks in handle_{playback,record}_start
	The leak fix from commit 6729c341120f was actually not doing anything at
	all as it was setting c->codec to NULL before trying to free it. It was
	also not fixing the exact same leak in the record channel.
	This commit addresses these 2 issues.

	Recheck clipboard size after modifying its data
	SpiceGtkSession::clipboard_received_cb() starts by checking if the
	clipboard is empty, or if the length of its data exceeds
	'max-clipboard-size'.

	Later in that function, the data is modified, and can be shortened
	(removal of trailing '\0' or of '\r' for Windows -> linux copy and
	paste), or enlarged (addition of '\r' for linux -> Windows c&p).

	This commit adds another check that the clipboard length is still valid
	(non-0, and not bigger than 'max-clipboard-size') after making these
	transformations.

	Fix empty clipboard check
	SpiceGtkSession::clipboard_received_cb starts by checking if the
	length of the X selection data is not 0. However, right after this check,
	if gtk_selection_data_get_length() returned -1, it decides it got an
	empty clipboard, sets the selection length to 0, and does not return
	early.
	This commit reworks the len == 0 / len == -1 checks to make sure we
	always return early when we get no data from the clipboard.

2014-11-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Draw server-side pointer when the session has the grab
	If there are several SpiceDisplay widgets, only one will have the grab,
	but the pointer may need to be drawn on another of the displays.  We
	thus need to track the grab status on SpiceSession, not just
	per-display.

	This solves the following bug:
	https://bugs.freedesktop.org/show_bug.cgi?id=38024

	gtk-session: add pointer-grabbed property
	Returns TRUE if the pointer is currently grabbed by this session.

	Add missing G_GNUC_INTERNAL
	Trivial fix

2014-10-31  Christophe Fergeau  <cfergeau@redhat.com>

	Drop glib < 2.28 support
	With el6 now shipping glib 2.28, there is no very good reason to keep
	support for older glib versions alive, especially as it will barely be
	tested.

2014-10-31  Victor Toso  <vtosodec@redhat.com>

	Add GStreamer 1.0 audio support
	Based on Christophe Fergeau's patch.
	To enable audio with GStreamer 1.0: --with-audio=gstreamer1

	There is only a few changes between those versions, worth mentioning:
	- audio capabilities "audio/x-raw,format=..." instead of
	  "audio/x-raw-int,..."
	- appsink signal for new data changed from "new-buffer" to "new-sample"

2014-10-30  Christophe Fergeau  <cfergeau@redhat.com>

	Always use #include "config.h"
	gnulib 'make syntax-check' prohibits use of #ifdef HAVE_CONFIG_H so this
	commit removes it from where it's used. It also makes sure we always use
	the same syntax for including config.h (#include "config.h" VS #include
	<config.h>) as a consistent way of doing that is expected.

	Remove spice-mime.xml/spicy.desktop
	They were never translated from .in files to actual files, and now it's
	clear we don't want to promote spicy as a first-class desktop
	application.

	Fix "can not" typo in comment

	Remove redundant use of const
	const guint16 const * has one extra 'const' which is removed by that
	commit

	Remove trailing whitespace

	Remove blank lines at end of files

	Add missing (C) to Red Hat copyright line
	gnulib's make syntax-check comes with a rule enforcing that Red Hat
	copyright lines contain both "(C)" and "Copyright".

	Add quoting around AC_DEFINE* first argument

	build-sys: Don't use test -a/-o
	They are not portable, it's recommended to use test && test or test ||
	test instead

2014-10-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	mailmap: add Dietmar Maurer

	build-sys: add some missing MAINTAINERCLEANFILES

	build-sys: generate gitignore in tests dir

	build-sys: change default libtool options
	- disable-static: it's quite uncommon to use static build of gtk libraries
	- win32-dll: the shared libs build cleanly for win32 already

2014-10-29  Christophe Fergeau  <cfergeau@redhat.com>

	Regenerate symbol files with make update-symbol-files
	Some symbols were manually added to these files not in the right place
	(non-alphabetical order). This causes spurious diffs when trying to
	compare these files with the ones make update-symbol-files would
	generate.
	This commit syncs these file with the ones which are autogenerated to
	spot more easily differences between the file in git and the
	autogenerated one.

	Tell ctags to ignore G_GNUC_CONST in declarations
	Without that, it will fail to parse:
	GType spice_uri_get_type(void) G_GNUC_CONST;

	Remove spice_gtk_session_sync_keyboard_modifiers from public headers
	It's not meant to be exported as it's not listed in spice-gtk symbol map file.

	Add spice_session_get_proxy_uri to spice-glib-sym-file
	It was only added to map-file.

	Update spice-common submodule
	This picks up some warning fixes.

	Update NEWS

	Don't strip \0 from non-text clipboard data
	Commit a8f2e2d added recomputation of the length of clipboard data to
	strip the trailing \0 in order to avoid a Windows gtk+ bug. However it's
	doing it too for non-text data, which causes issues when copying images
	as they are very likely to contain \0 within their data. They will thus
	be truncated.

	This fixes https://bugzilla.redhat.com/show_bug.cgi?id=1154719

	Reindent block of code in clipboard_received_cb
	This is in preparation for fixing a regression in image copy&paste. This
	commit only introduces a new (unused) block and reindent the
	corresponding code, it can easily be reviewed with git show -w

2014-10-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: make vapigen silent

	build-sys: clean-up generated vapi files

	build-sys: remove unnecessary BUILT_SOURCES rule

	build-sys: add extra dependencies on symbols files
	Whenever the symbols files are modified, rebuild the library.

	build-sys: s/GLIB_VERSION/GLIB_SYMBOLS

2014-10-27  Daniel P. Berrange  <berrange@redhat.com>

	Fix macro for checking spice version numbers
	As it is for now, the micro number is never checked.

2014-10-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: hide cursor when ungrabbed
	Let's avoid confusion of multiple pointers visible on the client
	desktop: hide the guest pointer if the spice client doesn't have the
	grab, display it again when the grab is taken back.

	gtk: keep cursor in the same place on ungrab
	On ungrab, the transition from remote (server-side) cursor to host
	cursor makes it jump somewhere else rather than staying at the same
	place. Restore cursor position on ungrab to match with guest position.

	https://bugs.freedesktop.org/show_bug.cgi?id=85117

2014-10-23  Christophe Fergeau  <cfergeau@redhat.com>

	Fix SndCodec leak in playback_handle_start()
	An audio SpiceChannel can get several times the 'start' message during
	its lifetime. If received multiple times (for example when rebooting a
	VM), this would lead to a SndCodec leak as reported by valgrind:

	==7749== 27,036 (48 direct, 26,988 indirect) bytes in 1 blocks are definitely lost in loss record 11,418 of 11,440
	==7749==    at 0x4A08946: calloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
	==7749==    by 0x5772A9A: spice_malloc0 (mem.c:109)
	==7749==    by 0x5772D42: spice_malloc0_n (mem.c:173)
	==7749==    by 0x57FB3E2: snd_codec_create (snd_codec.c:267)
	==7749==    by 0x573774C: playback_handle_start (channel-playback.c:380)
	==7749==    by 0x5721E44: spice_channel_handle_msg (spice-channel.c:2859)
	==7749==    by 0x571ECB3: spice_channel_recv_msg (spice-channel.c:1877)
	==7749==    by 0x571F402: spice_channel_iterate_read (spice-channel.c:2114)
	==7749==    by 0x571F614: spice_channel_iterate (spice-channel.c:2152)
	==7749==    by 0x5720411: spice_channel_coroutine (spice-channel.c:2429)
	==7749==    by 0x575CD3A: coroutine_trampoline (coroutine_ucontext.c:63)
	==7749==    by 0x575C9F4: continuation_trampoline (continuation.c:55)
	==7749==    by 0x3898E47FEF: ??? (in /usr/lib64/libc-2.20.so)
	==7749==    by 0xAED547666C92C2FF: ???
	==7749==    by 0xFFEFFF92F: ???

2014-10-10  Cole Robinson  <crobinso@redhat.com>

	m4: Update manywarnings from gnulib
	Fixes these noisy errors on Fedora 21:

	gcc: warning: switch '-Wmudflap' is no longer supported

2014-10-10  Fabiano Fidêncio  <fidencio@redhat.com>

	Add support to handle username when connecting with SASL
	Based on a patch from Dietmar Maurer <dietmar@proxmox.com>
	http://lists.freedesktop.org/archives/spice-devel/2013-October/015138.html

	Add errors related to the SASL auth
	SPICE_CLIENT_ERROR_AUTH_* will be used to set more detailed errors
	with respect to the main channel event SPICE_CHANNEL_ERROR_AUTH.

	Add missing doc for SPICE_CLIENT_USB* errors

2014-10-10  Dietmar Maurer  <dietmar@proxmox.com>

	Add "username" property to SpiceSession

2014-09-18  Christophe Fergeau  <cfergeau@redhat.com>

	Don't report IO error on clean guest shutdown
	Since commit 9cf9ca434, spice_channel_iterate() will report a
	SPICE_CHANNEL_ERROR_IO error to library users when
	SpiceChannel::has_error is set. In particular, when the server side
	closes its SPICE sockets because the VM is being shut down, an IO error
	will get reported. Prior to this change, a channel-closed event was
	reported on graceful VM shutdowns as there was
	a g_socket_condition_check() guarding the emission of the IO error
	signal.

	This commit readds the g_socket_condition_check() test, but only when
	SpiceChannel::has_error is set.

	This fixes https://bugs.freedesktop.org/show_bug.cgi?id=83692

2014-09-18  Pavel Grunt  <pavel.grunt@gmail.com>

	Fix -Wsign-compare

2014-09-18  Fabiano Fidêncio  <fidencio@redhat.com>

	channel-main: allow transferring multiple files at once
	Allow to drag and drop, from host to guest, more than one file at the
	same time.

2014-09-05  Christophe Fergeau  <cfergeau@redhat.com>

	win-usb: Initialize GError before using it
	GError variables must be set to NULL before passing them to a function
	which might set them.
	This fixes the runtime warning reported in rhbz#1138195:

	(remote-viewer.exe:3896): GLib-WARNING **: GError set over the top of a
	previous GError or uninitialized memory.
	This indicates a bug in someone's code. You must ensure an error is NULL
	before it's set.
	The overwriting error message was: handle_dev_change: Error getting
	device list from libusb: Other error [-99]

2014-08-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	xfer: send data message of size 0 for 0-size file
	Make sure we send a xfer data message for 0-size files.
	This avoid leaking file descriptiors in guest agent when
	copying such files.

	Reported-by: Cody Chan <int64ago@gmail.com>

	https://bugzilla.redhat.com/show_bug.cgi?id=1135099

2014-08-28  Jonathon Jongsma  <jjongsma@redhat.com>

	Wait to send monitor config until agent caps are received
	When the first display is disabled and the vdagent is restarted in the guest,
	it sometimes becomes enabled. This appears to be caused by a race condition
	when an agent becomes connected. When the agent becomes connected, virt-viewer
	triggers a display update (spice_main_send_monitor_config()). This display
	update happens in a timeout handler, but the timeout interval is set to 0 (so
	it behaves basically like an idle handler).

	The race happens because spice_main_send_monitor_config() behaves slightly
	differently depending on the agent's capabilities. And sometimes the idle
	handler runs before the client and server have negotiated capabilities. In this
	case, we have to assume that the server does not support sparse monitor
	configurations. So instead of sending down an update where display #0 is off
	and display #1 is WxH, we send down an update that only a single display:
	display #0 is WxH. This results in the first display becoming enabled.

	To solve the issue, we wait until the agent negotiates capabilities
	before sending the display configuration message.

	Resolves: rhbz#1043782, rhbz#1032923

2014-08-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: fix coroutine assertion when switching to TLS port
	Since v0.21-35-gbaa51c5, there are some new coroutine preconditions.

	The winfiber implementation can reach, when the structure isn't cleared,
	which happens when switching channel connection to TLS port and the
	coroutine is recycled.

	CRITICAL **: coroutine_yieldto: assertion '!to->exited' failed

	In a near future, it would be nice to use the safer implementation
	proposed for glib, see bgo#719362 (using a private copy)

2014-08-13  Christophe Fergeau  <cfergeau@redhat.com>

	Use G_OS_WIN32 #define everywhere
	Currently some parts of the windows specific code is checking for the
	WIN32 define, and other parts are checking G_OS_WIN32. This commit uses
	G_OS_WIN32 everywhere for consistency.

2014-08-13  Cody Chan  <int64ago@gmail.com>

	keyboard: wrong defined macro for WIN32
	On windows client, there's no effect for guest when
	enabling CAPS_LOCK/NUM_LOCK/SCROLL_LOCK on
	(because of the delay, guest may take the effect for several seconds).
	There's a wrong defined macro, then <modifiers> is ALWAYS 0,
	and the keyboard state of guest is synchronized with the state client
	by spice_gtk_session_sync_keyboard_modifiers_for_channel(...).

2014-08-13  Christophe Fergeau  <cfergeau@redhat.com>

	Fix 'loose' typo

	Fix build with automake 1.14
	When building a source file from a different directory, automake 1.14
	is warning that the automake option 'subdir-objects' must be used:

	automake: warnings are treated as errors
	gtk/Makefile.am:218: warning: source file
	'$(top_srcdir)/spice-common/common/sw_canvas.c' is in a subdirectory,
	gtk/Makefile.am:218: but option 'subdir-objects' is disabled
	automake: warning: possible forward-incompatibility.
	automake: At least a source file is in a subdirectory, but the
	'subdir-objects'
	automake: automake option hasn't been enabled.  For now, the
	corresponding output
	automake: object file(s) will be placed in the top-level directory.
	However,
	automake: this behaviour will change in future Automake versions: they
	will
	automake: unconditionally cause object files to be placed in the same
	subdirectory
	automake: of the corresponding sources.
	automake: You are advised to start using 'subdir-objects' option
	throughout your
	automake: project, to avoid future incompatibilities.
	autoreconf: automake failed with exit status: 1

	This causes the build to fail because we are also using the -Werror
	automake option.
	Updating the spice-common submodule to git master fixes part of this
	issue as 7ea1cc5 'Fix generation of marshallers in VPATH builds' removed
	directory references from some source files.

	This commit removes the references to
	$(top_srcdir)/spice-common/common/sw_canvas.[ch] from gtk/Makefile.am.
	At this point, automake subdir-objects support does not seem to cope
	very well with source files which are not in relative subdirectories,
	see http://mytestbed.net/issues/1327
	What is done instead is to add some local client_sw_canvas.[ch] files
	which will include the needed files from spice-common with the
	appropriate #define set (these sw_canvas.[ch] files are meant to be used
	as templates).

	This fixes https://bugs.freedesktop.org/show_bug.cgi?id=67304

	channel-display: Remove #ifdef SW_CANVAS_CACHE
	It's unconditionnally defined at build time in the global CPP flags, so
	the #ifdef SW_CANVAS_CACHE are always enabled and can be removed.

	Ensure '\0' is not part of text clipboard data
	On Windows, with some versions of gtk+, GtkSelectionData::length
	will include the final '\0'.
	When a string with this trailing '\0' is pasted in some linux
	applications, it will be pasted as <NIL> or as an invisible character,
	which is unwanted.

	This commit ensures the length we send to the agent does not
	include any trailing '\0'.

	https://bugzilla.redhat.com/show_bug.cgi?id=1090122

2014-07-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update spice-common

2014-07-23  Fabiano Fidêncio  <fidencio@redhat.com>

	Don't use _GET_PRIVATE all the time
	Let's make use of the priv members in the structs, which are much much
	faster. Also, to keep the type-safety, the SPICE_IS_* macros were added
	in the public methods affected by this patch.

	Patch based on an old patch from Alexander Larsson (alexl@redhat.com).

	Prefer using g_malloc0()/g_free()
	As we already depend on GLib, let's use g_{malloc,new}0() instead of the
	standard malloc() or the spice_{malloc,new}*() and g_free() instead of
	the standard free() when possible.
	Memory allocated by other libraries using malloc() should still be freed
	by free().
	As a side effect of the changes, we are muting a few warnings caught by
	coverity.

	Fix "REVERSE_INULL" caught by coverity

	g_type_init() is deprecated in GLib 2.36

2014-07-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: prefix proxy lookup errors
	Proxy errors are already reported with G_IO_ERROR_PROXY messages,
	however proxy name lookup error can be more detailed.

	https://bugzilla.redhat.com/show_bug.cgi?id=1115986

2014-06-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	proxy: use http proxy by default if no scheme given
	SPICE_PROXY used to accept URI without scheme, falling back on
	http/3128. This is a regression introduced with 5dcab09ac

2014-06-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Remove coroutine trampolines
	Use va_list instead of an ugly trampoline hack

	usbredir: don't use emit_main_context() for non-signal code
	The following patch deprecates the signal helper code

2014-05-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	README: add vala-tools build-dep

2014-05-22  Tiziano Müller  <tiziano.mueller@stepping-stone.ch>

	Add missing GIO_LIBS to libspice-client-glibs
	If spice-gtk is built without PHODAV, libgio is missing from the list of
	libraries to link against, causing undefined symbols for all gio functions.

2014-05-21  Tiziano Müller  <tiziano.mueller@stepping-stone.ch>

	Do not depend on libsoup directly
	The libsoup-dependency is not directly used but comes in as a dependency
	of phodav and phodav has libsoup correctly recorded in its pkg-config
	file.

	Introduce --enable/disable-webdav option
	This makes the phodav dependency configureable.
	And name it after the corresponding channel.

2014-05-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Revert "clipboard: prevent reentering main loop if main channel is busy"
	This change broke primary clipboard copying from remote to client, on win32.

	There is a pending ::clipboard-grab emission, so the channel is not
	idle, and it will handle emission and resume in the inner loop without
	issue. We should really handle this situation with care though, and the
	best would be to teach gtk+ to do async clipboard request.

	This reverts commit e3efa8cec51045d87a14a7e4f921c24ad5caffb1.

2014-05-15  Marc-André Lureau  <marcandre.lureau@gmail.com>

	clipboard: check that clipboard request does not belong to remote
	Check clipboard owner, to avoid cyclic dependency of clipboard requests.

	clipboard: prevent reentering main loop if main channel is busy
	The main channel must be idle to avoid entering the nested loop,
	or it will never reach the condition to leave it.

	This should not happen. It can happen currently when the remote sends a
	clipboard request while the clipboard is grabbed by the remote. In this
	case, while the clipboard-request signal is emitted by main channel, the
	clipboard_get() loop is entered, but the main coroutine will not be
	woken up to proceed with the request, the main channel will remain
	"frozen" and it won't be possible to leave cleanly from the inner loop.
	The application appears to be frozen, because it can't quit properly.

	Related to:
	https://bugzilla.redhat.com/show_bug.cgi?id=1083489

2014-04-29  Christophe Fergeau  <cfergeau@redhat.com>

	Include glib-compat.h in spice-option.c
	Commit 8c89485 added a call to g_clear_pointer().

2014-04-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	option: check that default ca-file exists
	Don't set default ca-file path if the file doesn't exists.

2014-04-23  Marc-André Lureau  <marcandre.lureau@gmail.com>

	option: use more portable default ca-file path
	If no CA path is given, a default one is set. Use g_build_filename() to
	set a more portable and valid default path.

2014-04-17  Christophe Fergeau  <cfergeau@redhat.com>

	Fix leak in spice_gtk_session_sync_keyboard_modifiers()
	The list of channels returned by spice_session_get_channels()
	must be freed after use.

2014-04-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: signal primary-destroy when clearing all surfaces
	When destroying the primary surface, we need to signal it, since
	listeners might be referencing the data pointer. Currently, this only
	happens during channel finalize().

	This could help with rhbz#1082555.

	gtk-session: always sync modifiers for client events
	The channel state is not synchronous.

	It may happen that we want to set and unset quickly a modifier, but the
	guest modifier state hasn't been updated yet, and will still be seen as
	unset, preventing the last unset change.

	gtk-session: s/g_debug/CHANNEL_DEBUG

2014-04-15  Christophe Fergeau  <cfergeau@redhat.com>

	Include gtk-compat.h in spice-gtk-session.c
	GDK_IS_X11_DISPLAY is not available on gtk+ 2.x, but it already has a
	fallback definition in gtk-compat.h

	Gather gtk+ compatibility code in a single file
	There are gtk+ version checks in several source files to add
	compatibility implementations of gtk3 functions not available
	in gtk2. This commit gathers all of them in a gtk-compat.h header,
	similar to what is done for glib-compat.h

	Add compat implementation of g_queue_free_full()
	This was introduced in glib 2.32 and the webdav channel uses it.

2014-04-08  Christophe Fergeau  <cfergeau@redhat.com>

	Use correct printf format modifier for gssize
	This fixes this warning/error:

	channel-webdav.c: In function 'demux_to_client':
	channel-webdav.c:318:5: error: format '%ld' expects argument of type 'long
	int', but argument 5 has type 'gssize' [-Werror=format=]
	     CHANNEL_DEBUG(self, "pushing %ld to client %p", size, client);

	Add man page
	Spice-GTK provides SPICE-specific command line options. This man page
	describes these options as well as the format of SPICE URIs.

2014-04-03  Jonathon Jongsma  <jjongsma@redhat.com>

	Use GdkKeymap to listen for keyboard modifier changes
	Connect to the GdkKeymap::state-changed signal to detect when the client
	keyboard modifiers have changed. This keeps the client and the guest in sync
	even when the SpiceDisplay widget isn't focused. New values are only sent down
	to the guest if the new value is different than the current value.

	Ensure keyboard modifiers are synchronized properly
	In certain circumstances, the keyboard modifiers get out-of-sync between the
	guest and the client. This is easy to reproduce with the following steps:
	 - launch virt-viewer with a guest that is not running
	 - start the guest
	 - while guest is booting, enable CAPS LOCK on the client
	 - after guest finishes booting, it will set its modifiers to a default value
	   (e.g. numlock on, capslock off)
	 - now capslock is OFF in the guest, but ON in the client
	 - toggle caps lock
	 - now capslock is ON in the guest, but OFF in the client

	This moves the responsibility for synchronizing client and guest modifiers into
	SpiceGtkSession. It can't be handled easily within the SpiceDisplay widget since
	there can be multiple display widgets for each inputs channel.

	A new function (spice_gtk_session_sync_keyboard_modifiers()) was added so that
	synchronization can be triggered manually if desired. But it also registers a
	signal handler for the InputsChannel::inputs-modifiers signal to detect when the
	guest has changed its modifiers. The signal handler simply overrides the guests
	modifiers and sets them back to the value from the client.

2014-04-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update NEWS for v0.25

	Make phodav an optional external dependency
	Now that upstream provides a stable/versioned API, it will be
	easier to deal with than with submodules.

	build-sys: re-organize summary to show major info first

	build-sys: add missing soup subst

2014-03-31  Jonathon Jongsma  <jjongsma@redhat.com>

	Fix missing SPICE_GTK_MICRO_VERSION value
	configure.ac tries to assign a default value of 0 to the micro version if it's
	empty, but the shell variable assignemnt doesn't work because there's whitespace
	around the '=' sign.

	This results in SPICE_GTK_MICRO_VERSION being defined to (), which causes a
	compilation failure in files that include it.

2014-03-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update NEWS for v0.24

	Update phodav

2014-03-25  Christophe Fergeau  <cfergeau@redhat.com>

	Advertise SASL cap from client
	A client setting this capability indicates to the server that it's able
	to handle SASL authentication, and it also indicates that if SASL is
	to be used for authentication, then it won't expect a valid 'pub_key' field
	in SpiceLinkReply.

	The reason for making guarantees about not looking at the pub_key field is
	that its presence and size is hardcoded in the protocol, but in some
	hardened setups (using fips mode), generating a RSA 1024 bit key as
	expected is forbidden and fails. With this new capability, the server
	knows the client will be able to handle SASL if needed, and can skip
	the generation of the key altogether. This means that on the setups
	described above, SASL authentication has to be used.

2014-03-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	webdav: use some more explicit names
	Address Alon's review from
	http://lists.freedesktop.org/archives/spice-devel/2014-March/016383.html

2014-03-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Start NEWS file

	session: add shared-dir property and option
	Allow to specify the shared directory from the command line, or at
	runtime via properties. (still default to xdg public share, if none
	specified)

	Add webdav channel
	See spice-common for protocol details.  phodav, a webdav server library,
	is imported thanks to a submodule, until this project has a stable API
	and releases.

	The webdav channel is reponsible for handling port events and
	multiplexing the request streams. Extra care has been made to avoid
	blocking and to enable some fairness between concurrent streams, however
	this has been particularly tricky and is likely to have some issues
	left.

	The webdav server is run in a seperate thread, using libsoup. The client
	communication is done via a local tcp socket, but protected to only
	accept local connection and with a pretty strong password.

	The home directory is exported for the remote to browse, which seems to
	be a sensible default atm.

2014-03-18  Christophe Fergeau  <cfergeau@redhat.com>

	mingw64: Fix gssize printf-format warnings
	When building with mingw64, several warnings about using the wrong format
	specifier for gssize/gsize occur similar to:

	win-usb-dev.c: In function 'g_udev_client_list_devices':
	win-usb-dev.c:145:21: error: format '%i' expects argument of type 'int', but argument 7 has type 'gssize' [-Werror=format=]
	                     name, errstr, rc);

	This commit makes use of the G_GSIZE_FORMAT/G_GSSIZE_FORMAT macros provided
	by glib to silence these warnings.

	I've checked that this does not introduce new warnings on linux and mingw32
	builds.

2014-03-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix spice_display_get_pixbuf() with offset area
	Fix screenshot of secondary displays, with an area position != (0,0).

	This has never been working correctly since the surface display "area"
	was introducted in:

	commit e3bb7b1cfd162fcb8943e9d582dab43eeec6ce41
	Author: Marc-André Lureau <marcandre.lureau@redhat.com>
	Date:   Tue Jun 12 19:24:47 2012 +0200

	    display: learn to restrict display to an area

	https://bugzilla.redhat.com/show_bug.cgi?id=1029761

	Silence some gcc warnings
	cc1: warnings being treated as errors
	spice-uri.c: In function ‘spice_uri_parse’:
	spice-uri.c:105: error: ‘saveptr’ may be used uninitialized in this
	function [-Wuninitialized]
	spice-uri.c:105: error: ‘saveptr2’ may be used uninitialized in this
	function [-Wuninitialized]

2014-03-13  Christophe Fergeau  <cfergeau@redhat.com>

	sasl: Rework memory handling in spice_channel_perform_auth_sasl()
	While looking at the SASL code, I noticed some memory leaks in error paths.
	This commit adds a cleanup: block to free some of the memory dynamically
	allocated in that function, and remove the corresponding g_free() from
	the regular code flow. This should ensure that both the regular path
	and the error paths free the same memory.

	This fixes at least this 'mechlist' leak which I got during regular SASL
	PLAIN authentication:
	==3452== 6 bytes in 1 blocks are definitely lost in loss record 140 of 11,706
	==3452==    at 0x4A0645D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.s
	==3452==    by 0x35BAC4EE6E: g_malloc (gmem.c:104)
	==3452==    by 0x5BF7CAA: spice_channel_perform_auth_sasl (spice-channel.c:1440)
	==3452==    by 0x5BF9033: spice_channel_recv_link_msg (spice-channel.c:1727)
	==3452==    by 0x5BFAECD: spice_channel_coroutine (spice-channel.c:2348)
	==3452==    by 0x5C35D6D: coroutine_trampoline (coroutine_ucontext.c:63)
	==3452==    by 0x5C35A1B: continuation_trampoline (continuation.c:51)
	==3452==    by 0x31342479BF: ??? (in /usr/lib64/libc-2.18.so)
	==3452==    by 0x75F2940591224CFF: ???
	==3452==    by 0xE756E5F: ???
	==3452==    by 0xE7589BF: ???
	==3452==    by 0xFFEFFF78F: ???
	==3452==    by 0x5BFCD92: g_io_wait_helper (gio-coroutine.c:43)
	=

	Make sure config.h is included first in all .c files
	This is recommended by autoconf documentation
	http://nondot.org/sabre/Mirrored/autoconf-2.12/autoconf_3.html#SEC15
	and some #defines in config.h can change what happens in system headers,
	so config.h has to be included first.

	The only file which does not get this treatment is
	gtk/spice-client-gtk-module.c as this breaks the build on gtk+2:

	CC       SpiceClientGtk_la-spice-client-gtk-module.lo
	In file included from /usr/include/python2.7/pyconfig.h:6:0,
	                 from /usr/include/python2.7/Python.h:8,
	                 from /usr/include/pygtk-2.0/pygobject.h:5,
	                 from spice-client-gtk-module.c:20:
	/usr/include/python2.7/pyconfig-64.h:1182:0: error: "_POSIX_C_SOURCE" redefined [-Werror]
	 #define _POSIX_C_SOURCE 200112L
	 ^
	In file included from /usr/include/limits.h:25:0,
	                 from /usr/lib/gcc/x86_64-redhat-linux/4.8.2/include/limits.h:168,
	                 from /usr/lib/gcc/x86_64-redhat-linux/4.8.2/include/syslimits.h:7,
	                 from /usr/lib/gcc/x86_64-redhat-linux/4.8.2/include/limits.h:34,
	                 from /usr/lib64/glib-2.0/include/glibconfig.h:11,
	                 from /usr/include/glib-2.0/glib/gtypes.h:34,
	                 from /usr/include/glib-2.0/glib/galloca.h:34,
	                 from /usr/include/glib-2.0/glib.h:32,
	                 from /usr/include/glib-2.0/gobject/gbinding.h:30,
	                 from /usr/include/glib-2.0/glib-object.h:25,
	                 from ./glib-compat.h:24,
	                 from ../config.h:201,
	                 from spice-client-gtk-module.c:18:
	/usr/include/features.h:228:0: note: this is the location of the previous definition
	 #  define _POSIX_C_SOURCE 200809L
	 ^
	cc1: all warnings being treated as errors

2014-03-10  Christophe Fergeau  <cfergeau@redhat.com>

	build-sys: Fix setting of SPICE_GTK_MICRO_VERSION
	After e124a3b2e which added the SPICE_GTK_CHECK_VERSION macro, a non-fatal
	'./configure: line 15251: x24: command not found' appears in configure
	output. This is because [ ] is not interpreted as the 'test' command by
	autoconf, but is rather used as a way to quote configure.ac content.
	This commit replaces the use of [] with a more typical AS_IF.

2014-02-27  Christophe Fergeau  <cfergeau@redhat.com>

	Add missing #include "glib-compat.h"
	wocky-http-proxy.c and vmcstream.c make use of functions that were
	not available in glib 2.26 so we need fallback for them through
	glib-compat.h or spice-gtk won't build with older glibs.

2014-02-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: fix crash when releasing primary surface
	Since 1fcaaa15f8aca362f9e6afc87fb43cfbccf6ff62, display_surface is
	allocated using gslice. However MSG_DISPLAY_MODE handler didn't allocate
	using GSlice. This can eventually lead to a crash when freeing, such as:

	Thread no. 1 (6 frames)
	 #2 g_slice_free1 at gslice.c:1097
	 #3 iter_remove_or_steal at ghash.c:787
	 #4 clear_surfaces at /lib64/libspice-client-glib-2.0.so.8
	 #5 spice_display_channel_finalize at
	 /lib64/libspice-client-glib-2.0.so.8
	 #7 spice_channel_delayed_unref at /lib64/libspice-client-glib-2.0.so.8
	 #12 gtk_main at gtkmain.c:1158

	https://bugzilla.redhat.com/show_bug.cgi?id=1069546

2014-02-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add a SPICE_GTK_CHECK_VERSION macro

2014-02-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	spice-common: revert last change

	session: add spice_session_get_proxy_uri()
	Learn to return the currently configured proxy, to allow
	client to tweak parameters, such as username and password.

	channel: add spice_channel_get_error()
	Add a function to retrieve the last GError from a channel, this may be
	useful to provide additional error details to the client.

	Make SpiceURI a public API
	Generalize a little bit SpiceProxy to allow easy URI manipulation by
	clients.

	channel: talk to giostream instead of gsocket

	channel: simplify has error code
	Get rid of a superflous g_socket_condition_check().

	openssl: learn to handle a new kind of BIO based on GIOStream
	Although reusing BIO_new_socket() once again is a hack, it seems
	to be the easiest way... The proper solution is certainly to start
	using GTls instead, but that will require a glib 2.28 dep bump.

	Fill g_proxy_address_new() with protocol, user and password
	This way, the call might eventually support more proxy and
	authentication.

	http-proxy: add https proxy
	This will require glib 2.28 for GTls support, atm

	spice-proxy: parse https protocol

	http-proxy: specify Basic scheme
	Or Squid will fail with:
	WARNING: Unsupported or unconfigured/inactive proxy-auth scheme

	proxy: parse user and pass from uri

	proxy: add user and pass properties

	proxy: split uri with : in only 2 parts
	We want just host:port here.

	compat: add strtok_r fallback
	The following Spice proxy URI parsing code makes use of it, but it is
	not available on Windows

	Origin:
	http://git.videolan.org/gitweb.cgi/vlc.git/?p=vlc.git;a=blob;f=compat/strtok_r.c

	misc: indent wocky proxy with 2-spaces

	misc: make warning more explicit

	Add SpiceVMC GIOStream
	This allows to use conveniently GIOStream APIs without caring about
	coroutine and Spice messages details.

	channel: add spice_vmc_write_async()
	Refactor port code to create a private GIO async function that can send
	SPICE_MSGC_SPICEVMC_DATA message over any channel.

2014-02-20  Christophe Fergeau  <cfergeau@redhat.com>

	build-sys: Don't build tests when not building static libs
	The tests rely on static linking in order to get access to symbols which
	are not exported in spice-gtk shared libraries. When build of static
	libraries is disabled with --disable-static, we should not attempt to build
	the tests as this will result in link errors.

2014-02-10  Christophe Fergeau  <cfergeau@redhat.com>

	Don't attempt to send 0 scancode when releasing keys
	When releasing all keys, we send a key release for scancode in the
	key_state array, including the very first element with scancode 0.
	send_key() complain when the scancode is 0, so make sure we don't call it
	for this first element.

	This fixes a
	(remote-viewer:25548): GSpice-CRITICAL **: send_key: assertion 'scancode != 0' failed
	warning when starting remote-viewer windowed, and then switching to another
	desktop client-side using ctrl+alt+arrow.

2014-02-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.23

2014-02-10  Ryan Lortie  <desrt@desrt.ca>

	utils tests: fix sign comparison problem
	This test compares a guint8 and a gchar with '==' which fails when comparing
	240 to -16, even though these are the same byte value.  Add an explicit
	'guchar' cast to correct the problem.

	https://bugs.freedesktop.org/show_bug.cgi?id=74754

2014-02-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: don't track open_host_idle source id
	In all cases, when the coroutine is resumed, the idle source has been
	running and thus will be removed. Doing it a second time results in the
	wrong source being removed or an invalid source warning.

	spicy: do not flush and disconnect all kind of ports
	Some ports may want to live a bit longer, such as following webdav.

	port: send opened a port-event signal on init
	If the port is already opened, emit a "opened" port-event on init. This
	simplifies user code to only handle port events.

	test: fix a few compiler warnings
	util.c: In function 'test_set_bit':
	util.c:131:13: warning: pointer targets in initialization differ in signedness [-Wpointer-sign]

	Add GDBus version of dbus-glib code

	Narrow dbus-glib code, to fit other implementation easily

	dbus: remove priv->dbus_conn
	It's only needed once, and it is better to group with rest of dbus-glib
	code.

	build-sys: detect GDBus

	misc: sed -i -e 's/USE_DBUS/USE_DBUS_GLIB/g'

2014-01-07  Christophe Fergeau  <cfergeau@redhat.com>

	Use local GError in spice_convert_newlines()
	spice_convert_newlines() declares a local 'err' GError but never uses it as
	the function directly uses the 'error' variable passed as an argument.
	Use 'err' throughout the function instead of the 'error' argument as this
	looks like what was intended.
	This fixes this coverity warning:

	Error: DEADCODE (CWE-561): [#def144]
	spice-gtk-0.22.9-fb3d/spice-gtk3-0.22.9/gtk/spice-util.c:318: assignment: Assigning: "err" = "NULL".
	spice-gtk-0.22.9-fb3d/spice-gtk3-0.22.9/gtk/spice-util.c:364: null: At condition "err", the value of "err" must be NULL.
	spice-gtk-0.22.9-fb3d/spice-gtk3-0.22.9/gtk/spice-util.c:364: dead_error_condition: The condition "err" cannot be true.
	spice-gtk-0.22.9-fb3d/spice-gtk3-0.22.9/gtk/spice-util.c:365: dead_error_begin: Execution cannot reach this statement "g_propagate_error(error, err);".

2014-01-03  Christophe Fergeau  <cfergeau@redhat.com>

	controller: Don't call g_type_init() in test with newer glib
	g_type_init() is deprecated, calling it on newer glib causes a compile-time
	warning.

	controller: Add missing #ifdef WIN32 in test
	The spicec_pid variable is only used in a #ifdef WIN32 block, but it was
	unconditionnally declared/initialized. This causes a gcc warning.

	controller: Avoid out of string bound accesses in test
	When computing the amount of data to send for static strings, the test
	program is confusing sizeof() which returns the size of the string
	including the trailing '\0' and strlen() which returns the size of the
	string without the trailing '\0'.
	This causes attempts to access one byte past the string.
	This fixes this coverity warning:
	Error: OVERRUN (CWE-119): [#def44]
	spice-gtk-0.20/spice-gtk-0.20/gtk/controller/test.c:258:
	overrun-buffer-arg: Overrunning array ""main,inputs,playback"" of 21 bytes
	by passing it to a function which accesses it at byte offset 21 using
	argument "22UL".
	spice-gtk-0.20/spice-gtk-0.20/gtk/controller/test.c:101:5:
	access_dbuff_in_call: Calling "memcpy(void * restrict, void const *
	restrict, size_t)" indexes array "data" with index "data_size".

	cursor: Avoid potential sign extension issue
	When doing arithmetic operations on the uint16_t cursor width and height
	with integer constants, the result of the operation will be of type 'int'
	as the integer constant as type 'int'.
	There are 2 places which assign the result of such an operation to
	an (unsigned 64 bit)) size_t variable. This means that if width/height are
	big enough, the int -> size_t conversion would cause a sign extension to
	happen, which is unwanted as we are only manipulating positive values.

	This commit explicitly mark the constants with the correct unsigned type.
	This fixes this kind of coverity warnings:

	spice-gtk-0.20/spice-gtk-0.20/gtk/channel-cursor.c:388: sign_extension:
	Suspicious implicit sign extension: "hdr->height" with type "unsigned
	short" (16 bits, unsigned) is promoted in "4 * hdr->width * hdr->height" to
	type "int" (32 bits, signed), then sign-extended to type "unsigned long"
	(64 bits, unsigned).  If "4 * hdr->width * hdr->height" is greater than
	0x7FFFFFFF, the upper bits of the result will all be 1.

2014-01-02  Jeremy White  <jwhite@codeweavers.com>

	Add support for the Opus codec.

	Don't emit start signals if codec creation fails.

	Use the new snd_codec interface to process encoded audio.

2013-12-12  David Jaša  <djasa@redhat.com>

	Use TLS version 1.0 or better
	When creating a TLS socket, both spice-server and spice-gtk currently
	call SSL_CTX_new(TLSv1_method()). The TLSv1_method() function set the
	protocol version to TLS 1.0 exclusively. The correct way to support
	multiple protocol versions is to call SSLv23_method() in spite of its
	scary name. This method will enable all SSL/TLS protocol versions. The
	protocol suite may be further narrowed down by setting respective
	SSL_OP_NO_<version_code> options of SSL context.  This possibility is
	used in this patch in order to block use of SSLv3 that is enabled by
	default in openssl for client sockets as of now but spice has never used
	it.

2013-12-09  Marc-André Lureau  <marcandre.lureau@gmail.com>

	coroutine: add missing glib.h include

2013-12-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix giscan warnings, add missing signal doc
	  GISCAN   SpiceClientGLib-2.0.gir
	channel-main.c:633: Warning: SpiceClientGLib: incorrect number of
	  parameters in comment block, parameter annotations will be ignored.
	channel-main.c:672: Warning: SpiceClientGLib: incorrect number of
	  parameters in comment block, parameter annotations will be ignored.
	channel-main.c:716: Warning: SpiceClientGLib: incorrect number of
	  parameters in comment block, parameter annotations will be ignored.
	channel-main.c:757: Warning: SpiceClientGLib: incorrect number of
	  parameters in comment block, parameter annotations will be ignored.
	channel-display.c:367: Warning: SpiceClientGLib: incorrect number of
	  parameters in comment block, parameter annotations will be ignored.
	  GICOMP   SpiceClientGLib-2.0.gir

	Pushed unreviewed under trivial rule.

2013-11-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.22
	v0.22
	=====

	- improve inverted cursor support
	- use system-wide trust certificate store
	- make sasl support work with other method than MD5
	- fix some clipboard crasher, limit clipboard size
	- fix various regressions:
	  usbredir, alt-tab on win32, palette crash, agent notification, old
	  protocol support, sasl ending crash, gthread coroutine crash, close
	  sockets on migration, pulse backend crash
	- fix a few memory leaks
	- build-sys improvements

	build-sys: bump spice-glib version
	new symbols in spice-glib, bump before release

	continuation: fix "fortify" crash
	Since 0508f586,  errno.h is included above #undef _FORTIFY_SOURCE.

	But it must be placed above system headers to take effect

	 *** longjmp causes uninitialized stack frame ***:
	 /home/jwhite/xfer/spice/bin/spicy terminated
	 ======= Backtrace: =========
	 /lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7ffff48dc2a7]
	 /lib/x86_64-linux-gnu/libc.so.6(+0xef239)[0x7ffff48dc239]
	 /lib/x86_64-linux-gnu/libc.so.6(__longjmp_chk+0x33)[0x7ffff48dc1a3]
	 /home/jwhite/xfer/spice/lib/libspice-client-glib-2.0.so.8(+0x49761)[0x7ffff78f1761]
	 /home/jwhite/xfer/spice/lib/libspice-client-glib-2.0.so.8(+0x499a4)[0x7ffff78f19a4]
	 /home/jwhite/xfer/spice/lib/libspice-client-glib-2.0.so.8(+0x1bae7)[0x7ffff78c3ae7]
	 /lib/x86_64-linux-gnu/libglib-2.0.so.0(g_main_context_dispatch+0x135)[0x7ffff505f355]
	 /lib/x86_64-linux-gnu/libglib-2.0.so.0(+0x4a688)[0x7ffff505f688]
	 /lib/x86_64-linux-gnu/libglib-2.0.so.0(g_main_loop_run+0x72)[0x7ffff505fa82]
	 /home/jwhite/xfer/spice/bin/spicy[0x4054aa]
	 /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xfd)[0x7ffff480bead]
	 /home/jwhite/xfer/spice/bin/spicy[0x405679]

2013-11-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	pulse: do not abort on corking no stream
	There is no guarantee that a stream actually exist when min-latency
	change is notified.

	Check that there is an actual stream before calling cork().  All callers
	where previously checking that stream existed. Add a pre-condition to
	verify argument and spot that error is from spice-gtk itself.

	Fixes the following crash:
	 #1  0x0000003c12e34105 in abort () at abort.c:92
	 #2  0x0000003c2c223180 in pa_stream_is_corked (s=0x0) at
	 pulse/stream.c:2536
	 #3  0x0000003c2c648cb7 in stream_cork (pulse=<value optimized out>,
	 s=0x7fbb38, with_flush=0) at spice-pulse.c:227
	 #4  0x0000003c2c649989 in playback_min_latency_changed (object=<value
	 optimized out>, pspec=<value optimized out>, data=0x7fbad0) at
	 spice-pulse.c:674

	https://bugzilla.redhat.com/show_bug.cgi?id=1032785

2013-11-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: swap channel GSocketConnection on migration
	When migration completes, unrefing the new connection leads to original
	GSocket pending refs, and thus the sockets stay in CLOSE_WAIT.

	This is a regression from 8029bd0 where GSocketConnection is kept around
	to satisfy old glib.

	https://bugzilla.redhat.com/show_bug.cgi?id=1024501

	This will also probably fix:
	https://bugzilla.redhat.com/show_bug.cgi?id=952375

2013-11-21  dietmar@proxmox.com  <dietmar@proxmox.com>

	Fix SASL for mechanism using WANT_CLIENT_FIRST
	Current code works with DIGEST-MD5, but not with PLAIN.

	In particular, when using PLAIN, sasl_client_start() returns SASL_OK, which
	should not be an error in spite of vague/confusing upstream documentation
	about this:
	http://asg.andrew.cmu.edu/archive/message.php?mailbox=archive.cyrus-sasl&msg=10104

2013-11-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: fix recent main_channel_reset() warning
	Fix wrong warning added in 0704147d.

	(lt-spicy:17511):
	GSpice-WARNING **: (channel-main.c:415):spice_main_channel_reset:
	runtime check failed: (c->agent_connected == FALSE)

	coroutine: make gthread coroutine pass tests
	The coroutine entry() return value must be passed via the caller->data,
	since coroutine_swap() returns from->data. (this is needed because
	coroutine_swap() argument is used both to return from entry() or to send
	data to a running coroutine)

	When leaving a coroutine, clear its caller.

	Return correct coroutine_self() before other coroutine are initialized.

	tests: add some coroutine tests

	coroutine: replace IN_MAIN_CONTEXT macro
	Use a nicer function, with correct prefix.
	Remove extra "context" from function name

	coroutine: error out on OOM or impossible conditions
	Take an approach similar to gthreads, which are considered as low
	level/must work features by glib, which aborts on failures.

	channel: get rid of connection_id, available from session

	channel: remove useless desc != NULL check
	spice_channel_type_to_string() does not return NULL

2013-11-20  Christophe Fergeau  <cfergeau@redhat.com>

	Fix 'monitors' leak in update_monitor_area()
	This function has an early return where we fail to unref the 'monitors'
	array.

2013-11-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: send max-clipboard to agent
	Send configured max-clipboard size to the agent, after receiving agent
	capabilities.

	See also spice-protocol patch description:
	http://lists.freedesktop.org/archives/spice-devel/2013-November/015254.html

	main: simplify usage of VD_AGENT_HAS_CAPABILITY
	Introduce a helper function test_agent_cap() to clear the code a
	little bit.

	main: use self for main channel variable
	This simplifies the following commit which uses even more
	SPICE_MAIN_CHANNEL macro, and makes the code unnecessarily heavy.

	Add SPICE_MAX_CLIPBOARD environment variable
	Allow to easily override default max-clipboard value with environment
	variable.

	Block sending clipboard data > max-clipboard
	Attempt to send very large clipboard data may easy cause OOM
	abort, either in  gdk - some patch are proposed to improve the situation,
	or in spice-gtk itself.

	Let's have a property that blocks unreasonably big clipboard data from
	being processed (by default 100mb). Users willing to send larger data
	can use the send basic drag-drop send file instead, or tweak the
	property value.

2013-11-19  Christophe Fergeau  <cfergeau@redhat.com>

	Use system-wide trust certificate store
	Currently, spice-gtk will look in $HOME/.spicec/spice_truststore.pem
	by default for its trust certificate store (to verify the certificates
	used during SPICE TLS connections).
	However, these days, progress is under-way to have a system-wide
	certificate store [1].
	In order to use it, we only need to call SSL_CTX_set_default_verify_paths()
	and it will automatically use the shared system CA store if the distro
	is properly setup.
	We only try to use that store if there was no user-provided CA file to use,
	or if we failed to load it.

	[1] https://fedoraproject.org/wiki/Features/SharedSystemCertificates

	build-sys: Add real autodetection of python
	configure help text says that by default python will be used automatically
	if appropriate, however this only means that on !windows and !gtk3, we will
	force build of the python bindings, and fail if any needed package to build
	them is missing.

	This commit improves on the current checks so that when autodetecting
	python, if a package is missing then build of the bindings is silently
	disabled rather than failing.

	build-sys: Re-enable building of python bindings by default
	Commit daa4ece tried to disable building of python bindings on Windows by
	default, but in doing so, it also disabled building of python bindings by
	default when we are building neither for Windows nor for gtk3.

	build-sys: Fix invalid 'test' syntax in configure.ac
	test ... -o test ... is not a valid shell construct, change it to
	test ... || test ... as this is more portable than test ... -o ...

	This was causing a warning when running configure.

2013-11-18  Christophe Fergeau  <cfergeau@redhat.com>

	Fix leak of mmapped memory when cc_init() fails

	Check coroutine_init() return value
	coroutine_init() can fail, but spice-channel.c was not checking its return
	value, which could lead to some crashes if coroutine_init() failed and we
	then try to use coroutine_yieldto()

2013-11-18  Daniel P. Berrange  <berrange@redhat.com>

	Free coroutine stack when releasing coroutine
	The coroutine_init function mmap's a stack for the
	ucontext coroutine, but nothing ever munmaps it.

	Abort if mmap of coroutine stack fails
	If we fail to mmap the stack, abort the processs rather
	than returning an error. This is standard practice in
	glib apps, and the caller was not checking the
	coroutine_init() return code leading to memory corruption.

2013-11-18  Christophe Fergeau  <cfergeau@redhat.com>

	Fix IN_MAIN_CONTEXT when using coroutine=gthread
	The IN_MAIN_CONTEXT macro checks coroutine_self()->caller against NULL to
	decide whether we are in the main context or not. However, this is an
	implementation detail of the ucontext coroutine implementation, in the
	gthread implementation, coroutine_self()->caller will be non-NULL even in
	the main context.

	This commit introduces a coroutine_is_main_context() method which each
	coroutine backend implements. It turns out it can be implemented the same
	way for each backend.

	Fix crash on remote-viewer startup with gthread coroutine
	g_object_notify_main_context() was recently changed to automatically
	detect whether we are running in the main context or not, and SpiceSession
	is now using g_object_notify_main_context().

	In order to achieve that, IN_MAIN_CONTEXT is used, but it's not safe
	to be used before coroutine_init() is called. IN_MAIN_CONTEXT expands to
	(coroutine_self()->caller == NULL), but coroutine_self() will be NULL when
	using gthreads for the coroutine implementation until coroutine_init() has
	been called.

	Before coroutine_init() has been called, we'll always be running in the
	main context, so we can just add a check for coroutine_self() != NULL to
	IN_MAIN_CONTEXT to solve that issue.

2013-11-18  Marc-André Lureau  <marcandre.lureau@gmail.com>

	coroutine: fix current coroutine
	When leaving a coroutine, it swaps back to where it came from, not to
	the leader/main coroutine.

	coroutine: add some preconditions

2013-11-07  Jonathon Jongsma  <jjongsma@redhat.com>

	Guarantee that 'uuid' property is notified after connection
	This creates a synchronization point and allows API users to rely on the fact
	that they'll always get a UUID notification before all of the channels are
	created.

	Make sure property notifications are done in the main context
	Modify g_object_notify_main_conetxt() to work whether it's called from the main
	context or a coroutine context.  Change object notify calls in SpiceSession to
	use g_object_notify_main_context() instead of g_object_notify().

	Revert "Add ability to get SpiceDisplay resolution"
	This reverts commit a285e0187d15ad650f6524f3811072fa55b20617.

	This API was not actually needed for what I intended to use it for.  So revert
	for now.  We can always add it back if necessary in the future.

	Conflicts:
		gtk/spice-widget.c

2013-11-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: blank surface on creation
	In theory, zero-ing the surface shouldn't be necessary, as only
	invalidated/painted region should be shown. However, this results in
	less artifacts on resolution changes (probably some regions are painted,
	but with masks, blend, copy etc), in particular on console after VM
	reboot.

2013-11-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: add since tag for spice_display_get_monitor_config()

2013-11-04  Jonathon Jongsma  <jjongsma@redhat.com>

	SpiceDisplay: validate 'self' argument for public API
	Add defensive g_return[_val]_if_fail(SPICE_IS_DISPLAY()) to all public API

	Add ability to get SpiceDisplay resolution
	Add spice_display_get_monitor_config() to get the current configuration of the
	display.

2013-11-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix spice-common submodule, my bad

2013-11-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	util: document spice_uuid_to_string

2013-11-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	util: do not overwrite G_MESSAGES_DEBUG=all
	glib log handler only check for a single 'all' value, mixing it with
	other domains name will disable 'all' messages.

2013-10-29  Jonathon Jongsma  <jjongsma@redhat.com>

	Export spice_uuid_to_string() properly
	Update map-file and spice-glib-sym-file

	Expose spice_uuid_to_string() as public API
	SpiceSeession has a 'uuid' property that is a byte array, but clients often need
	the uuid in string format (for writing to disk, etc).  Rather than having each
	client re-implement this, expose the utility function as public API in
	spice-gtk.

2013-10-19  Alon Levy  <alevy@redhat.com>

	channel-cursor: mono cursors edge highlighting
	Fix 998529, mono (invert) cursors not visible on a black background, by doing
	simple edge detection on the cursor (this is done once when the cursor
	is changed and then cached, cursors are 32x32 generally) and thus having
	a cursor with contrast on both dark and light backgrounds.

	When (if) GDK gets invert cursor support (wayland?) then we can just use
	the cursor as is. Until then X doesn't provide any way I see of solving
	this otherwise. The end result was tested with the I beam cursor that
	the original bug was referring to (run putty on a windows 7 vm) and
	looks ok to me.

	Moving the core function to spice-util for testing.

2013-10-18  Alon Levy  <alevy@redhat.com>

	cursor-channel.c: add cursor print function for debugging only (ifdefed)

2013-10-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: add missing vdagent caps name
	This is useful in debug messages atm.

2013-10-16  Christophe Fergeau  <cfergeau@redhat.com>

	sasl: Fix crash when ending a SASL session
	When exiting remote-viewer after authenticating through SASL, I got
	this crash:

	 #0  0x0000000100a51870 in ?? ()
	 #1  0x000000314d20c53e in _sasl_log (conn=<optimized out>, level=5, fmt=0x7fffe49893e8 "DIGEST-MD5 client mech dispose")
	     at common.c:1985
	 #2  0x00007fffe4982d88 in digestmd5_client_mech_dispose (conn_context=0xaf1900, utils=0xaefd10) at digestmd5.c:4580
	 #3  0x000000314d208654 in client_dispose (pconn=0xaf0710) at client.c:332
	 #4  0x000000314d20b76b in sasl_dispose (pconn=0xa51898) at common.c:851
	 #5  0x00007ffff7602dc7 in channel_reset (channel=0xa52250, migrating=0) at spice-channel.c:2493
	 #6  0x00007ffff760f7b7 in spice_inputs_channel_reset (channel=0xa52250, migrating=0) at channel-inputs.c:615
	 #7  0x00007ffff76030ac in spice_channel_reset (channel=0xa52250, migrating=0) at spice-channel.c:2551
	 #8  0x00007ffff76031e0 in channel_disconnect (channel=0xa52250) at spice-channel.c:2570
	 #9  0x00007ffff760283d in spice_channel_coroutine (data=0xa52250) at spice-channel.c:2368
	 #10 0x00007ffff763d14b in coroutine_trampoline (cc=0xa51900) at coroutine_ucontext.c:58
	 #11 0x00007ffff763ce30 in continuation_trampoline (i0=10819840, i1=0) at continuation.c:49
	 #12 0x00000031342479c0 in ?? () from /lib64/libc.so.6
	 #13 0x0000000000a51cc8 in ?? ()
	 #14 0x0000000000000000 in ?? ()

	It turns out that the sasl_callback_t data passed when calling
	sasl_client_new() must be valid until sasl_dispose() is called. I could not
	find mentions of this in the official documentation but
	https://mail-archives.apache.org/mod_mbox/subversion-dev/201109.mbox/%3C20110908072256.GN25324@ted.stsp.name%3E
	describes what happens.
	Making the sasl_callback_t structure static should be enough to guarantee
	that the data will stay around long enough.

	Display g_debug messages when SPICE_DEBUG is set
	When SPICE_DEBUG is set but --spice-debug is not used, we fail
	to set G_MESSAGES_DEBUG to the log domain used by spice-gtk, which
	causes debug messages not to be printed as one would expect.

	Fix --spice-debug
	If spice_util_set_debug() gets called before spice_util_get_debug(),
	then the value set using spice_util_set_debug() will be overridden
	by the result of g_getenv("SPICE_DEBUG") != NULL the first time
	spice_util_get_debug() is called.

	This causes remote-viewer --spice-debug to not enable debug as
	advertised if SPICE_DEBUG is not set.

	An alternate fix would have been to set debug_once.status to
	G_ONCE_STATUS_READY but then we would lose the thread-safety
	guarantees GOnce gives us.

2013-10-10  Christophe Fergeau  <cfergeau@redhat.com>

	Fix switch to old SPICE protocol
	After the previous commit, spice_channel_switch_protocol() is now
	called when needed, but it's not doing anything. What happens is
	that spice_channel_switch_protocol() triggers a channel disconnection
	and then it queues an idle to reconnect (after having changed the
	protocol version to be used).

	When spice_channel_recv_link_hdr() returns, we need to jump out of
	the coroutine to let the idle trigger and the new channel coroutine
	be started. But jumping out of the coroutine will call channel_disconnect()
	which calls channel_reset() which disables the idle switch_protocol()
	just queued. This causes the connection attempt to be apparently
	stuck with nothing happening.

	Falling back to the older SPICE protocol is not the only situation
	when we need to drop the current connection attempt and reconnect,
	we also need to do that when the remote server returns
	SPICE_LINK_ERR_NEED_SECURED to let the client know it needs to use
	a secure port for this channel. This is handled by the 'switch_tls'
	variable set in spice_channel_recv_link_msg and handled in
	spice_channel_coroutine().

	'switch_tls' does the same thing as spice_channel_switch_protocol(),
	except that it calls spice_channel_connect() after channel_disconnect()
	has been called, which means the idle queued by channel_connect()
	won't get cleared.

	This all that commit does, remove the spice_channel_switch_protocol()
	method and use the same codepath as 'switch_tls' to handle the
	reconnection.

	Reenable call to switch_protocol() on protocol version mismatches
	This partially reverts b19acbc. This commit broke the fallback
	to the old protocol as it added a check for c->peer_msg != NULL
	before calling switch_protocol(), but mismatch between local
	and remote protocol versions is detected before c->peer_msg is
	allocated, so:
	    if (c->peer_msg != NULL && c->link_hdr.major_version != 1) {
	         SPICE_DEBUG("%s: error, switching to protocol 1 (spice 0.4)",
	c->name);
	         spice_channel_switch_protocol(channel, 1);
	         return TRUE;
	    }
	will never get triggered when c->peer_hdr.major_version !=
	c->link_hdr.major_version

	The crash described in b19acbc occurred when calling
	spice_channel_recv_link_msg() in spice_channel_coroutine()
	after a call to spice_channel_recv_link_hdr() failed and did
	not set c->peer_msg.

	This commit removes the c>peer_msg check done before calling
	spice_channel_switch_protocol() so that it gets called when needed,
	but makes sure that we return FALSE to indicate that an error happened
	and that we need to reconnect. This way we won't try to call
	spice_channel_recv_link_msg() when c->peer_msg is NULL.

	Use latest warnings.m4 from gnulib
	The one we were using does not work properly with clang, causing
	the build process to try to use -f/-W options that are not
	supported by clang.

2013-10-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk-session: avoid mainloop recursion in clipboard_get
	clipboard_get() exits when the clipboard data is received, or when the
	agent connection state change. However, if the agent is already
	disconnected, neither of those 2 conditions can be reached.

	Check if the agent is connected before running loop, exit early if not.

	gtk-session: fix clipboard_agent_connected
	Use swapped connection to pass data as first argument to signal handler.

	main: fix notify of agent disconnection
	spice_main_channel_reset_agent() reset connected state, and prevent
	notify of property change.

	This is a minor regression introduced in c3adb24425.

2013-10-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: cache id is uint64_t

	display: fix palette regression
	palette_get() used to return a ref, and palette_release() used to
	release that ref.

	Since ed877341, the palette is no longer refcount'ed, since its usage is
	exclusively local in common/canvas code.

	palette_release() shouldn't remove the palette from the cache.

	https://bugzilla.redhat.com/show_bug.cgi?id=1011936

2013-10-02  Alon Levy  <alevy@redhat.com>

	mono cursor: increase contrast, better looking putty cursor (rhbz 998529)

2013-09-30  Hans de Goede  <hdegoede@redhat.com>

	spice-channel: Fix usbredir being broken since commit 159c6ebf
	The usbredir channel uses spice_msg_in_raw to get its data, which uses
	in->dpos to determine the msg size and that was no longer being set for
	non sub-messages.

	https://bugs.freedesktop.org/show_bug.cgi?id=69935

2013-09-26  Marc-André Lureau  <marcandre.lureau@gmail.com>

	win32: fix alt-tab grab regression
	Since 5f67178c, alt-tab is no longer grabbed by the client. The keyboard
	hook still needs to handle WM_SYSKEY{DOWN,UP} messages.

	https://bugzilla.redhat.com/show_bug.cgi?id=873341

	build-sys: do not compile python binding with windows by default

	Update spice-common

	build-sys: add --with-audio=auto
	Defaults to GStreamer on Windows, and PulseAudio otherwise atm.

	build-sys: fix --with-sasl
	The default configure sasl auto setting will error out if SASL is
	missing. Instead, silentely skip sasl configure if detected missing.

2013-09-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: fix g_clear_pointer usage on old glib
	As pointed out and verified on the ML after 0.21 release by Klaus
	Hochlehnert.

2013-09-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.21

2013-09-18  Colin Walters  <walters@verbum.org>

	acl helper: Use ruid of invoker rather than looking up euid in /proc
	This way we avoid a race condition if the parent execve()s a setuid
	program (possibly this program).

	This is the same as the fix for pkexec which is CVE-2011-1485:
	See: https://bugzilla.redhat.com/show_bug.cgi?id=692922

2013-09-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: fix bad cast on win64
	spice-widget.c:814:50: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
	         g_return_if_fail(SystemParametersInfo(SPI_SETMOUSESPEED, 0, (PVOID)d->win_mouse_speed, 0));

2013-09-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: unshare the palette cache
	As pointed out by Yonit on the ML:
	> (1) the palette cache shouldn't be shared among the display channels. I.e.,
	> there should be one instance per channel, and not one instance in
	> spice-session.

	channel: unref incoming migrate data

2013-09-13  Marc-André Lureau  <marcandre.lureau@gmail.com>

	gtk: simplify spice_channel_recv_msg
	Use of coroutines allow to simplify spice_channel_recv_msg(), it doesn't
	need to keep current reading state, it can rely on the coroutine stack
	for that.

	gtk: use slices for frequently allocated objects

	gtk: use GHashTable in display_cache
	The cache code isn't very quick, it shows up in profilers.  Using
	GHashTable allows to simplify the code while making it faster.

	channel: do not reenter the mainloop at every iteration
	The current coroutine channel_iterate() creates a GSource for the socket
	reenters the mainloop waiting for IO condition. This is really heavy
	usage of mainloop showing up in system time and user space
	profiling (10% of CPU time spent in mainloop overhead). Instead flush
	all pending input messages before switching context and reentering main
	loop.

	This is the kind of results I get with a replay:

	before:

	       2179,440455 task-clock                #    0,629 CPUs utilized
	             3 580 context-switches          #    0,002 M/sec
	               207 cpu-migrations            #    0,095 K/sec
	            48 909 page-faults               #    0,022 M/sec
	     7 362 442 301 cycles                    #    3,378 GHz
	     5 256 957 520 stalled-cycles-frontend   #   71,40% frontend cycles
	             idle
	   <not supported> stalled-cycles-backend
	     5 460 266 981 instructions              #    0,74  insns per cycle
	                                             #    0,96  stalled cycles
	             per insn
	       982 749 523 branches                  #  450,918 M/sec
	        20 745 453 branch-misses             #    2,11% of all branches

	       3,463422087 seconds time elapsed

	after:

	       1741,651383 task-clock                #    0,522 CPUs utilized
	             5 093 context-switches          #    0,003 M/sec
	               137 cpu-migrations            #    0,079 K/sec
	            49 033 page-faults               #    0,028 M/sec
	     5 874 567 974 cycles                    #    3,373 GHz
	     4 247 059 288 stalled-cycles-frontend   #   72,30% frontend cycles
	             idle
	   <not supported> stalled-cycles-backend
	     4 419 666 346 instructions              #    0,75  insns per cycle
	                                             #    0,96  stalled cycles
	             per insn
	       776 972 366 branches                  #  446,112 M/sec
	        17 862 170 branch-misses             #    2,30% of all branches

	       3,337472053 seconds time elapsed

	util: avoid calling getenv for every SPICE_DEBUG
	That doesn't seem to really improve performance so much,
	but that' s what we should do probably.

2013-09-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: keep a reference to the primary surface
	Avoid hard-coding surface 0 as being primary, although in practice it
	always is so far. Also a lot of lookups are primary, so add a shortcut
	for this special case (~30% apparently), it shows some small lookup
	speedup.

	before:
	real     0m5.008s
	user     0m3.253s
	sys      0m2.015s

	after:
	real    0m4.930s
	user    0m3.133s
	sys     0m2.027s

	display: make the hashtable to destroy the surface
	Improve a bit the code by using hashtable ownership.

	display: replace ring with hashtable
	With a Spice replay (a tool not yet merged, but available in dev
	branches), the following commit improves a little bit performance by not
	spending so much CPU time in looking up surfaces. I found initially
	hotspot with "perf", and get a consistant ~200ms speedup with "time
	spicy-stats" after replacing the ring.

	before:
	real     0m5.147s
	user     0m3.506s
	sys      0m1.949s

	after:
	real     0m5.008s
	user     0m3.253s
	sys      0m2.015s

	channel: add SPICE_DISABLE_CHANNELS
	Allow to disable selectively channels, mainly used for testing,
	ex: SPICE_DISABLE_CHANNELS=display spicy-stats -p 12345

	channels: use spice_channel_set_handlers()
	This allows to simplify a little bit derived class (no need to override
	handle_msg), and allows the base class more flexibility (for example for
	filtering messages, as in the following patch)

	channel: add spice_channel_set_handlers()
	This function will allow to set base handlers and specific channel
	handlers in a common way, instead of each channel having to override the
	base channel virtual handle_msg().

	display: use bitfields for surface flags
	Checking by value make the flag fields useless. Unfortunately, when
	adding more flags, the server will have to ensure it can safely send it,
	by checking some of new client caps (for some features).

	Update spice-common

2013-09-10  Dunrong Huang  <riegamaths@gmail.com>

	Fix _FORTIFY_SOURCE redefine error
	If the _FORTIFY_SOURCE has been already defined, we shouldn't redefine
	it, or it will raise a build error as below:

	In file included from spice-audio.c:36:0:
	../config.h:12:0: error: "_FORTIFY_SOURCE" redefined [-Werror]
	spice-audio.c:1:0: note: this is the location of the previous definition

	Suggested-by: Christophe Fergeau <cfergeau@redhat.com>

2013-08-28  Marc-André Lureau  <marcandre.lureau@gmail.com>

	Revert "tmp: debug MIGRATE_DATA"
	This reverts commit f670e0197c37b2f12518f6d216642f67cdf5de84.

2013-08-28  Alon Levy  <alevy@redhat.com>

	gtk/channel-cursor: copy spicec hack, RHBZ #998529
	flip -> unsupported by x11, since XCreatePixmapCursor has no invert
	functionality, only a mask, shape, background and foreground colors. Use
	this checkerboard hack to get some contrast for cursors in the guest
	that relied on invert for the same contrast.

	gtk/channel-cursor.c: add cursor_type_to_string for debugging

	gtk/channel-display: only use SysV shm for x11

	tmp: debug MIGRATE_DATA

2013-08-28  Jonathon Jongsma  <jjongsma@redhat.com>

	Remove incorrect option context from spicy-stats
	The argument given to g_option_context_new() was apparently copy/pasted from
	spicy-screenshot and therefore inaccurate for spicy-stats.  Since the actual
	description of the program (from _set_summary()) is displayed on the next line
	anyway, simply make the context NULL.

	channel-main: Fix minor documentation issue
	Documentation for spice_main_clipboard_selection_request() refers to deprecated
	signal 'main-clipboard' instead of 'main-clipboard-selection'

2013-08-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	tests: add some dos2unix tests
	This is probably not exhaustive enough, but better than nothing.

	gtk: handle clipboard CRLF conversion
	gtk+ internal text/utf8 is using LF conversion, on all platforms.
	Even though the toolkit may only handle a single line ending type, we
	may want to avoid the conversion for Spice use cases, gtk+ could learn a
	new native utf8 target type, see also:
	https://bugzilla.gnome.org/show_bug.cgi?id=706657

	In the meantime, the only thing we need to convert, is to/from crlf
	guest (from/to lf). This is what this change is about.

	It has been tested successfully with the various guest/client OS
	combinations.

	util: add unix2dos and dos2unix
	Convert line endings from/to LF/CRLF.

2013-08-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Revert "channel-main: Convert text line-endings if necessary (rhbz#752350)"
	This implementation assumes that the toolkit doesn't do any conversion
	on its own. This is actually not the case, gtk+ converts line endings
	already on windows.  It would be pretty ugly to do conversions back and
	forth at different levels. So the channel implementation shouldn't
	try to do conversion, and implementation must be done at higher level,
	where the actual system clipboard implementation is known (at
	gtk-session for instance)

	Since this code hasn't been officially released, let's revert it and
	implement a better crlf conversion handling in gtk-session in the
	following commits.

	This reverts commit e45a446a9981ad4adaeff9c885962a8c6140333e.

	gtk: remove dead code

2013-08-20  Uri Lublin  <uril@redhat.com>

	win-usb-dev: ignore devices with addr 1 for LIBUSBX_API_VERSION
	Starting libusbx version 1.0.13 (commit 8cd30bb7066f785ee78cf6c3dccafdbc4b957b50)
	windows device enumeration changed and root hubs address number is 1 intead
	of 0xff.

	This patch uses LIBUSBX_API_VERSION which was introduced after 1.0.13 release
	(commit 9d368fc4774344d81ab02840f3a8478301bfb6fa).

	win usb: request for driver uninstall only for driver that were installed
	Currently when spice_usb_device_manager_remove_dev() is called,
	for windows clients a request to uninstall the driver is sent to usbclerk.

	This cause problems when 2 instances (A and B) of the client are running:
	- Both A and B get notified about a new USB device when it's plugged in
	- A is requested to usbredir the USB device.
	- A requests usbclerk to install WinUSB driver for that device.
	- usbclerk starts installing the driver
	- Windows sends to both A and B - device removal events, which may cause
	  B to call spice_usb_device_manager_remove_dev.
	- usbclerk completes installing the driver and reply to A
	- B requests usbclerk to remove the WinUSB driver for that device.

	To prevent that, spice-gtk now requests usbclerk to remove the driver
	only if it was the instance that requested the driver to be installed.
	This is done with the help of a new device SPICE_USB_DEVICE_STATE_INSTALLED
	state.

	rhbz#919166

2013-08-19  Christophe Fergeau  <cfergeau@redhat.com>

	Use g_slist_foreach_full glib implementation
	For the compat case (glib < 2.28), we were using our own implementation
	instead of directly reusing glib code.

2013-08-19  Hans de Goede  <hdegoede@redhat.com>

	glib-compat: g_slist_free_full: pass the right ptr to destroy (rhbz#997893)
	The destroy function passed to g_slist_free_full should be passed the elements
	data pointer, not the element itself.

2013-08-13  Christophe Fergeau  <cfergeau@redhat.com>

	Only use GOBJECT_INTROSPECTION_CHECK when available
	Current el6 systems don't have gobject-introspection packages,
	so the GOBJECT_INTROSPECTION_CHECK m4 macro is not available
	on such systems. This makes it difficult to run autogen.sh
	on these systems.
	This commit uses m4_ifdef to check if this macro is available
	before trying to use it, and makes sure introspection is
	disabled when GOBJECT_INTROSPECTION_CHECK could not be found.
	This allows to compile spice-gtk from git on el6 systems
	with:
	./autogen.sh --with-gtk=2.0 --disable-gtk-doc --disable-vala
	             --disable-controller --disable-werror

2013-08-06  Yonit Halperin  <yhalperi@redhat.com>

	usb-device-manager: fix compilation error when usbredir is disabled

2013-08-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	usb-widget: fix gtk2 Python bindings
	The Python bindings generator failed to bind the USB widget, because of
	the object/class declaration. The declaration was circumventing the
	deprecated errors when compiling with GTK_DISABLE_DEPRECATED. We used
	to need that because of broken gtk+ headers, but it is no longer
	necessary since 15bd7ceba1434b5d710bfd16078044f30693467b.

2013-07-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: copy "ca" property in copy ctor
	This fixes the GSpice-WARNING **: no cert loaded, when doing a seamless
	migration (when using the "ca" property).

2013-07-11  Christophe Fergeau  <cfergeau@redhat.com>

	smartcard: Only init manager once
	The SpiceSmartcardManager is a singleton, so it does not make
	a lot of sense to try to init it multiple times. This commit adds
	a GOnce to ensure the manager is only init'ed once.

	smartcard: Handle VCARD_EMUL_INIT_ALREADY_INITED
	When initializing a software smartcard, vcard_emul_init() can
	report success, error, or indicate that initialization has already
	been done. In this last case, we would assume that an error occurred
	instead of behaving as if the initialization succeeded.

	vcard_emul_init() can end up being called multiple time if the
	smartcard channel gets destroyed and recreated during the lifetime
	of the application

	Fixes rhbz#815639

2013-07-08  Christophe Fergeau  <cfergeau@redhat.com>

	doc: Fix typo in code comment

	gst: Chain up dispose impl to parent class

	gi: Add (allow none) to optional const char * params
	Without that annotation, it will not be possible to pass NULL to
	these methods when using a gi-based binding.

	gi: Make sure usb-device-widget.c is introspected
	If it's not, annotation we add to inline gtk-doc comments won't
	be taken into account in the .gir file.

2013-07-05  Hans de Goede  <hdegoede@redhat.com>

	usb-device-manager: Add support for libusb hotplug API
	For now this makes the usb-code even more of a #ifdef party (albeit only
	slightly so). But it does give us (theoretical, untested) usb support on
	Mac OS X, and once the libusb Windows backend also gets hotplug support, we
	can bump the required libusb version to a new enough one, and drop both the
	windows gudev emulation as well as the gudev code-paths.

2013-07-04  Hans de Goede  <hdegoede@redhat.com>

	usb-device-manager: Splitout device add / remove function
	Split the device add / remove functions into a gudev specific part and
	a generic part. This is a preparation patch for adding support libusb's
	new hotplug API.

2013-06-27  Hans de Goede  <hdegoede@redhat.com>

	Add spice_channel_string_to_type to map files
	And document both spice_channel_string_to_type and
	spice_channel_type_to_string.

	channel-main: Convert text line-endings if necessary (rhbz#752350)
	This implements line-ending conversion following the specification in the
	commit message of spice-protocol commit 7be0e88e7e03a956b364cc847aad11b96ed4 :
	vd_agent: Add caps for the agent to signal the guest line-ending (rhbz#752350)

2013-06-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.20

	build-sys: bump spice-glib version
	new symbols in spice-glib, bump before release

	doc: add missing symbols and versions

2013-06-24  Yonit Halperin  <yhalperi@redhat.com>

	display: disabling adaptive video streaming via env var SPICE_DISABLE_ADAPTIVE_STREAMING
	spice-server supports adaptive video streaming only if the client
	publishes SPICE_DISPLAY_CAP_STREAM_REPORT.

	Disabling this feature is useful for debugging and performance comparison.

	display: video stats logging - improve readability and ease of parsing

2013-06-24  Christophe Fergeau  <cfergeau@redhat.com>

	automake: Disable portability warnings
	When they are enabled, autogen.sh fails with:
	automake: warnings are treated as errors
	gtk-doc.make:77: warning: GTK_DOC_V_SETUP_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:78: warning: GTK_DOC_V_SETUP_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:96: warning: GTK_DOC_V_SCAN_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:97: warning: GTK_DOC_V_SCAN_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:100: warning: GTK_DOC_V_INTROSPECT_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:101: warning: GTK_DOC_V_INTROSPECT_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:132: warning: GTK_DOC_V_XML_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:133: warning: GTK_DOC_V_XML_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:149: warning: GTK_DOC_V_HTML_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:150: warning: GTK_DOC_V_HTML_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:153: warning: GTK_DOC_V_XREF_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:154: warning: GTK_DOC_V_XREF_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:185: warning: GTK_DOC_V_PDF_$(V: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	gtk-doc.make:186: warning: GTK_DOC_V_PDF_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
	doc/reference/Makefile.am:59:   'gtk-doc.make' included from here
	autoreconf: automake failed with exit status: 1

	on my F19.
	-Wportability used to be automatically disabled with automake <= 1.12 when using
	silent rules, but this is no longer the case with automake 1.13 which is what
	fedora 19 uses: http://www.flameeyes.eu/autotools-mythbuster/automake/silent.html
	"As of version 1.13, though, this opt-in is no longer necessary, as all the
	Makefiles are generated to support them. The silent-rules option is now a
	no-op, doing nothing at all, in particular not silencing the portability
	warnings."

	This commit disables these warnings in order to avoid autogen.sh breakage
	because of the use of -Werror, they can be reenabled once gtk-doc.make is
	fixed to avoid these portability warnings.

	Remove obsolete files from POTFILES.in
	intltool-update -M complains about them

	smartcard: Move down spice_smartcard_reader_is_software body
	It's more consistent to have it close to
	spice_smartcard_reader_insert_card() et al.

	Add spice_smartcard_manager_get_readers()
	This returns the list of smartcard readers known to a given
	SpiceSmartcardManager. This is useful to check whether a software
	smartcard reader is available or not.

	smartcard: Add methods to act on software readers
	Currently, the methods to insert/remove smartcards from a software
	smartcard reader are global to the SpiceSmartcardManager singleton
	rather than acting on a SpiceSmartcardreader object.
	This commit adds insert/remove methods acting on such objects.

	smartcard: Report failure when software reader is missing
	As there is no easy way to know if the SpiceSmartcardManager
	has an associated software reader or not, it's better to report
	failure instead of g_return_if_fail on attempts to use
	spice_smartcard_manager_insert/remove_card with no software reader
	available.

2013-06-24  Hans de Goede  <hdegoede@redhat.com>

	Update spice-common

2013-06-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	proxy: remove trailing slash from proxy URL
	Apparently, trailing slash are common for proxy URI. Is there a
	specification for these kind of URI?

	(I cry that we don't have GUri yet to handle parsing... gbo#489862)

	Fixes:
	https://bugzilla.redhat.com/show_bug.cgi?id=975472

2013-06-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: don't block key up events
	The win32 ll keyboard hook avoid Windows and other application to
	receive global keyboard events. But some key combinations can't be
	filtered, such as Win+L. However, the windows lock screen doesn't catch
	that the Win key is released, when virt-viewer still holds the hook and
	filters it.

	So pressing Win+L quickly will lock the screen, but some key press in
	the password entry will still be handled as if the Win key was pressed,
	such as Win+P or Win+U and probably other, and prevents user from typing
	his password.

	The only working solution I could find is to just let go all the release
	key events in the hook. There doesn't seem any drawback with that.

	https://bugzilla.redhat.com/show_bug.cgi?id=917986

	widget: release keys on grab-broken
	This is similar to 8cbd5d745c221f788878c9c713f3b46a25828d3f and can be
	reproduced by pressing Win+l while the widget has the keyboard
	grab (pointer over the display).

	I have not reproduced implicit grab-broken event, I suppose they could
	happen if the grab is stolen from within the app. In any case, it's
	probably better to release the keys.

	This is related to:
	https://bugzilla.redhat.com/show_bug.cgi?id=917986

2013-05-29  Hans de Goede  <hdegoede@redhat.com>

	Make sure our foo_get_type functions are thread-safe
	While debugging:
	https://bugzilla.redhat.com/show_bug.cgi?id=866718

	I found a thread-safeness issue with a couple of foo_get_type functions
	in polkit causing this crash.

	After this I decided to check if spice-gtk has the same issue, and it does,
	since foo_get_type can be called from different threads, it is important to
	make them thread-safe.

2013-05-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: remove grab key filter
	The widget currently filters out last key press from grab key sequence
	if it's not a modifier key. But this will prevent nested usage of ungrab
	combinations such as shift+f12.

	https://bugzilla.redhat.com/show_bug.cgi?id=889962

	This will also make the following obsolete:
	https://bugzilla.redhat.com/show_bug.cgi?id=846005

	Build fix, use correct check version

2013-05-15  Mattias Grönlund  <mattias@gronlund.se>

	mingw: Fix non-working AltGr with some layouts
	Running virt-viewer-x64-0.5.6.msi, on Windows 7, connecting to QEMU using
	spice, AltGR key combinations fails (using Swedish keyboard layout both at
	server and client).

	I suspect that this is a variant of
	https://bugzilla.redhat.com/show_bug.cgi?id=904092.

	After some debugging, I realized that there is an extra VK_LCONTROL
	keypress sent by Windows. This extra VK_LCONTROL will then make the key
	e.g. AltGr-< actually be Control-AltGr-<, which is not interpreted as a |
	sign.

	So in spice-widget.c : keyboard_hook_cb(), I added SPICE_DEBUG lines which
	printed out the hooked->scanCode, and realized that this extra VK_LCONTROL
	has a very suspect scanCode with bit 9 set. If I instead press the left
	Ctrl key, it will also emit VK_LCONTROL, but with bit 9 cleared.

	So I just made sure that keyboard_hook_cb(), silently dropped these strange
	VK_LCONTROL events, which seems to work for me.

2013-05-15  Christophe Fergeau  <cfergeau@redhat.com>

	Fix printf format string warning
	When doing a mingw32 build, I hit the following warning (which became an
	error because of -Werror):

	channel-display.c: In function 'destroy_stream':
	channel-display.c:1546:9: error: format '%lu' expects argument of type 'long unsigned int', but argument 6 has type 'uint64_t' [-Werror=format=]
	         CHANNEL_DEBUG(channel, "%s: drops total duration %lu ==>", __FUNCTION__, drops_duration_total);
	         ^

2013-05-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Build fixes for gtk+2

	Fix glib2 2.22 build after edf1daf5
	channel-display.c: In function 'display_update_stream_report':
	channel-display.c:1273: warning: implicit declaration of function
	'g_get_monotonic_time'

2013-05-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: timeout after 10s of socket connect() attempt
	https://bugzilla.redhat.com/show_bug.cgi?id=885101

	Fix build after 577263aaf4c

2013-05-13  Yonit Halperin  <yhalperi@redhat.com>

	channel-display: protect video streaming from temporarily unsynced mm_time (migration related)
	rhbz#951664

	When the src and dst servers have different mm-times, we can
	hit a case when for a short period of time the session mm-time and
	the video mm-time are not synced. If the video mm-time is much
	bigger than the session mm-time, the next stream rendering will be
	scheduled to (video-mm-time - session-mm-time), and even after
	the different mm-times are synced, the video won't be rendered
	till the rendering timeout that was scheduled based on a wrong mm-time,
	takes place.
	This patch protects from such cases. You can find more details in the
	code comments.

	spice-session: new signal for notifying on a significant change in mm-time
	mm-time can change after migration. This can cause video synchronization
	problems after migration if not handled appropriately (see rhbz#951664).

	emit_main_context macro: handle calls from both coroutine context and main context

2013-05-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	vncdisplaykeymap: add wayland support
	The Wayland keycode are just Linux evdev, but the Gdk backend
	add the +8 offset used by Xorg evdev.

2013-05-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	vncdisplaykeymap: add broadway support

	keymaps: add basic x11 keysyms
	Ok, this isn't a good idea, but atm, the browser don't seem to send
	hardware keycode, and so Gtk+ broadway backend decided to use keysyms
	representation, which spice-gtk receives as "hardware keycodes"...

	Since Gdk keysyms are same as X11, add a new x11 keysym to keymap.

	This is not going to fly,...

	vncdisplaykeymap: adapt gtk2 compat code

	vncdisplaykeymap: use a window to associate table

	widget: check backend is X11
	spice-gtk blindly assume the backend is X11 if it's compiled on
	Unix. But nowadays, gtk+ support runtime backend selection.

	https://bugzilla.redhat.com/show_bug.cgi?id=961577

	Remove unused spice_set_keyboard_lock_modifiers()
	That code was used in early version to set client modifiers lock
	but it is the wrong approach, and guest should follow client
	state instead.

	Remove GnomeRR code
	Changing client resolution is a bad idea, and never took up.
	Remove some unmaintained experimental code.

	widget: release keys when the grab is taken elsewhere
	gtk may propagate some press event up to the Spice display widget, but
	a widget may take focus and grab the release event, so the guest will
	keep seeing the key pressed.

	Releasing the keys when the grab is taken solves two menu-related bugs:

	https://bugzilla.redhat.com/show_bug.cgi?id=820829
	https://bugzilla.redhat.com/show_bug.cgi?id=924577

	main: do not send monitors config if some are missing
	Spice-gtk does a bit of client-side work by optionnally delaying sending
	the monitor configuration to the guest automatically. However, the
	client may be slow to set all the monitors, so teach the timer to not
	fire the event unless at least the number of monitors set explicitely
	enabled or disabled matches the number of display channels.

	This avoid some configuration races when connecting to a multi-channel
	display server which is slow to set up.

2013-04-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: don't grab mouse when switching to server mode
	spice-gtk used to try taking the grab when switching to server mode, so
	that the current mouse interaction (for example a drag), isn't
	interrupted if the agent dies. However, shutting down a VM will
	automatically try taking the grab when there is no tablet input, and
	agent exits.

	Some users are complaining about it (especially when they don't know the
	ungrab combination).

	Instead, let's try to keep the grab only if we have currently a mouse
	button pressed.

	https://bugzilla.redhat.com/show_bug.cgi?id=873272

2013-04-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: do not send monitor config if monitor state didn't change
	Don't send monitor config after spice_main_set_display_enabled() if the
	monitor state didn't change.

	This solves monitor "flashing", reconfiguring in a loop:
	https://bugzilla.redhat.com/show_bug.cgi?id=952327

2013-04-24  Hans de Goede  <hdegoede@redhat.com>

	usb-redir-manager: Fix redirect_on_connect string mem leak

	usb-device-manager: Fix stray '\n'-s in g_warning calls

	usb-device-manager: Fix redirect_on_connect_rules mem-leak

	usb-device-manager: Add spice_usb_device_manager_get_devices_with_filter (fdo#63807)

	usb-device-manager: Error check spice_usb_device_manager_device_to_libdev calls
	Under Windows all calls to spice_usb_device_manager_device_to_libdev may fail,
	so error check them all.

	usb-device-manager: Avoid needless re-numeration of usb devs under Linux
	libusb_get_device_list() is not exactly a cheap call (lots of sysfs and
	usbfs accesses), so it is worth to avoid it where possible.

	This patch restores the old (pre win32 support addition) of dealing with
	libusb-devices under Linux, it keeps the device from the first lookup
	in spice_usb_device_manager_add_dev cached and uses that throughout.

	This also means that spice_usb_device_manager_device_to_libdev can no
	longer fail under Linux, so no need to error check it.

2013-04-23  Christophe Fergeau  <cfergeau@redhat.com>

	option: Allow multiple options in --disable-effects
	Commit 82c367 added checks that the value passed to --disable-effects
	is valid, but it does not take into account that it's perfectly valid
	to pass multiple values separated by commas. This commit splits
	the value passed to --disable-effects and checks each component separatey.

	Fixes rhbz#955277

	Fix setting of SPICE_{GLIB,GTK}_REQUIRES
	Because of a typo (REQUIRED vs REQUIRES), these variables only
	contained the last require that was set rather than a concatenation
	of all the needed libraries.

	Fix GNetworkAddress leak when opening spice session

2013-04-22  Yonit Halperin  <yhalperi@redhat.com>

	channel-display: trigger re-sync of audio playback latency when there are frequent video frame drops
	This was added in order to respond more quickly when the audio and video playback are
	not synchronized, and when the latency between the client and the server
	is high (i.e., when the server response to the status is delayed).

	playback: support syncing the playback latency via session

	spice-pulse: adjust the playback latency when the min-latency property changes
	If the current latency is smaller than the new min-latency
	value, we cork the playback till the target latency is achieved.

	Note: I didn't modify the prebuf configuration and used
	pa_stream_prebuf, because pulse updated the prebuf only if
	I set both prebuf and tlength to be target_latency*2. Then,
	due to the tlength growth, each time the playback latency deviated
	from the target latency, an underflow occurred. Since the latency
	that is computed by the server is not exact and is based on its
	current evaluation of the bit-rate, which is dynamic, it is better not
	to change the tlength (in order to avoid unnecessary underflows).

	channel-playback: support SPICE_MSG_PLAYBACK_LATENCY
	Add a new property for minimum playback latency. This property is
	updated with the value from SPICE_MSG_PLAYBACK_LATENCY.
	I also increased the default latency from 100ms to 200ms in order to
	be more robust to different bandwidth settings.
	The patch also updates spice-common submodule.

	channel-display: video stream quality report
	Handle MSG_STREAM_ACTIVIATE_REPORT and send MSGC_STREAM_REPORT
	periodically, or when the playback is out of sync.
	The patch also updates spice-common submodule.

	channel-playback: provide access to playback properties via the session
	Support checking whether an audio playback is active and what its latency
	is.

	spice-pulse: update the playback latency automatically when it changes

	channel-display: collect and print video stream stats
	also prints the number of underflows during a spice-pulse audio playback

2013-04-12  Christophe Fergeau  <cfergeau@redhat.com>

	Revert "build-sys: keep common submodule up to date"
	This reverts commit 5150285e1cba35570c29bd923df065d2c81f081e.

2013-04-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: enforce secure channels

	option: add --spice-secure-channels

	Add function to return Spice channel type from string

	Add function to return list of supported channels

	session: add secure-channels property

	channel: try TLS only once
	A broken server may reply to switch to TLS again and again. spice-gtk
	should only try once.

	cosmetic: fix indentation and comment

2013-04-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.19

	build-sys: bump spice-glib version
	new symbols in spice-glib, bump before release

	Update README/TODO

	spicy-ss: quit when channel error

	Rename snappy to spicy-screenshot
	Following discussion on the ML:
	http://lists.freedesktop.org/archives/spice-devel/2013-April/012953.html

	build-sys: keep common submodule up to date
	This requires git 1.8.2 to work properly. With this we should no longer
	need to update the reference, assuming the tarball is always up to
	date (that doesn't change from before, you need to update the submodule)

2013-04-10  Alex Efros  <powerman-asdf@yandex.ru>

	gnome-rr: keep user DPI
	I'm running startx -dpi 144, but after exiting from spicy's full screen mode Xorg DPI reset to 96. Attached patch fix this issue by keeping user's DPI.

	See also: https://bugs.gentoo.org/show_bug.cgi?id=448362

	https://bugs.freedesktop.org/show_bug.cgi?id=58715

2013-04-10  Tiziano Müller  <tiziano.mueller@stepping-stone.ch>

	build: fix parallel install
	This is a workaround for broken parallel install support in automake
	with LTLIBRARIES, see http://debbugs.gnu.org/cgi/bugreport.cgi?bug=7328

	Broken parallel install can be reproduced when building with --with-gtk=2.0
	and dies with:
	/home/teuf/redhat/spice-gtk/gtk/.libs/libspice-client-gtk-2.0.so: file not recognized: File truncated
	collect2: error: ld returned 1 exit status
	libtool: install: error: relink `SpiceClientGtk.la' with the above command before installing it
	make[5]: *** [install-pyexecLTLIBRARIES] Erreur 1
	m

2013-04-10  Christophe Fergeau  <cfergeau@redhat.com>

	Use a GHashTable for list of file transfer tasks
	This list is used to lookup tasks by their numerical id, so
	a hash table is a more appropriate data structure for this kind of
	uses.

2013-04-10  Hans de Goede  <hdegoede@redhat.com>

	spice-common: Update

2013-04-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: don't send current configuration back
	spice-gtk keep the main channel monitor configuration in sync, but
	shouldn't send back to the remote if disabled, as this may results in
	different settings, for example if the remote has switched to
	16 bits.

	main: add spice_main_update_display()
	Allow to change locally display resolution without sending it to remote,
	this is useful to keep local information without bothering the remote.

2013-04-09  Yonit Halperin  <yhalperi@redhat.com>

	channel_base: exit handle_migrate when expecting MIGRATE_DATA and receiving something else
	Previously, when an error occurred on the src server side, and we
	received other message than MIGRATE_DATA, this messages was forwarded
	to the dest server, and made it crash.

2013-04-09  Hans de Goede  <hdegoede@redhat.com>

	channel-main: Don't g_warn when not finding a file-xfer-id
	Since the agent channel can have a significant latency, it is possible
	for a cancel send from the client to the agent and a status message from
	the agent to cross each other. If this happens then the file-xfer will no
	longer be on the list.

	Printing a g_warning on this (rare but triggerable) condition will only get
	us hard to debug bug reports, so turn it into a SPICE_DEBUG.

	channel-main: Cancel active file-xfers on channel/agent disconnect

	channel-main: Check no callbacks are pending on xfer start and end
	We should never have pending callbacks when we receive a file-xfer start or
	end (success) message from the agent.

	channel-main: Don't call g_input_stream_close on a NULL stream
	If we fail to open a file, task->file_stream will be NULL, so we should
	not call g_input_stream_close on it.

	channel-main: Allow calling file_xfer_close_cb with a NULL object
	So that it can used for cleanup before we've a file_stream.

	Note this also gets rid of the weird double initialization of the local
	stream variable.

	channel-main: Don't close the file_stream if callbacks are pending
	If file_xfer_completed gets called while callbacks are pending we should
	not call g_input_stream_close_async, because:
	1) Doing so while another operation is pending on the file_stream will fail
	2) Doing so while a non file_stream callback is pending may result in the
	task being freed before the callback runs, resulting in a use after free.

	This patch fixes this by setting a pending flag when any callbacks are
	scheduled, and clearing it when it runs + checking for task->error
	from all callbacks and if that is set call file_xfer_completed again.

	channel-main: Use file_xfer_completed where appropriate

	channel-main: file_xfer_failed -> file_xfer_completed
	Make file_xfer_failed usable for all file_stream closing.

	channel-main: Make SpiceFileXferTask-s ref the channel
	So that the channel sticks around while their callbacks are completing.

	channel-main: Reset agent message receive state on agent stop
	Discard any partially received messages from the agent on agent stop.

	channel-main: Add a spice_main_channel_reset_agent helper function

	channel-main: Drop bogus xfer_id check from file_xfer_send_start_msg_async
	xfer_id > UINT32_MAX is never true since xfer_id is an uint32_t, and
	thus explicit wrapping is not necessary since it will wrap every
	UINT32_MAX + 1 itereations anyways.

	channel-main: Properly verify result in spice_main_file_copy_finish
	Call g_simple_async_result_is_valid on the passed in result to verify it is
	what we expect.

	channel-main: Call g_simple_async_result_is_valid first
	Call g_simple_async_result_is_valid before using the result.

	Revert "channel-main: Fix dangling references to freed file-xfer-tasks on agent cancel"
	The fix from commit 19313a133af0d2404b29914b5937219127ad455b is incomplete,
	this commit added code to file_xfer_close_cb, to remove any reference to
	the task being closed from the flushing queue.

	But file_xfer_flushed / file_xfer_flush_async execute file_xfer_data_flushed_cb
	from an idle handler, so it is possible that when file_xfer_close_cb runs and
	frees the task, it is not part of the flushing queue, but a
	file_xfer_data_flushed_cb with the task as user_data argument still needs to
	run, and when it will run it will refer to the now freed task.

	A related problem which is also addressed in this patchset happens when we
	receive a file-xfer-cancel from the agent when an async operation on the
	file_stream is pending, since we then cannot call g_input_stream_close_async
	on it. This is fixed in the patchset by adding a pending flag to the task
	struct, and the problem with pending flushes is solved in the same way.

	spice-widget: Fix file drag-n-drop mime-type
	Currently the user can drag-drop text onto the widget, and it will try to
	open it as a file, not good, this fixes this.

2013-04-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	cairo: fix reference leak
	cairo_surface_finish() doesn't remove the reference,
	cairo_surface_destroy() does and will call surface_finish().

	Thanks to Uli Schlachter for noticing that in:
	https://bugs.freedesktop.org/show_bug.cgi?id=61876

2013-04-04  Uri Lublin  <uril@redhat.com>

	usb-device-manager: fix log messages to match vid:pid change
	On Windows clients now USB devices are identified by their vid:pid
	(sometimes these values are being held by variables "bus" and "addr")
	Change log messages accordingly.

	usb-device-manager: Windows: identify devices by vid:pid instead of bus.address
	rhbz#842816

	Sometimes bus.address of a USB device changes upon WinUSB driver installation
	for that device. This makes bus.address not a good identifier to use when
	running on Windows machines.

	Instead this patch makes usb-device-manager, when running on a Windows client,
	identify devices by their vid:pid.

	What changes were made in this patch (in addition to previous patches):
	- vid:pid are asked from the udev.
	- match functions that compare vid:pid were added
	- when comparing devices vid:pid are used.

	This also means that a scenario where two USB devices with the same vid:pid
	on a Windows client is not supported. However there was a problem with this
	scenario before as on Windows drivers for (specific) USB devices are
	installed based on their vid:pid.

	usb-device-manager: Windows: spice_usb_device_equal_libdev: compare vid:pid
	When comparing spice_usb_device with a libusb_device on Windows clients,
	use vid:pid instead of bus.address

	It seems that a device bus.address may change when WinUSB driver
	is being installed.

	usb-device-manager: use a function to get vid:pid from a libusb_device
	To be reused later.

	Also implemented a get_device_descriptor function (in case it will be
	needed in the future).

	usb-device-manager: find_libdev: use a match function
	Instead of comparing directly against <bus, address>.

	In preparation of comparing against vid:pid for Windows clients.

	usb-device-manager: find_device: use a match function
	Instead of comparing directly against <bus, address>

	In preparation of comparing against vid:pid for Windows clients.

	usb-device-manager: constify spice_usb_device_get_ functions

	win-usb-dev: compare vid:pid instead of bus.addr (Windows)
	It seems that sometimes, on Win7 clients, bus.addr is changing
	when WinUSB driver is being installed (e.g. 4.1 -> 4.2).

	So compare vid:pid instead.

	win-usb-dev: make VID and PID available via get_property (Windows)

2013-04-03  Hans de Goede  <hdegoede@redhat.com>

	channel-playback/record: Refuse audio-vol-msgs with 0 channels
	Older servers send these, explicitly warn about this, rather then triggering
	the following error later:

	(remote-viewer:8726): GSpice-WARNING **: set_sink_input_volume() failed: Invalid argument

2013-04-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: do not handle win keys when the keyboard is not grabbed
	Special-case on win32, filter out the win keys when not having the
	keyboard grab. This is to avoid the win keys to be received both by
	the guest and the client, which can be undesirable in general.

	https://bugzilla.redhat.com/show_bug.cgi?id=873341

	Release pointer grab on grab-broken
	On windows, the client receives a WM_KILLFOCUS event which generates
	solely a keyboard grab-broken event.

	This event is received when pressing ctrl-alt-del (to show up the task
	manager), and we need to release the pointer grab and clip region in
	this case for the client to be usable.

	This also clear the clipping region when the client pops-up a dialog.

	Since keyboard focus is a pre-requisite for pointer grab, it sounds
	logical to release the pointer grab if losing keyboard focus, but for
	now, we just release it in grab-broken, as a result of discussion on
	the ML.

	Fixes:
	https://bugzilla.redhat.com/show_bug.cgi?id=857114
	https://bugzilla.redhat.com/show_bug.cgi?id=922818

2013-03-29  Hans de Goede  <hdegoede@redhat.com>

	channel-main: Don't send empty monitor config on main_init with agent
	Currently we send a monitor-config on any agent_start, including sending it if
	the agent is already started when the main channel connects, but when the main
	channel gets initialized, the display channels aren't intialized yet, so our
	monitor config will be empty. Resulting in the Linux agent logging:

	spice-vdagent[1285]: err: client sent config with all monitors disabled

	This patch fixing this by only sending our monitor-config to the agent when
	it (re)starts later on.

2013-03-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: copy the right nth monitor config
	i is our counter for c->display[]

2013-03-27  Christophe Fergeau  <cfergeau@redhat.com>

	Keep GSocketConnection around after initial connect
	There has been reports of recent spice-gtk versions not working on
	RHEL6 or Ubuntu 10.04. This happens because these systems have
	an older glib version without:

	commit a0e1b226a21ca498b301981b0c89e89ad9a31eb1
	Author: Dan Winship <danw@gnome.org>
	Date:   Fri Apr 23 08:47:18 2010 -0400

	    GSocketConnection: don't close the socket if it's still reffed

	    When disposing a GSocketConnection, don't explicitly close the
	    underlying GSocket. The GSocket will close itself if it gets
	    destroyed, and if it doesn't get destroyed, that presumably means the
	    app still wants to use it. Eg, this lets you use GSocketClient to
	    create a GSocketConnection, and then take the GSocket and destroy the
	    GSocketConnection.

	    https://bugzilla.gnome.org/show_bug.cgi?id=616855

	and spice-gtk commit 0f9a432c "session: allow to connect via HTTP CONNECT
	proxy" changed spice_session_channel_open_host to get its socket by doing:

	open_host->socket = g_socket_connection_get_socket(connection);
	g_object_ref(open_host->socket);
	g_object_unref(connection);
	(see socket_client_connect_ready)

	If glib does not have the commit mentioned above, then this won't
	work as expected as open_host->socket will get closed when 'connection'
	gets destroyed.

	This commit changes spice_session_channel_open_host to return a
	GSocketConnection rather than a GSocket so that we can keep the
	socket open even on older glib versions.

	Huge thanks go to Brad Campbell <brad@fnarfbargle.com> for doing all the
	spice-gtk/glib bisecting work.

2013-03-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Be less verbose about monitor config

2013-03-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: copy proxy setting
	Solve migration falling back to switch-host method when using proxy
	set through controller:

	https://bugzilla.redhat.com/show_bug.cgi?id=923894

2013-03-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk-session: remove clipboard timeout
	A large clipboard may take longer than 7s on slow networks. Since the
	Gtk+ API forces us to use an inner main-loop, exit it asap, if agent
	is disconnected for instance.

	https://bugzilla.redhat.com/show_bug.cgi?id=752483

	main: warn if receiving message from disconnected agent

	main: only notify on agent status change

2013-03-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller: don't try to set integrity on XP x64 edition
	XP x64 uses version 5.2, but doesn't accept setting the pipe to low
	integrity.

	5.2 seems to be shared with many versions (server 2003 for example),
	but only Vista+ matters, which is only major >=6.

	https://bugzilla.redhat.com/show_bug.cgi?id=918342

2013-03-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Notify of monitors when not using MonitorConfig
	Windows guest don't use MonitorConfig, but we may want to notify the
	client of the number of monitors.

	Related to: https://bugzilla.redhat.com/show_bug.cgi?id=919530

	Update current resolution when agent is started
	This ensures we have the requested resolution whenever possible.

2013-03-15  Hans de Goede  <hdegoede@redhat.com>

	spice-widget: Reconfiguring the grab is only needed on win32
	Commit 8a7e72e3 "widget: regrab when widget is reconfigured" adds an
	ungrab + grab call to the configure event handling code. Because:
	"On Windows, we need to update the cursor clip. Call ungrab&grab to update it."

	But on X11 this is not needed, see man XGrabPointer, which explains that
	the grab automatically adjusts to window resizing.

	Not only is it not needed it is also racy, causing spice-gtk based
	apps to log messages like:
	(remote-viewer:9935): GSpice-WARNING **: pointer grab failed 3

	This patch fixes this by disabling the ungrab + re-grab on non-win32.

	spice-widget: Fix auto-grab on window size change
	Commit 8a7e72e3 "widget: regrab when widget is reconfigured" adds an
	ungrab + grab call to the configure event handling code. But it does this
	without checking if the mouse is grabbed at all, causing an unsolicited
	grab in certain scenarios, ie:

	1) User boots a vm
	2) Connects with remote-viewer
	3) Goes and do some web-browsing while the vm boots
	4) Mouse happens to hover over the remote-viewer window
	5) Guests changes resolution (ie X starts)
	6) The mouse is grabbed, and when the user tries to move it to
	   click something in his web-browser this does not work.

	This patch fixes this by checking that the mouse is grabbed before doing
	the ungrab + re-grab which is needed to reconfigure the grab to the new window
	size / location.

	spice-widget: Ignore duplicate configure events
	gtk seems to be sending us identical / repeated configure events quite
	regularly (atleast under X11), we don't care about re-configures with the
	same size + coordinates, so filter these out.

	Note this patch uses the SpiceDisplayPrivate mx and my members which
	were already defined to store the window position, but not yet used.

2013-03-11  Dunrong Huang  <riegamaths@gmail.com>

	spice-channel: Do not segfault fault if peer_msg was a NULL pointer
	$ remote-viewer spice://192.168.0.233:111 # 111 is not a valid spice port
	(remote-viewer:29381): GSpice-WARNING **: incomplete link header (-104/16)
	Segmentation fault (core dumped)

	$ gdb /usr/bin/remote-viewer core
	[Thread debugging using libthread_db enabled]
	Using host libthread_db library "/lib64/libthread_db.so.1".
	Core was generated by `remote-viewer spice://192.168.0.233:111'.
	Program terminated with signal 11, Segmentation fault.
	    switch_tls=0x7f9eb6855b88) at spice-channel.c:1675

	warning: Source file is more recent than executable.
	1675	    switch (c->peer_msg->error) {
	(gdb) bt
	    switch_tls=0x7f9eb6855b88) at spice-channel.c:1675
	    at spice-channel.c:2299
	    at coroutine_ucontext.c:58
	    at continuation.c:49

	c->peer_msg->error was accessed without checking the validity of pointer in
	spice_channel_recv_link_msg(). Actually, c->peer_msg may be a NULL pointer if
	we got a error in spice_channel_recv_link_hdr().

	This patch fixes this error.

2013-03-05  Christophe Fergeau  <cfergeau@redhat.com>

	usb: Remove device from ::devices before emitting device-removed
	The code is currently removing the USB device that is gone from
	the SpiceUsbDeviceManager::devices array after the device-removed
	signal has been emitted. As signal handlers are called synchronously,
	this means that the list returned by
	spice_usb_device_manager_get_devices() will still contain the
	removed device if it's called from the signal handler.

2013-03-04  Hans de Goede  <hdegoede@redhat.com>

	channel-main: Handle the new VD_AGENT_FILE_XFER_STATUS_SUCCESS status msg
	So that we can pass along an error from the agent to report an xfer error
	after the last FILE_XFER_DATA message has been sent.

	Update spice-common

	channel-main: Send an error to the agent on file-xfer read error
	So that the agent knows the rest of the file won't be coming.

	channel-main: Fix dangling references to freed file-xfer-tasks on agent cancel
	While testing the agent error handling code I was triggering the
	agent-file-xfer-cancel code-path in spice-gtk. This crashes due to the
	flushing queue still having a reference to the task in question when its
	gets cancelled from the agent side. This fixes this.

2013-02-28  Christophe Fergeau  <cfergeau@redhat.com>

	Add fallback for g_key_file_set_uint64
	This was only added in glib 2.26

	Don't try to call _wocky_http_proxy_get_type with old gio
	Proxy support is only built when gio is newer than 2.26, don't try
	to call symbols from wocky-http.c with older glib as this would
	result in link failures.

2013-02-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	smartcard: do not register monitor before smartcard init
	Never call vevent_get_next_vevent() before calling vcard_emul_init()

	Some mutexes are initialized in vevent_queue_init(), during emul_init()

	smartcard: trivial cleanup

	session: warn on invalid port value

2013-02-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: swap tls status during seamless migration
	In some cases, source and destinations may have different channel
	encryption. We need to swap tls state too during seamless migration.

	https://bugzilla.redhat.com/show_bug.cgi?id=855870

2013-02-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	main: use stable comparison function for monitors
	If monitors are equal, compare them by their addresses, to get the
	effect of a stable sort.

	main: use glib sort
	Use glib sort for monitors. This allows to share the same
	implementation and behaviour on various platforms.

2013-02-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.18
	v0.18
	=====

	- Build fix with Gtk+ unstable.
	- MinGW build fixes with old headers
	- Fixes rhbz#908057

2013-02-12  Hans de Goede  <hdegoede@redhat.com>

	usb-device-manager: Fix coldplug race
	It is possible for us to see a device show up twice, if it gets plugged
	in between us starting listening for new devices and doing "coldplug", then
	it will get added once from the coldplug code, and then again from from
	the hotplug code path. We already have code checking for this, but the check
	is only compiled in under Windows -> Remove the #ifdef to also catch this
	under Linux.

2013-02-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: keep monitor config updated if resize-guest is disabled
	https://bugzilla.redhat.com/show_bug.cgi?id=908057

	Update spice-common

2013-02-06  Uri Lublin  <uril@redhat.com>

	mingw: spice-widget: make sure MAPVK_VK_TO_VSC is defined
	MAPVK_VK_TO_VSC is defined in the file:
	    <path-to-mingw-sys-root>/mingw/include/winuser.h

	In older mingw-headers the definition of MAPVK_VK_TO_VSC is
	defined only -- #if _WIN32_WINNT >= 0x0601

2013-02-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: don't use -Wstrict-prototypes with Gtk+ 2.0

	build-sys: remove GTK_DISABLE_DEPRECATED
	Gtk 3.0 no longer includes deprecated headers if it's defined:
	http://git.gnome.org/browse/gtk+/commit/?id=a1de67f438f057711353a55b322babce7044226f

	We added it as a workaround for Gtk 2.0 build issue.

	build-sys: bump spice-glib version-info
	spice-glib version-info should have been bumped, since we have new
	symbols.

	249dd73132a7ecc1ceb32b4fea6529491ca219d3

	Release v0.17
	v0.17
	=====

	- Update spice-common with fedora 875348, 826036 fixes
	- Multi-monitor fixes (avoid monitor order shuffling, fix mouse offset
	  if monitor 0 is not at +0+0 and let agent do monitor offset)
	- Add support for VD_AGENT_CAP_SPARSE_MONITORS_CONFIG
	- Add controller & session "proxy" properties
	- Add drag and drop file copy support to send file to guest, you will
	  need capable agent to use that feature. Adds spice_main_file_copy_async()
	- Introspection fixes
	- Build fixes

	spice-proxy: explicitely mark as internal

2013-02-06  Hans de Goede  <hdegoede@redhat.com>

	widget: Fix mouse position reporting for multiple monitors on 1 display channel
	VDAgentMouseState contains a display_id and expects coordinates in multi-mon
	mode to be relative to the origin of the monitor specified by the display_id.

	The agent will then adjust the mouse coordinates for the position of the
	monitor as configured in the guest.

	In multiple monitors on 1 display channel spice-gtk is wrongly setting
	display_id to the channel_id (which is 0 for all monitors), and is working
	around the problems this causes by doing the adjustment of the mouse position
	itself.

	But the agent is still applying the correction for the monitor position to
	all VDAgentMouseState messages it gets, and since for all monitors a display_id
	of 0 is reported it always uses the position of display 0 for the correction.

	Since the position of display 0 is usally +0+0 this usually works, but as soon
	as the position of display 0 is not +0+0, the correction will get done twice
	for display 0, and the display 0 position will wrongly get added the mouse
	position for other displays.

	This patch fixes this by properly setting display_id, and removing the
	modification of the mouse coordinates as that is already done in the agent.

2013-02-04  Natanael Copa  <ncopa@alpinelinux.org>

	build: fix for automake-1.13
	Use AC_CONFIG_HEADER instead of deprecated AM_CONFIG_HEADER.

2013-01-31  Yonit Halperin  <yhalperi@redhat.com>

	update spice-common submodule
	obtaining a fix related to palettes caching (fedora 875348, 826036)

2013-01-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller: add proxy property

2013-01-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: clear SpiceSession:proxy also if SPICE_PROXY is NULL

	Add SpiceSession:proxy
	Add a session property to set proxy setting, since it is racy to rely
	on setenv(). Also doing so would override system environment, which
	will modify other session too sharing the same process.

2013-01-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	proxy: initialize proxy at session construct time

	Fix a bunch of gtkdoc/giscan warnings

	Update spice-common

	session: simplify a little bit open_host_idle_cb
	open_host->error is only set if we try to use a proxy. Let´s make that
	more clear.

2013-01-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: generate THANKS at dist time

2013-01-21  Jasper Lievisse Adriaanse  <jasper@humppa.nl>

	build-sys: Use a portable variable assignment in configure.ac

	build-sys: missing sys/types.h in gtk/channel-display.c

2013-01-18  Hans de Goede  <hdegoede@redhat.com>

	channel-main: Fix monitors_align to not shuffle monitor order
	Before this patch monitor_align was calling qsort directly on the
	VDAgentMonConfig monitors array, but VDAgentMonConfig does not contain
	an id, so the order matters!

	This fixes (for example) 2 issues with having 3 windows/monitors on a row
	numbered 1-3, ordered left-to-right as 1-2-3, and then changing the
	ordering to 1-3-2:
	1) Window 3 would be resized to the size of window 2, and window 2 would
	   get resized to the size of window 3.
	2) Dragging a window on monitor 1 over its right edge, makes the part over
	   the edge show up on the right monitor, rather then on the middle.
	This is happening because the agent is configuring qxl-1 (which is monitor 2)
	with the monitors[1] data, which after the qsort contains the size and
	coordinates of monitor 3.

	Note this only happens with virt-viewer fixed to properly send window
	coordinates, as before that all monitors had x and y set to 0 making the
	sort a nop.

	channel-main: Add support for VD_AGENT_CAP_SPARSE_MONITORS_CONFIG (rhbz#881072)

	spice-widget: update_monitor_area: Fix memory-leak on whole fallback
	When we've successfully gotten the monitors display-channel property, but
	still end up falling back to whole-display mode, we still need to free
	the monitors array.

	spice-widget: Search monitor info by display monitor-id
	As discussed indexing the display-channel's monitors property by monitor-id
	causes problems with the vdagent's new sparse monitor config support.

	Searching the monitors property by monitor-id avoids these problems.

2013-01-16  Andrew Hughes  <gnu.andrew@redhat.com>

	build-sys: fix out-of-tree build with vala

2013-01-16  Cole Robinson  <crobinso@redhat.com>

	Fix introspection for send_keys
	Without this I can't find a usable way to call this API with the
	introspected python bindings.

	https://bugs.freedesktop.org/show_bug.cgi?id=59444

2013-01-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: avoid use gtk+ 3.0 only API

2013-01-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	file-xfer: always take error if set in xfer_read_cb()

	file-xfer: use file_xfer_..() prefix for all internal copy functions

	file-xfer: move file_close_cb() above all to ease reading

	file-xfer: try to report any error from file_info_async_cb()

	file-xfer: non-programming errors should be reported in async
	It is fine to not return async errors for programming errors via
	g_return_if_fail() and friends, however, we need to return proper
	error if it's a normal run-time error.

	file-xfer: avoid g_alloca() usage when possible

2013-01-12  Dunrong Huang  <riegamaths@gmail.com>

	file-xfer: handle "drag-data-received" signal
	When user drags a file to SpiceDisplay and drops it, a signal named
	"drag-data-received" will be emitted, the signal will be received by
	SpiceDisplay, then our signal handler should receive data which contains
	file path, and call spice_main_file_copy_async() to transfer file to guest.

	file-xfer: disable file-xfer when agent is not connected

	file-xfer: handling various transfer messages in main channel
	This patch is aimed to handle various file xfer messages.

	How it works:
	0) our main channel introduces a API spice_main_file_copy_async().

	1) When user drags a file and drop to spice client, spice client will
	   catch a signal "drag-data-received", then it should call
	   spice_main_file_copy_async() for transfering file to guest.

	2) In main channel: when spice_main_file_copy_async() get called with file
	   list passed, the API will send a start message which includes file
	   and other needed information for each file. Then it will create a
	   new xfer task and insert task list for each file, and return to caller.

	3) According to the response message sent from guest, our main channel
	   decides whether send more data, or cancel this xfer task.

	4) When file transfer has finished, file xfer task will be removed from
	   task list.

2013-01-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.16
	v0.16
	=====

	- Fix crash with SSL connection (#890464)
	- Send monitor config to the agent on spice_main_set_display_enabled() (#881072)
	- Fix channel leak and wrong condition in spice_channel_flush()
	- Build fixes

	spice-channel: fix state condition check in flush()

	spice-channel: plug a channel ref leak

2013-01-09  Hans de Goede  <hdegoede@redhat.com>

	Send monitor config to the agent on spice_main_set_display_enabled (#881072)
	Currently we send an updated monitor-config to the agent whenever some
	of the display settings are changed (whenever spice_main_set_display is
	called), including when a new display is enabled, as that involves
	creating a new window, which calls spice_main_set_display. The only
	exception to this is when a display gets disabled.

	This is rather inconistent, it causes the user to be able to move windows
	in the guest to the now no longer visible monitor, and any windows which
	were already there are hidden... until something else triggers us sending
	updated monitor info. Withe gnome3 an alt-tab away and back again from a still
	open display-window is enough to trigger the update, and then the guest will
	all of a sudden become aware of the monitor no longer being there and
	re-arrange windows accordingly, on an alt-tab in the client machine ...
	not pretty.

	So lets make things consistent and also send the agent updated monitor info
	from spice_main_set_display_enabled, like we already do from
	spice_main_set_display.

2012-12-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix switching to TLS regression
	The commit fcbbc248a8f885f9a9a6e7c47d7aae0c1ab3cd1b changed the way a
	channel coroutine is exiting. In particular, it was going through the
	coroutine main cleanup (finishing in main coroutine) while switching
	to TLS is recycling the channel. That part of the code is a bit
	difficult to grasp, but with this refactoring, I think it makes it
	easier to understand the reconnection.

	Clean-up idle handler when leaving the open_host_idle()
	An explicit yield back to the channel coroutine when the idle function
	is still pending will leave it in the background, referencing objects
	that may no longer exist. Make sure we remove it when
	channel_open_host() is resumed.

2012-12-21  Christophe Fergeau  <cfergeau@redhat.com>

	mingw: Fix link errors
	Without this patch build fails with:

	  CCLD     libspice-client-glib-2.0.la
	.libs/spice-channel.o: In function `spice_channel_coroutine':
	/home/teuf/redhat/spice-gtk/gtk/spice-channel.c:2287: undefined reference to `_imp__setsockopt@20'
	.libs/channel-display.o: In function `create_compatible_dc':
	/home/teuf/redhat/spice-gtk/gtk/channel-display.c:672: undefined reference to `_imp__CreateCompatibleDC@4'
	../spice-common/common/.libs/libspice-common.a(canvas_utils.o): In function `release_data':
	/home/teuf/redhat/spice-gtk/spice-common/common/canvas_utils.c:41: undefined reference to `_imp__DeleteObject@4'
	../spice-common/common/.libs/libspice-common.a(canvas_utils.o): In function `surface_create':
	/home/teuf/redhat/spice-gtk/spice-common/common/canvas_utils.c:192: undefined reference to `_imp__CreateDIBSection@24'
	/home/teuf/redhat/spice-gtk/spice-common/common/canvas_utils.c:208: undefined reference to `_imp__DeleteObject@4'
	../spice-common/common/.libs/libspice-common.a(ssl_verify.o): In function `inet_aton':
	/home/teuf/redhat/spice-gtk/spice-common/common/ssl_verify.c:38: undefined reference to `_imp__inet_addr@4'
	../spice-common/common/.libs/libspice-common.a(ssl_verify.o): In function `verify_hostname':
	/home/teuf/redhat/spice-gtk/spice-common/common/ssl_verify.c:216: undefined reference to `_imp__inet_ntoa@4'
	collect2: error: ld returned 1 exit status

2012-12-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.15
	v0.15
	=====

	- Add HTTP Proxy support (only with glib >= 2.26)
	- Add "port" channel support, to allow arbitrary communication on top
	  of spice connection
	- usb-redir: fix migration support
	- win32: various keyboard & mouse fixes
	- Add info message when USB dialog is empty
	- Fix initial black screen on some 16bits guest
	- Various bug fixes and improvements

	build-sys: update sym-files

	session: improve open_host() clean-up
	Make sure the GSocketClient is unref when leaving the function, and
	not left around in some unfinished async state.

	session: do not unref() NULL connection
	 #3  0x00007ffff59cfb3b in g_object_unref (_object=0x0) at gobject.c:2916
	 #4  0x00007ffff6ea9c20 in socket_client_connect_ready (source_object=0x87ced0,
	     result=0x8a58f0, data=0x7fffe3fffa80) at spice-session.c:1606
	 #5  0x00007ffff5ea1278 in g_task_return_now (task=0x8a58f0) at gtask.c:1102

2012-12-20  Hans de Goede  <hdegoede@redhat.com>

	acl-helper policykit policy: Allow redir by default for console users
	This makes usb-redir a lot more userfriendly to use. This  has been
	discussed with the security team and they are ok with it, rationale:

	Since we only set <allow_active> to yes, we only give raw usb access
	to users *physically present behind the machine*. This is ok since
	they already have full control over usb devices anyways, they can
	always just unplug the device and put it in a user controlled machine.

	This follows how we already grant a great deal of access to users
	*physically present behind the machine* including dangerous things like
	/dev/sg access for cd/dvd writers. And raw usb access to all devices which
	happen to have a userspace driver rather then an in kernel driver.

	Also the opening up is limited compared to the existing opening up of
	other devices listed above in that:

	1) It will only happen on machines which have spice-glib installed
	2) We are not opening up the device nodes rights automatically, as an udev rule
	would do. So there is no chance that any random app can start (accidentally)
	poking the devices.

2012-12-19  Hans de Goede  <hdegoede@redhat.com>

	spicy: Fix compilation breaking due to a compiler warning
	This fixes:
	spicy.c:1711:10: error: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Werror=unused-result]

2012-12-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller: fix new vala warnings
	send_msg() is done in background, use .begin

	controller.vala:62.3-62.10: warning: implicit .begin is deprecated
	foreign-menu.vala:44.3-44.10: warning: implicit .begin is deprecated
	foreign-menu.vala:59.3-59.10: warning: implicit .begin is deprecated
	foreign-menu.vala:70.3-70.10: warning: implicit .begin is deprecated
	Compilation succeeded - 4 warning(s)

	channel: switch to protocol 1 on error during link-time
	The Spice server doesn't wait until all the data are received by the
	remote before closing the socket (that would need SO_LINGER?). Under
	some racy conditions, the client may not have received the link reply
	indicating the server protocol version mismatch, which would trigger
	reconnection with compatible protocol.

	It seems to happen on local networks with Windows sockets (error
	WSAECONNRESET). To workaround that issue, spice-gtk can try to
	reconnect with protocol 1 when a socket error is encoutered during
	link-time.

	Fixes:
	https://bugzilla.redhat.com/show_bug.cgi?id=874698

2012-12-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: allow to connect via HTTP CONNECT proxy
	Allow to connect to a Spice server via a HTTP proxy with CONNECT
	method. spice-gtk will use the SPICE_PROXY environment variable, which
	can currently only have the following syntax: [http://]hostname[:port]

	This is paving the way to more proxies support (socks4/socks5).

	This code is now entirely sync (it was not even completely async), the
	following patch will make it all async again.

	Tested with Squid, locally only.

	Add SpiceProxy object
	Add a simple object to handle the SPICE_PROXY values.

	It's not clear to me whether each GIO user needs to handle the proxy
	configuration, or if there is a more global mechanism (via
	g_network_address_parse_uri())

	Also, the parsing is currently very limited and only support basic
	HTTP proxy URI. In the future, we really want to rely on GUri or
	similar instead...

	Add wocky HTTP proxy
	Courtesy of Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	It might make sense to include this proxy in glib/gio, but it is still
	missing some features according to its author, namely SSL and perhaps
	better CRLF.

	spice-channel: remove unnecessary g_socket_close()

	spice-channel: plug a small memory leak

2012-12-10  Uri Lublin  <uril@redhat.com>

	gtk/channel-port: include glib-compat for g_clear_pointer

	glib-compat: add g_slist_free_full

	channel-display: add more protection against bad access to streams

2012-12-07  Dunrong Huang  <riegamaths@gmail.com>

	spice-widget: Fix rendering issue with X11 backend enabled
	commit 5ec6e4d fixes a rendering issue on win32 platform, but raises another
	bug on linux platform.

	If X11 backend is enabled, app window will becomes while screen when draging it.
	This bug can be reproduced easily:
	compile spice-gtk using:
	$ ./configure --with-gtk=2.0 --with-x11
	$ make
	$ gtk/spicy -h host -p port

2012-12-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: rely on couroutine instead of channel state
	We can simplify the channel state callback and simplify a little
	the code by relying on coroutine state instead.

	spicy: demo SpicePort usage
	spicy has been modified to recognized 2 different port types to play
	with:

	* org.spice.spicy: will connect the port to the current stdin/stdout,
	  and can be used as a chardev for the qemu monitor

	* org.spice.spicy.break: will send a break event on connect and
	  disconnect immediately (exercice the port event and flush)

	Add a port channel
	A Spice port channel carry arbitrary data between the Spice client and
	the Spice server. It may be used to provide additional services on top
	of a Spice connection. For example, a channel can be associated with
	the qemu monitor for the client to interact with it, just like any
	qemu chardev. Or it may be used with various protocols, such as the
	Spice Controller.

	A port kind is identified simply by a fqdn, such as org.qemu.monitor,
	org.spice.spicy.test or org.ovirt.controller...

	channel: add flush_async()
	Add spice_channel_flush_async() that asynchronously will write all the
	pending channel data.

	update spice-common

2012-11-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: make spice_msg_out_send() slightly easier to read
	Avoid the obfuscating many -> indirection by using the
	SpiceChannelPrivate *c variable.

2012-11-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: fix rendering issue when widget is partially off screen
	Gtk+ in win32 has a rendering bug with window non-buffered:
	https://bugzilla.gnome.org/show_bug.cgi?id=688962

	According to Alex Larsson, this shouldn't affect performance much,
	since there is already extra-copy done for offscreen buffers, and
	might even make it faster in gtk+ 3.0...

	Fixes:
	https://bugzilla.redhat.com/show_bug.cgi?id=874482

2012-11-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	channel: learn to load certificate from memory
	Sadly, OpenSSL doesn't provide a way to load certificate from memory,
	but all the functions necessary to do so are actually public, so we
	can implement our own version and avoid files, how awesome!

	Add SpiceSession:ca property

2012-11-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: translate virtual-key code to scancode via MapVirtualKey
	Local client keyboard layout shouldn't affect hardware scancode sent
	to guest, so that guest keyboard layout configuration can map it
	properly.

	Unfortunately, the Win32 GdkEventKey.hardware_keycode isn't a hardware
	scancode, but the Windows virtual-key code. We could modify Gdk to
	return the scancode (available in MSG.lParam or via global hook), but
	that would mean some Gdk breakage, or some unnecessary complexity.
	Instead, we can rely on MapVirtualKey(), which translates the
	vitual-key code into a scan code using current keyboard layout.

	This solves the following bug:
	https://bugzilla.redhat.com/show_bug.cgi?id=871125

2012-11-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: track current window handle
	We need current window handle for the global keyboard hook. It is not
	enough to rely on focus-in event to set it, so do it also in
	key-event. This avoids extra warnings on Windows.

2012-11-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: clip and move cursor within window region
	Windows grab do not exist like on X11, so we need to clip the cursor
	to our client window, while making sure it doesn't overlap with
	windows statusbar. When wrapping the cursor, we need to make sure we
	also stay within the clip region, or else the clip is inverted
	(pointer can't enter the clip region anymore), and we also lose the
	keyboard hook/grab.

	The end result works better than spicec, which didn't exclude the
	Windows statusbar, and was subject to losing pointer when wrapping
	mouse over it.

	Another approach I have been playing with is to clip the cursor, and
	process raw input messages, this will have the advantage to work even
	when the client is completely out of the working area (under the
	statusbar for example), but the complexity involved is too high for
	very poor benefit (interacting with a non-visible client), we could
	even argue that the behaviour implemented by this patch is more
	correct (it refuses to grab the cursor if the client isn't visible in
	the working area).

	v2:
	- choose the nearest monitor for clipping
	- the ClipRegion is in Windows coordinate, we can't use gdk warp
	- fix https://bugzilla.redhat.com/show_bug.cgi?id=872640

	This solves the following bugs:
	https://bugzilla.redhat.com/show_bug.cgi?id=857430
	https://bugzilla.redhat.com/show_bug.cgi?id=857389

2012-11-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: regrab when widget is reconfigured
	On Windows, we need to update the cursor clip. Call ungrab&grab to update it.

	widget: don't redraw server mouse until moved
	When switching between client mode and server mode, the pointer is
	being invalidated on each display and the cursor will end up being
	drawn on both. Since there is no information on which display the
	cursor is supposed to be until a move is received, hide the cursor
	until it actually moves.

2012-10-25  Uri Lublin  <uril@redhat.com>

	win-usb-driver: use usbclerk new message: USB_CLERK_DRIVER_SESSION_INSTALL
	With this message usbclerk keeps a list of devices for which
	a libusb driver was installed (per connection).
	When a spice-gtk client exits, the connection is closed, and
	usbclerk uninstalls the driver for all devices in the list.

	That means we need to keep the connection open, so added
	the win-usb driver installer to usb-device-manager's priv.

	This prevents the case were the user exits the client, while a usb
	device is connected to the guest, and can not use the device from
	the client machine.

	rhbz#869542

2012-10-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller/win32: limit access to current user only
	Based on RHEV spicec-win only code.

	controller/win32: allow ActiveX connection on untrusted website
	Set low integrity on named-pipes.

	This bug was originally resolved as:
	https://bugzilla.redhat.com/show_bug.cgi?id=668980

	Fixes regression:
	https://bugzilla.redhat.com/show_bug.cgi?id=844461

2012-10-24  Uri Lublin  <uril@redhat.com>

	spice-gtk: controller: log messages received from a controller

2012-10-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: implement disabling mouse accel
	https://bugzilla.redhat.com/show_bug.cgi?id=867885

	move mouse acceleration code in a seperate function

	Fix disabling mouse acceleration on X11
	It turns out the acceleration code didn't work, because we didn't set
	it to the default values. Then we need to restore it back. Eventually,
	it would be nicer to inhibit gnome-settings-daemon to apply devices
	changes, and restore settings when un-inhibiting.

	https://bugzilla.redhat.com/show_bug.cgi?id=867885

2012-10-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Empty host subject from qemu should only validate hostname
	Validate empty host subject from qemu exactly like when no explicit
	host subject is specified.

	https://bugzilla.redhat.com/show_bug.cgi?id=858228

	channel: improve debugging message
	The open_host() can return FALSE when the connection is discarded or
	skipped. Improve the message to not indicate a failure.

	https://bugzilla.redhat.com/show_bug.cgi?id=858232

	Print list of supported channels
	https://bugzilla.redhat.com/show_bug.cgi?id=834513

2012-10-18  Hans de Goede  <hdegoede@redhat.com>

	channel-inputs: Fix sending 00 scancodes to guests with scancode cap
	The code for handling single key up / down events in spice-server is:
	        SpiceMsgcKeyDown *key_down = (SpiceMsgcKeyDown *)buf;
	        uint8_t *now = (uint8_t *)&key_down->code;
	        uint8_t *end = now + sizeof(key_down->code);
	        for (; now < end && *now; now++) {
	            kbd_push_scan(keyboard, *now);
	        }

	Notice the *now, which makes sure that no scancodes with the value 0 get
	send! But the new SPICE_MSGC_INPUTS_KEY_SCANCODE in the server does:

	        uint8_t *code = (uint8_t *)buf;
	        for (i = 0; i < size; i++) {
	            kbd_push_scan(keyboard, code[i]);
	        }

	And thus will push any 0 bytes in the buffer. Resulting in these message
	in the guest:

	atkbd serio0: Unknown key pressed (translated set 2, code 0x0 on isa0060/serio0).
	atkbd serio0: Use 'setkeycodes 00 <keycode>' to make it known.

	Rather then making the server skip 0 bytes I believe it is better to just
	make spice-gtk not send these in the first place, which is what this patch
	does.

2012-10-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: implement sync_keyboard_lock_modifiers()
	Fix numlock numerical keypad being broken:
	https://bugzilla.redhat.com/show_bug.cgi?id=856538

	spicy: show the correct ungrab key combination
	The gtk accelerator for ungrab is useless, since it has to be handled
	by the spice widget only. It could be useful to still show the ungrab
	key sequence in the menu (for help), but unfortunately, spice-gtk grab
	sequence syntax is not the same as gtk accelerator syntax, and that
	would be needlessly complicated to handle.

	Also correctly show the configured sequence in the status bar when the
	widget has the grab.

	https://bugzilla.redhat.com/show_bug.cgi?id=851090

2012-10-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: apply color conversion when creating image
	The color conversion only happened during "invalidate", but we also
	need to apply it when the image is created in the first place.

	This solves initial screen being black after connection to agent-less
	guest with 16b colour depth:

	https://bugzilla.redhat.com/show_bug.cgi?id=843134

2012-10-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	win32: ignore hardware keycode 255
	It's a reserved value, and it doesn't have a valid scancode
	translation. Currently, We hit a warning in the delayed key handling
	later.

	vnc keymap: fix incorrect table size
	This lead to out of bound array access

	Add a warning if scancode lookup failed
	This helps tracking some send_keys() issues, such as
	https://bugzilla.gnome.org/show_bug.cgi?id=686170

	win32: fix quote key handling
	Fix keymaps to correctly handle the quote key.

	https://bugzilla.redhat.com/show_bug.cgi?id=856317

2012-10-11  Hans de Goede  <hdegoede@redhat.com>

	Add spice-usbredir-filter alias for spice-usbredir-auto-redirect-filter (v2)
	For commandline backward compatibility with older spice-gtk versions.

	Changes in v2:
	-warn about spice-usbredir-filter being deprecated when it gets used

	UsbDeviceManager: Don't warn on EINTR

	UsbDeviceManager: Hookup redirect-on-connect property

	UsbDeviceManager: Build channel list after building the device list
	This is necessary for redirect-on-connect

	UsbDeviceManager: Add a redirect-on-connect property

	Rename spice-usbredir-filter option to spice-usbredir-auto-redirect-filter
	The spice-usbredir-filter cmdline option was not chosen well, as it does
	not indicate what it filters. Now that we are also getting a filter for
	selecting already plugged in devices to redirect when a spice connection gets
	established, it needs to be renamed to make its function more clear.

2012-10-09  Hans de Goede  <hdegoede@redhat.com>

	usb-redir: Fix read error handling depending on SpiceUsbDevice == libusb_device
	This has not been true for a while now, but since getting an error return
	from usbredirhost_read_guest_data() is rare no one has tripped over this
	sofar.

2012-10-08  Hans de Goede  <hdegoede@redhat.com>

	channel-usbredir: Properly reset state from reset callback
	This is necessary to be able to use the usbredir channel after a
	non seamless migration.

	Set channel state before calling channel_reset
	This way functions called from the channel_reset function can rely
	on state accurately reflecting the state. This is necessary to stop
	channel-usbredir's reset callback from trying to send the initial
	hello message while the channel is no longer in a connected state.

2012-10-03  Christophe Fergeau  <cfergeau@redhat.com>

	Update spice-glib-sym-file for new symbol

2012-10-01  Christophe Fergeau  <cfergeau@redhat.com>

	usb: Add info message when USB dialog is empty
	From rh bug #804187:
	« The redirection dialog can feel a bit strange when there is no device to
	redirect.

	It could be useful to provide a help message indicating that there is no
	device to redirect yet, and that the user can insert a USB device to
	redirect, and some related guidance. »

	This commit adds a "No USB devices detected" infobar in the USB
	dialog below the 'Select USB devices to redirect" label.
	Content could probably be improved, but this is a step in the right
	direction ;)

	This can be tested with
	diff --git a/gtk/usb-device-widget.c b/gtk/usb-device-widget.c
	index b1bf090..660ea03 100644
	--- a/gtk/usb-device-widget.c
	+++ b/gtk/usb-device-widget.c
	@@ -220,6 +220,11 @@ static GObject *spice_usb_device_widget_constructor(
	                      G_CALLBACK(device_error_cb), self);

	     devices = spice_usb_device_manager_get_devices(priv->manager);
	+    if (devices) {
	+        g_ptr_array_unref(devices);
	+        devices = NULL;
	+    }
	+
	     if (!devices)
	         goto end;

2012-09-25  Hans de Goede  <hdegoede@redhat.com>

	Deal with libusbredirparser.pc rename to libusbredirparser-0.5.pc
	The usbredir 0.5 release introduced the new API for 64 bit packet ids, but
	it kept the libusbredirparser.pc name as is, meaning that older versions of
	qemu will still have their pkg-config check for usbredirparser fulfilled,
	and build with the usb-redir device. Due to the API change there will be
	some compiler warnings, but the build will succeed, however the usb-redir
	device will be broken on 32 bit machines.

	To solve this, the usbredir-0.5.2 release renames the libusbredirparser.pc
	file to libusbredirparser-0.5.pc, so that it will no longer fulfill the
	pkg-config check of the qemu-1.2 and older releases, stopping the (silent)
	breakage.

	spice-gtk does not use the changed parts of the API, but does
	use libusbredirparser for the usbredirfilter* functions. This patch adapts
	spice-gtk's configure to accept both the libusbredirparser-0.5 and the
	libusbredirparser pkg-config names.

2012-09-25  Marc-André Lureau  <marcandre.lureau@gmail.com>

	G_GNUC_DEPRECATED_FOR must be defined publicly
	It's not enough to define G_GNUC_DEPRECATED_FOR in glib-compat.h,
	since this header is not public. Instead, let's define our own
	public SPICE_DEPRECATED_FOR macro, and clean-up double definition.

2012-09-24  Dunrong Huang  <riegamaths@gmail.com>

	spicy: Make "CopyToGuest" and "PasteFromGuest" insensitive if spice agent is not connected
	"CopyToGuest" and "CopyToGuest" can not work if spice agent is not
	connected, e.g. guest does not install or enable spice agent, or spice
	server does not create vdagent channel.

	In these cases, make those item insensitive.

2012-09-21  Christophe Fergeau  <cfergeau@redhat.com>

	Update spice-common submodule

	Update git.mk to latest version

2012-09-20  Christophe Fergeau  <cfergeau@redhat.com>

	Update NEWS

	Unescape SpiceSession::uri component by component
	Unescaping the whole URI and then parsing it is dangerous as
	the unescaping may (for example) add some extra '/' in the URI
	which are not part of a path. It's better to do the unescaping later
	once the URI has been split in separate components.
	This commit unescapes the path, host and query values. Handling escaped
	query values is important for usernames/passwords which might contain
	chars which are invalid in URIs.
	If the host is enclosed in [], it's intentionally not escaped as this
	contains an ipv6 URI, and may contain a %zone_id (see RFC4007). This is
	consistent with libvirt/libxml2 behaviour, not with what gvfs does.

2012-09-14  Colin Walters  <walters@verbum.org>

	usb-acl-helper: Clear environment
	Otherwise we can be subject to attack via environment variables such
	as DBUS_SYSTEM_BUS_ADDRESS.
	This addresses CVE-2012-4425 http://seclists.org/oss-sec/2012/q3/470

2012-09-13  Christophe Fergeau  <cfergeau@redhat.com>

	cursor: don't access unitialized data when logging
	SpiceCursor::header is only valid when SPICE_CURSOR_FLAGS_NONE is
	not set in SpiceCursor::flags, so don't try to log info about
	the header before we have tested this flag.

2012-09-12  Christophe Fergeau  <cfergeau@redhat.com>

	channel: Introduce CHANNEL_DEBUG for channel debug logs
	It automatically prepends the channel name to the log message
	for easier debugging.

	Fixes rhbz#822437

2012-09-10  Christophe Fergeau  <cfergeau@redhat.com>

	build-sys: Fix symbol versioning
	My changes in bug 5bf72a2e had a typo which broke symbol versioning
	of libspice-client-gtk.so when -Wl,--version-script is available...

	Update spice-common submodule
	We need a newer spice-protocol to get the definitions for A8 surfaces.
	Without it, compilation is broken.

	Fix VD_AGENT_HAS_CAPABILITY use
	The 'size' argument to this macro (defined in
	spice-protocol/spice/vd_agent.h) is the number of 32 bit elements
	available in its first argument. In channel-main.c it's used
	most of the time with SpiceMainChannelPrivate::agent_caps which is
	an uint32_t[VD_AGENT_CAPS_SIZE]. The 'size' argument to pass to
	VD_AGENT_HAS_CAPABILITY is thus the number of elements in this array,
	and not sizeof(agent_caps).

	Fixes rhbz#837545

2012-09-07  Søren Sandmann Pedersen  <ssp@redhat.com>

	Advertise SPICE_DISPLAY_CAP_A8_SURFACE

2012-09-06  Christophe Fergeau  <cfergeau@redhat.com>

	build: Add fallback symbol files to EXTRA_DIST

2012-09-05  Uri Lublin  <uril@redhat.com>

	spicy: add --title=<title> command line option

	Revert "spice-common removed"
	This reverts commit 519f118c7786aa0c16cd2a5f216b52cea4ac42d5.

	spice-common removed

2012-09-03  Alexander Larsson  <alexl@redhat.com>

	Fix region leak in gtk2 compat defines
	https://bugs.freedesktop.org/show_bug.cgi?id=54277

2012-09-02  Søren Sandmann Pedersen  <ssp@redhat.com>

	Advertise SPICE_DISPLAY_CAP_COMPOSITE

	Add support for Composite command
	All the real work is done in spice-common, so this is a pretty simple
	change.

	Conflicts:
		spice-common

2012-08-31  Alexander Larsson  <alexl@redhat.com>

	Make region code build with gtk2
	https://bugs.freedesktop.org/show_bug.cgi?id=54277

2012-08-31  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix X11 backend
	The X11 backend allocates the "image" with X11 and needs the widget to
	be realized before calling spicex_image_create().

	https://bugs.freedesktop.org/show_bug.cgi?id=54310

	Update SpiceDisplay:only-downscale documentation

2012-08-31  Alexander Larsson  <alexl@redhat.com>

	Fix flickering regression on some systems
	For some reason the way we remove the "inner" area
	when clearing the background doesn't work on one computer.
	I don't really know why, but the current approach does seems a
	little fragile.

	This replaces it with a solid region operation that works on
	all my machines.

	https://bugs.freedesktop.org/show_bug.cgi?id=54277

2012-08-30  Alexander Larsson  <alexl@redhat.com>

	Add only_downscale property
	When this is enabled we never scale displays larger
	than their actual size.

	https://bugs.freedesktop.org/show_bug.cgi?id=54277

	Centralize scaling handling
	This moves all the handling of scaling calculations and
	positioning of the display inside the widget into one place.

	This makes it easier to later change how scaling works.

	Also, the new scaling only support aspect-ratio-keeping
	scaling.

	https://bugs.freedesktop.org/show_bug.cgi?id=54277

2012-08-30  Christophe Fergeau  <cfergeau@redhat.com>

	Move AM_PROG_AR before LT_INIT call
	The other way round generates warnings:
	configure.ac:14: warning: LT_INIT was called before AM_PROG_AR
	aclocal.m4:1015: AM_PROG_AR is expanded from...

2012-08-29  Alon Levy  <alevy@redhat.com>

	support automate >= 1.12 with new required AM_PROG_AR

2012-08-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update spice-common

2012-08-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	glib-compat: add G_GNUC_DEPRECATED_FOR
	G_GNUC_DEPRECATED_FOR was introduced in glib 2.26

	misc build fix when --disable-smartcard

	widget: differentiate key press & release from press only events
	Until now, Spice clients only sent separate key events for press and
	release. But this may result in unwanted key repetition from guest VM
	side. It seems OSes have various implementations. While MS Windows
	relies on hardware key repeats (which are several sequential press
	events), otoh, X11 uses software key repeat (although not Linux
	keyboard/VT by default).

	We can't easily disable guest side repeaters, as it may be enforced by
	other components (a X11 client can adjust each key individually, or
	the desktop settings may change it etc.). Neither can we rely only on
	guest software repeater as Windows doesn't seem to have one by
	default, so we need to keep sending multiple press events as of today.

	It seems a nice way to improve the situation is to send a single
	"press&release" key event when the user released the key within a
	short delay. If the key is pressed for longer, we keep the existing
	behaviour which has been working pretty well so far, sending separate
	"press", then repeatedly "press", and an ending "release" event.

	v2:
	- fix some commit message spelling spotted by Alon & Christophe
	- simplify a bit the timer handling code after Hans review
	- remove the submodule change (will be updated in earler patch once
	  pushed upstream)

	widget: add keypress-delay property
	The delay before the press event is sent to the server if the key is
	kept pressed. If the key is released within that time, that delay is
	ignored and a single key-press-release event will be sent.

	widget: give more context to send_key()
	- use a more explicit SendKeyType enum
	- if the key is a modifier key, we don't want to delay press event

	v2: fix compilation (remove down usage)

	inputs: add spice_inputs_key_press_and_release()
	If the server is capable of SPICE_INPUTS_CAP_SCANCODE, then we send
	can send a single message with key press and release, to avoid
	unwanted guest side key repeatition due to network jitter.

	If the server is not capable, spice-gtk will use some compatibility
	mode and send the existing DOWN and UP key events seperately.

	util-priv: factor out spice_make_scancode()
	Factor out the keyboard scancode manipulation function, to be reusable
	by newer code.

	Update spice-common

2012-08-28  Yonit Halperin  <yhalperi@redhat.com>

	channel-smartcard: do not attach temporary migration channel to smartcard
	During migration, the smartcard channel that belongs to the temporary
	copied session shouldn't be active.

	migration: copy enable-smartcard/audio/usbredir state to the migrated session
	Otherwise, we will not create smartcard/usb channel on the destination
	side, and we will create audio channels, no matter if they existed
	of didn't exist for the src side.

	seamless migration: don't reset messages data when swapping channels
	When swapping the src and dest channels's, we need to keep
	the xmit_queue and msg serials. Their state is expected to stay the same
	after migration.

	seamless migration: transfer pending msgs to the destination, instead of sending them to the src before FLUSH_MARK
	In order to save migration time, and probably also decrease migration
	data size, we push the flush mark to the src server before any other
	message. All the other pending msgs will be sent later to the
	destination server (see next patch).

	seamless migration: src and dest servers handshake
	Flow:
	(1) *src* main channel coroutine (main_handle_migrate_begin_seamless):
	    handles SPICE_MSG_MAIN_MIGRATE_BEGIN_SEAMLESS; yields to the main loop,
	    supplying it the destination information needed for connection.
	(2) main context (migrate_connect):
	    Establishes a new session for connecting to the destination.
	    After all the channels are opened (async), their state, except for
	    the one of the main channel, is modified to
	    SPICE_CHANNEL_STATE_MIGRATING (see migrate_channel_event_cb);
	    no reading is done from the channel during this state.
	    The dest main channel's state is changed to SPICE_CHANNEL_STATE_MIGRATION_HANDSHAKE

	(3) *dest* main channel coroutine: sends to the dest server SPICE_MSGC_MAIN_MIGRATE_DST_DO_SEAMLESS
	    (see spice_channel_recv_auth)
	(4) *dest* main channel coroutine: recevices SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_ACK/NACK.
	     adds main_migrate_handshake_done to the main loop.
	(5) main context: when all the dest session channels are connected, and the main channel handshake
	    is done, we yield to the src main channel coroutine (see
	    migrate_channel_event_cb and main_migrate_handshake_done)
	(6) *src* main channel coroutine: sends to the src server
	    SPICE_MSGC_MAIN_MIGRATE_(CONNECTED|CONNECTED_SEAMLESS|CONNECT_ERROR)

	For more details see spice-protocol. commit
	1ad5d259cb4b695ec3106de7ccd082e031e7ae11

	seamless-migration: update spice-common submodule
	Update channel-main as well to support the change made to
	SpiceMsgMainMigrationBegin: it now holds all the destination fields
	inside SpiceMigrationDstInfo.

	channel_main: handle SPICE_MSG_AGENT_CONNECTED_TOKENS

	channel-base: remove bad check of SpiceMsgWaitForChannels validity
	SpiceMsgWaitForChannels is not packed. Comparing the original
	msg size to SpiceMsgWaitForChannels is wrong.

2012-08-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update spice-common

	Release v0.13

2012-08-26  Dunrong Huang  <riegamaths@gmail.com>

	spicy: connect from cli only if hostname and port are provided
	This patch will fix following error:
	$ spicy --spice-debug
	......
	(spicy:21981): GSpice-DEBUG: spice-session.c:1618 new main channel, switching
	(spicy:21981): GSpice-DEBUG: spice-gtk-session.c:811 Changing main channel from (nil) to 0x8534b0
	(spicy:21981): GSpice-DEBUG: spicy.c:1587 new channel (#0)
	(spicy:21981): GSpice-DEBUG: spicy.c:1590 new main channel
	(spicy:21981): GSpice-DEBUG: spice-channel.c:2255 Open coroutine starting 0x8534b0
	(spicy:21981): GSpice-DEBUG: spice-channel.c:2098 Started background coroutine 0x853538 for main-1:0
	(spicy:21981): GSpice-DEBUG: spice-channel.c:2122 connection failed, trying with TLS port
	(spicy:21981): GSpice-DEBUG: spice-channel.c:2126 Connect error
	GSpice-Message: main channel: failed to connect
	......

	When user starts spicy without any command-line arguments, spicy
	should not attempt to connected to server automatically because
	hostname or port are unknown at the moment.

	What this patch changes is to show the dialog window instead of
	connecting to server automatically if no hostname or port are found.

2012-08-10  Christophe Fergeau  <cfergeau@redhat.com>

	Check --spice-disable-effects parameter validity
	When --spice-disable-effects is used, error out unless this is
	the name of one of the effects we can disable.

	Fixes rhbz#818848

	Check --spice-color-depth parameter validity
	When --spice-color-depth is used, error out unless the color depth
	is 16 or 32.

	Fixes rhbz#818847

2012-08-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update spice-common

2012-08-08  Christophe Fergeau  <cfergeau@redhat.com>

	build: make spice-controller.pc installation conditional
	It shouldn't be installed when controller support is disabled.

	build: generate sym-file
	When -Wl,--version-script is not available, we fallback to using
	libtool --export-symbols feature, but the needed sym-file is missing
	from git. This commit adds generation of the sym-file to the
	update-map-file Makefile target, and adds a sym-file to git.
	The linker on OSX Lion doesn't like to have non-existing symbols
	specified in the symbol files it's given, so the symbols need to
	be split in glib symbols and gtk symbols.

2012-08-07  Christophe Fergeau  <cfergeau@redhat.com>

	build: add --enable-smartcard=auto support
	Currently, when running configure with no arguments, smartcard
	support is enabled by default, and configure will fail if it cannot
	find libcacard. This commit adds a --enable-smartcard=auto mode to
	configure which will use automatically enable smartcard support if
	libcacard is available, but it will be silently disabled if libcacard
	is not available. Passing --enable-smartcard will fail if libcacard
	is not available. Passing --disable-smartcard will always disable
	smartcard support and will not test for libcacard availability.

	build: make controller build optional
	Apart from the Vala bindings, this is the only part of spice-gtk
	which requires Vala to be built from git. Since it's only useful
	when spice-gtk is used in conjunction with an oVirt browser plugin,
	letting people disabling it will not necessarily cause issues.

2012-08-05  Matthias Clasen  <mclasen@redhat.com>

	Don't use GDK_THREADS_ENTER/LEAVE
	These macros have been deprecated. The quick fix for now is to just use the
	functions gdk_threads_enter/leave instead. They are deprecated as well, but
	deprecated functions don't cause the build to fail (unless you use -Werror).

2012-07-30  Hans de Goede  <hdegoede@redhat.com>

	Remove "usbredirhost: " prefix from usbredirhost error messages
	libusbredirhost prefixes all its messages with "usbredirhhost: ", which
	is useful when logging to stderr, but not so much when showing the error
	to the user in an error dialog, so remove the "usbredirhost: " prefix
	when we store the message in a GError.

2012-07-28  Hans de Goede  <hdegoede@redhat.com>

	channel-display: Set monitors_max to 1 on init
	This fixes remote-viewer with the new multi monitor support not working
	when connecting to a spice-server without the new multi-monitor support.

	Before this fix remote-viewer would hit the following g_return_if_fail:
	(remote-viewer:24787): remote-viewer-CRITICAL **:
	 virt_viewer_session_spice_display_monitors:
	  assertion `monitors->len <= monitors_max' failed

	spice-widget: release mouse grab on keyboard-grab-inhibit
	The purpose of the keyboard-grab-inihbit mechanism is to allow other apps
	to grab the input while the spice-widget has the focus, mainly when we're
	going to invoke policykit for usb-redirection, as that the policy-kit
	agent may want to grab the input.

	Before this patch we were only inhibitting the keyboard grab, which works fine
	for vms which are in client mouse mode, but is not enough for vms which are
	in server mouse mode.

	This patch also releases the mouse grab on keyboard-grab-inhibit, fixing
	the policykit dialog not showing (and thus usb redir not working) when
	running with server mouse mode. Note that this makes the inhibit-keyboard-grab
	name of the property no longer really cover what it does, but allas it is
	part of our ABI...

2012-07-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Run-time check monitor per display count <= 256
	Limit range of monitors, to avoid potential crashes lead by invalid
	received MonitorConfig values (could be misconfigured or misbehaving
	guest)

	This is a a client-side implementation limitation. Eventually, the
	range could be inscreased (or unlimited == 0) in the future...

2012-07-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Enable the display early when the widget is created
	The  spice_main_set_display_enabled() function  is  used  to mark  the
	display/monitor  config  as  enabled.  In  order  to  simplify  client
	implementation, the widget enables  the matching display automatically
	when the channel mark is received. This is only for legacy reason, and
	my lack  of understanding at  that time. It  could as well  be enabled
	earlier, when the widget is created.  It wasn't really a good decision
	to disable monitor when the mark is off, which can be toggled when the
	primary surface is resize for example, and can cause some races..

	Add SpiceDisplay:ready property
	There are several condition to meet in order to have a widget ready to
	be displayed: the monitor must exist, the area must intersect, and the
	display mark must be reached. This  property will help clients to know
	when the  widget display is  ready. Until now,  it was relying  on the
	channel  mark signal  only,  and had  to  deal with  the  rest of  the
	conditions without much help.

	Handle MonitorsConfig::max_allowed

	main: send monitor config immediately
	The only way this can be called currently is via the main/system
	coroutine. Remove display timer if any.

	Implement simple monitors alignment

	widget: use display monitors configuration
	Use display::monitors property to manage display area. Call
	update_area_monitor() to update the widget area depending on monitor
	configuration

	spicy: disable display when deleting window

	spicy: learn to deal with monitors

	Make-up a MonitorConfig if the server doesn't provide one
	This allows easier compatibility for clients that don't have to
	check and interact differently depending on channel capabilities.

	Handle SPICE_MSG_DISPLAY_MONITORS_CONFIG

	Don't attempt to draw an invalid area
	If we don't intersect, the area is invalid or of size 0.

	Use monitor_id to compute display_id

	Document spice_main_send_monitor_config()

	widget: don't forget to disconnect all signals handlers
	We forgot about display-mark. Use spice_g_signal_connect_object()
	helper, which will disconnect properly in all circunstances.

	spice_channel_connect() success if state >= CONNECTING
	We may have several widget trying to re-connect the channels now.
	It is fine to return successfully if we are already connecting or
	connected.

	widget: add monitor property with ctor

	Claim SPICE_DISPLAY_CAP_MONITORS_CONFIG

	Add spice_display_get_primary()

	display: add readonly monitors property

	glib-compat: add g_clear_pointer
	A helpful macro from glib 2.34

	Change surface_id to a guint32
	That's the correct type used by the protocol.

	widget: add main channel before other channels
	Make sure that the d->main channel member can be referenced when
	adding further channels, when we perform their setup.

	Add missing agent cap description

	display: learn to restrict display to an area
	Each spice widget can now restrict the area of the primary
	surface they show and interact with by setting the private
	area member.

	A nice clean-up would be to seperate an area object that
	would deal with clipping, input translation and color
	conversion, but the resulting code would be similar anyway

	widget: simplify redraw call

	Update spice-common

2012-07-16  Uri Lublin  <uril@redhat.com>

	usb-device-manager: mingw: connect: cleanup device if it's libdev is missing
	For Windows client, when connecting a device to the guest, if a libusb
	device (libdev) does not exist, cleanup and forget about that device.

	Most likely, the device was plugged out at driver installation
	time, and its remove-device event was ignored.

2012-07-12  Yonit Halperin  <yhalperi@redhat.com>

	migration/channel-inputs: reset motion count after migration
	The motion count must stay synchronized with the server, otherwise,
	it is possible that we will stop sending motion events to the server
	after migration.

	rhbz#835997

2012-07-11  Uri Lublin  <uril@redhat.com>

	usb-device-manager: do not try to connect a usb device that was removed
	If a device that is asked to be shared with the guest, is unplugged out
	of the machine before being redirected, then let the user know that
	usbredir of that device failed (and cleanup nicely).

	For Windows client, the time between request and redir is larger, as
	it includes the time it takes to install the libusb driver.

2012-07-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	usbutil: be more explicit about usbids_vendor_count usage
	I introduced a regression in the previous patch, counting the
	usbids_vendor_count from -1 if the previous attempt failed.

	usbutil: fix crash on windows
	vendor_count is the last access index, the actually count is +1.

	On Windows, it crashes later on because of corrupted memory.

	Thanks to valgrind for this precious help:

	==4535== Invalid write of size 2
	==4535==    at 0x40197E: spice_usbutil_parse_usbids (usbutil.c:170)
	==4535==    by 0x401CEC: spice_usbutil_load_usbids (usbutil.c:241)
	==4535==    by 0x4020C6: main (usbutil.c:322)
	==4535==  Address 0x56b740c is 12 bytes after a block of size 348,160 alloc'd
	==4535==    at 0x4A0884D: malloc (vg_replace_malloc.c:263)
	==4535==    by 0x4EAAEBE: g_malloc (gmem.c:159)
	==4535==    by 0x401847: spice_usbutil_parse_usbids (usbutil.c:156)
	==4535==    by 0x401CEC: spice_usbutil_load_usbids (usbutil.c:241)
	==4535==    by 0x4020C6: main (usbutil.c:322)
	==4535==

	usbutil: look up usb.ids under g_get_system_data_dirs() by default
	Simplify a little bit the portability by looking up usb.ids file
	under g_get_system_data_dirs(). This is how most resources are
	found under other OS, looking up files under various places, since
	installation location may vary.

2012-07-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix make distcheck

2012-07-10  Uri Lublin  <uril@redhat.com>

	usb-device-manager: mingw: win driver install callback: add missing ifdef
	This fixes the following compilation error message (without USE_USBREDIR):

	usb-device-manager.c:183:13: error: 'spice_usb_device_manager_drv_install_cb' declared 'static' but never defined [-Werror=unused-function]

	win-usb-driver-install: initialize "req" with memset
	This fixes the following compilation error message:

	../../gtk/win-usb-driver-install.c: In function 'spice_win_usb_driver_send_request':
	../../gtk/win-usb-driver-install.c:187:5: error: missing braces around initializer [-Werror=missing-braces]
	../../gtk/win-usb-driver-install.c:187:5: error: (near initialization for 'req.hdr') [-Werror=missing-braces]

	usb-device-manager: mingw: ignore "remove" udev event when un/installing a driver

	usb-device-manager: mingw: keep driver install/uninstall state of a device
	Currently only driver install/unsinstall is of interest, such that
	extra udev events can be ignored.

	usb-device-manager: add 'state' field to SpiceUsbDeviceInfo
	To be used on Win32 to ignore extra udev events
	received during driver install/uninstall.

	Win32/mingw: win-usb-dev: skip hubs
	also skip devices with bad (0) device-address.

	Win32/mingw: usb-device-manager: uninstall win usb driver upon device disconnect

	win-usb-driver-install: add capability to remove (uninstall) a win usb driver

	Windows mingw: usb: Dynamically install a libusb driver for USB devices
	- Added win-usb-driver-install.[ch]
	- Added win-usb-clerk.h

	Operation (on Windows, spice-gtk point of view):
	- After some sanity checks, just before redir'ing a USB device
	  a libusb driver needs to be installed (before libusb can open the device)
	- A connection (NamedPipe) is established with usb-clerk, a libusb
	  driver installation service, and a request for driver installation
	  is sent.
	- Installation status is asynchronously read from the pipe, and
	  spice_usb_drv_install_finished() is called.
	- Upon a successful intallation, usbredir continues.

	Linux operation is not changed.

2012-07-10  Arnon Gilboa  <agilboa@redhat.com>

	Windows mingw: usb: implement GUdevDevice & GUdevClient for windows
	- Added win-usb-dev.[ch]
	- Added GUdevDevice and GUdevClient like classes
	- Added uevent signal based on WM_DEVICECHANGE

2012-07-10  Uri Lublin  <uril@redhat.com>

	Make SpiceUsbDevice a box for SpiceUsbDeviceInfo, instead of a box for libusb_device
	Note that this change may affect performance a bit, as sometimes there is
	a need to find the libusb_device or the SpiceUsbDevice. Likely it's negligible.

	Introduce SpiceUsbDeviceInfo to be kept instead of a libusb_device
	For Windows, it's better not to keep references for libusb_devices
	that are not used.
	So instead of makeing SpiceUsbDevice a box for a libusb_device
	it is going to be a box for a SpiceUsbDeviceInfo.

	Windows mingw: usb: configure.ac: do not require GUDEV for USBREDIR
	For windows GUDEV is not required
	For Linux GUDEV is checked as a part of USBREDIR block, but
	as a separate check.

	usb-device-manager: mingw: add_dev: ignore already known devices
	Sometimes on a Windows client, udev events are received while
	the driver is being un/installed. so just ignore it

	usb-device-manager: add a helper function to find a usb device <bus, addr>
	And use it in spice_usb_device_manager_remove_dev

	spice_usb_device_get_description: use device-descriptor only to get <vid,pid>
	In preparation for a different SpiceUsbDevice.

	With the new SpiceUsbDeviceInfo, <vid,pid> will be provided by
	SpiceUsbDevice, and not by the device_descriptor (from libusb)

	spice_usb_device_manager_device_error: replace SpiceUsbDevice with libusb_device
	Its only user is channel-usbredir, which needs the libusb_device.

	In preparations for a different SpiceUsbDevice.

	spice_usb_device_manager_auto_connect_cb: use type SpiceUsbDevice for "device"
	Currently SpiceUsbDevice is a BOX for libusb_device.
	In preparation for a different SpiceUsbDevice.

	spice_usb_device_manager_add_dev: use type SpiceUsbDevice for "device"
	Currently SpiceUsbDevice is a BOX for libusb_device.
	In preparation for a different SpiceUsbDevice.

	Renamed the libusb_device variable to libdev. Needed when
	asking usbredir to check the filter.

	spice_usb_device_manager_add_dev: check auto_ok before freeing libusb device list
	In preparation for a different SpiceUsbDevice.

	spice_usb_device_manager_remove_dev: use type SpiceUsbDevice for "device"
	Currently SpiceUsbDevice is a BOX for libusb_device.
	In preparation for a different SpiceUsbDevice.

	controller/test.c: mingw: fix compiler bad param warning for ReadFile
	It seems that ssize_t is int, while DWORD is long

	Compiler warning (some whitespaces where added for readability):
	  ../../../gtk/controller/test.c: In function 'read_from_pipe':
	  ../../../gtk/controller/test.c:108:5: warning: passing argument 4 \
	       of 'ReadFile' from incompatible pointer type [enabled by default]
	  In file included from /usr/i686-w64-mingw32/sys-root/mingw/include/windows.h:70:0,
	                   from ../../../gtk/controller/test.c:27:
	  /usr/i686-w64-mingw32/sys-root/mingw/include/winbase.h:1426:29: note: expected \
	       'LPDWORD' but argument is of type 'ssize_t *'

	usb-device-manager: warn if a device to remove was not found
	Also changed a bit the warning text on device-add to differentiate the two.

	spicy: more informative presentation of usb devices in menu
	Using the default format.

2012-07-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller: async flush read/write
	Windows namedpipes behave a bit differently from Unix socket, and may
	return incomplete read/write. By using 2 read/write() helpers, try to
	complete the operation before returning. Since the IO operation may be
	splitted over several call, we make sure the buffer pointer is on the
	heap. We use exception for EOF or BROKEN_PIPE condition, which also
	simplifies the code.

	To really work with namedpipe, the giowin32streams need to be fixed as
	well to handle concurrent read & write properly, see for details:
	https://bugzilla.gnome.org/show_bug.cgi?id=679288

	Remove mandatory generation of vala debug C
	Use make VALAFLAGS=-g if you need it instead

2012-07-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix mingw build
	printf is redefined by glib/gi18n.h

	In file included from ../spice-common/common/spice_common.h:29:0,
	                 from ../spice-common/common/ring.h:23,
	                 from spice-channel-cache.h:23,
	                 from spice-session-priv.h:26,
	                 from desktop-integration.c:29:
	../spice-common/common/log.h:49:17: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]
	../spice-common/common/log.h:56:16: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]
	In file included from ../spice-common/common/canvas_base.h:25:0,
	                 from decode.h:23,
	                 from spice-session-priv.h:27,
	                 from desktop-integration.c:29:
	../spice-common/common/lz.h:22:5: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]
	../spice-common/common/lz.h:23:5: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]
	../spice-common/common/lz.h:24:5: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]

	unused variable 'self' if !USE_USB
	CC     spice-widget-enums.lo
	desktop-integration.c: In function 'spice_desktop_integration_dispose':
	desktop-integration.c:175:30: error: unused variable 'self'
	[-Werror=unused-variable]

2012-07-06  Hans de Goede  <hdegoede@redhat.com>

	spice-widget: Don't change usbredir/automount settings while redirecting
	The keyboard focus may change while usb-device-manager is in the process of
	redirecting a usb-device (as this may show a policykit dialog). Making
	autoredir/automount setting changes while this is happening is not a good idea!

	Since usb-device-manager already sets keyboard_grab_inhibit when it is
	redirecting to allow the policykit dialog to show, we can use that to
	inhibit usb-autoredir setting changes.

	spice-gtk-session: hookup automount inhibiting
	Inhibit automounting when usb-autoredirection is active.

	Add a desktop-integration helper class
	We need to integrate closely with the desktop environment of the user in
	several cases. Some examples are disabling auto-mounting when auto-usbredir
	is active (rhbz#812972), and disabling the screensaver when fullscreen
	(fdo#34793).

	Unfortuntely these kinds of things require desktop environment specific
	handling. Therefor this patch introduces a desktop-integration helper class,
	which is to server as a container for all sort of desktop environment specific
	functions.

	For now it just supports disabling automounting under Gnome, but this will be
	extended in the future.

2012-06-28  Yonit Halperin  <yhalperi@redhat.com>

	agent: fix mishandling of SPICE_MSG_MAIN_AGENT_TOKEN
	Add the given tokens instead of overriding the existing ones.

2012-06-26  Hans de Goede  <hdegoede@redhat.com>

	spice-gtk-session: rename update_keyboard_focus to request_auto_usbredir
	To better reflect what then function does, also rename the tracking variable
	inside spice-gtk-session to match.

	spice-gtk-session: Fix keyboard focus tracking
	This patch changes the "do we have focus?" tracking, to keeping a counter with
	how many widgets have focus. The reason for this is that sometimes multiple
	spice-widgets can have focus at the same time, yes really! Sometimes (rarely,
	hard to reproduce) the focus in event for one window arrives before the
	focus out of the other window.

	spice-gtk-session: Only update usb "auto-connect" when doing "auto-usb-redir"
	Only update the UsbDeviceManager's "auto-connect" property when
	"auto-usb-redir" is set, otherwise leave it as is. This allows apps to
	control UsbDeviceManager's "auto-connect" directly, without it getting reset
	on every keyboard focus change.

2012-06-24  Uri Lublin  <uril@redhat.com>

	Move "err" variable definition to beginning of the function
	This fixes the following compilation error:
	channel-usbredir.c: In function 'spice_usbredir_channel_connect_device_async':
	channel-usbredir.c:313:9: error: jump skips variable initialization [-Werror=jump-misses-init]

2012-06-13  Christophe Fergeau  <cfergeau@redhat.com>

	Fix build when usbredir is disabled
	I broke it with my leak fixes

	Fix various memory leaks
	==25063== 12,827 (2,032 direct, 10,795 indirect) bytes in 127 blocks are definitely lost in loss record 9,477 of 9,502
	==25063==    at 0x4A0884D: malloc (vg_replace_malloc.c:263)
	==25063==    by 0x3DE384D2BE: g_malloc (gmem.c:159)
	==25063==    by 0x3DE38616B1: g_slice_alloc (gslice.c:1003)
	==25063==    by 0x3DE38346B0: g_error_new_valist (gerror.c:393)
	==25063==    by 0x3DE3834A8C: g_set_error (gerror.c:560)
	==25063==    by 0x3DE4871108: g_socket_receive_with_blocking (gsocket.c:2513)
	==25063==    by 0x5B708E8: bio_gsocket_bread (bio-gsocket.c:56)
	==25063==    by 0x61AEBD8: BIO_read (bio_lib.c:212)
	==25063==    by 0x5ECAC5B: ssl3_read_n (s3_pkt.c:238)
	==25063==    by 0x5ECBD3D: ssl3_read_bytes (s3_pkt.c:318)
	==25063==    by 0x5ECD6CF: ssl3_get_message (s3_both.c:426)
	==25063==    by 0x5EC5AFB: ssl3_get_new_session_ticket (s3_clnt.c:1822)

	==25063== 90 bytes in 3 blocks are definitely lost in loss record 7,354 of 9,502
	==25063==    at 0x4A0884D: malloc (vg_replace_malloc.c:263)
	==25063==    by 0x3DE384D2BE: g_malloc (gmem.c:159)
	==25063==    by 0x3DE3862D0B: g_strdup (gstrfuncs.c:356)
	==25063==    by 0x5B961B5: spice_usb_device_manager_set_property (usb-device-manager.c:306)
	==25063==    by 0x3DE40148FB: g_object_constructor (gobject.c:1352)
	==25063==    by 0x3DE4015D70: g_object_newv (gobject.c:1713)
	==25063==    by 0x3DE401655F: g_object_new_valist (gobject.c:1830)
	==25063==    by 0x3DE485924D: g_initable_new_valist (ginitable.c:224)
	==25063==    by 0x3DE4859348: g_initable_new (ginitable.c:148)
	==25063==    by 0x5B97330: spice_usb_device_manager_get (usb-device-manager.c:770)
	==25063==    by 0x52D8C6B: spice_gtk_session_update_keyboard_focus (spice-gtk-session.c:845)
	==25063==    by 0x52D6DC1: spice_gtk_session_set_property (spice-gtk-session.c:238)

	==25063== 120 bytes in 3 blocks are definitely lost in loss record 8,448 of 9,502
	==25063==    at 0x4A06F18: calloc (vg_replace_malloc.c:566)
	==25063==    by 0x68BB2E5: usbredirfilter_string_to_rules (usbredirfilter.c:54)
	==25063==    by 0x5B96123: spice_usb_device_manager_set_property (usb-device-manager.c:293)
	==25063==    by 0x3DE40148FB: g_object_constructor (gobject.c:1352)
	==25063==    by 0x3DE4015D70: g_object_newv (gobject.c:1713)
	==25063==    by 0x3DE401655F: g_object_new_valist (gobject.c:1830)
	==25063==    by 0x3DE485924D: g_initable_new_valist (ginitable.c:224)
	==25063==    by 0x3DE4859348: g_initable_new (ginitable.c:148)
	==25063==    by 0x5B97330: spice_usb_device_manager_get (usb-device-manager.c:770)
	==25063==    by 0x52D8C6B: spice_gtk_session_update_keyboard_focus (spice-gtk-session.c:845)
	==25063==    by 0x52D6DC1: spice_gtk_session_set_property (spice-gtk-session.c:238)
	==25063==    by 0x3DE40148FB: g_object_constructor (gobject.c:1352)

	==25063== 11,959 (72 direct, 11,887 indirect) bytes in 1 blocks are definitely lost in loss record 9,475 of 9,502
	==25063==    at 0x4A06F18: calloc (vg_replace_malloc.c:566)
	==25063==    by 0x3459C92DDC: XkbGetKeyboardByName (XKBGetByName.c:59)
	==25063==    by 0x52DF000: vnc_display_keymap_gdk2xtkbd_table (vncdisplaykeymap.c:153)
	==25063==    by 0x52D9FA6: spice_display_init (spice-widget.c:389)
	==25063==    by 0x3DE402FA05: g_type_create_instance (gtype.c:1892)
	==25063==    by 0x3DE40147A7: g_object_constructor (gobject.c:1849)
	==25063==    by 0x52DA07B: spice_display_constructor (spice-widget.c:412)
	==25063==    by 0x3DE4015D70: g_object_newv (gobject.c:1713)
	==25063==    by 0x3DE401655F: g_object_new_valist (gobject.c:1830)
	==25063==    by 0x3DE4016893: g_object_new (gobject.c:1545)
	==25063==    by 0x52DE746: spice_display_new (spice-widget.c:1924)
	==25063==    by 0x41D6C3: virt_viewer_display_spice_new (virt-viewer-display-spice.c:219)

2012-06-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	misc: use g_value_dup_object

	Fix incorrect format string

	Fix video playback with GStreamer backend
	The playback audio delay is not correctly adjusted, we should take
	min_latency, set by gst_bin_do_latency_func ().

	Deprecate spice_channel_set_capability()
	This was initially public to eventually let a derived class
	implement more capabilities. Even though it is technically
	doable to derive and tweak exisiting channels, there is a
	lack of support in spice-gtk for doing that.

	Allow to disable specific capabilities at runtime
	Capability BAR for channel FOO can be disabled at runtime by setting
	the SPICE_FOO_CAP_BAR environment variable to '0'
	Disabling capabilities is useful for testing purpose.

2012-06-11  Christophe Fergeau  <cfergeau@redhat.com>

	spice_channel_coroutine: fix function exit in error path
	spice_channel_coroutine returns a void *, but one of its error path
	is doing 'return FALSE'. This commit replaces this return with a
	'goto cleanup' since this is what is done in the other error paths.

	spice_channel_coroutine: emit signals in all error cases
	There are several very unlikely failures where no signal is emitted
	to indicate the failure. Since applications rely on these signals
	to detect spice-gtk connection failures, it's important to emit
	one in all error cases.

2012-06-10  Christophe Fergeau  <cfergeau@redhat.com>

	Emit SPICE_CHANNEL_ERROR_TLS when certificate can't be found
	When trying to start remote-viewer with SPICE over TLS with
	--spice-ca-file with a wrong filename, the connection fails
	but remote-viewer keeps displaying the "Trying to connect"
	message. The only hint that something went wrong is:
	(remote-viewer:12924): GSpice-WARNING **: loading ca certs from a/home/teuf/foo.crt

	This patch makes sure we emit a SPICE_CHANNEL_ERROR_TLS before
	giving up on channel creation to inform the application that
	an error happened.

2012-06-07  Christophe Fergeau  <cfergeau@redhat.com>

	build: allow building with newer glibc-headers and -O0
	Fix copied from libvirt, commit by Eric Blake.

	glibc 2.15 (on Fedora 17) coupled with explicit disabling of
	optimization during development dies a painful death:

	/usr/include/features.h:314:4: error: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Werror=cpp]

	Work around this by only conditionally defining _FORTIFY_SOURCE,
	in the case where glibc can actually use it.  The trick is using
	AH_VERBATIM instead of AC_DEFINE.

2012-06-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Update spice-common

2012-06-04  Hans de Goede  <hdegoede@redhat.com>

	spicy: Change 'OK' button to 'Close' button in USB device selection
	The USB device selection applies immediately, so the dialog should be using
	'Close' instead of 'OK' for its primary button.

	This patch syncs spicy with virt-viewer wrt the USB device selection dialog.

2012-05-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: disconnect session_inhibit_keyboard_grab_changed
	There is one handler we forgot to disconnect on dispose()
	that may cause a crash.

	I am thinking of generalizing usage of
	spice_g_signal_connect_object()..

	Should fix:
	https://bugzilla.redhat.com/show_bug.cgi?id=823570

2012-05-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Clipboard clean-up and fixes for Windows client
	The Windows client was getting in the way of guest copy-paste,
	because when the guest was taking the clipboard grab, the agent
	notifies the client, it takes the grab too, and in return
	receives clipboard notification of new ownership from the client
	clipboard.

	Though we had a hack to check if this new client clipboard event
	is caused by us, the Windows Gtk clipboard is giving 2 notifications
	for some reasons.

	It turned out there is a much better way than the "selfgrab" hack,
	by setting ownership of the clipboard. Problem solved, and cleaner
	code!

	https://bugzilla.redhat.com/show_bug.cgi?id=822688

2012-05-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: correctly track main channel
	The main channel can change when we are reconnecting to the server,
	for example, when querying the password to the user. From there,
	the old main channel is destroyed, but we don't track properly the
	new main channel.

	This fix migration crashing later on, because of missing main channel:
	https://bugzilla.redhat.com/show_bug.cgi?id=823874

2012-05-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Reset grab-sequence on match
	This avoids triggering the grab event on consecutive
	matches, such as ctrl+alt (match) then ctrl+alt+foo
	(match again) that would prevent the longer combination
	from being sent.

	If grab sequence is matched, still send modifier keys
	If the last key pressed from the grab sequence is a modifier
	key, let send it to the guest too.

	This solves the issue of default grab-sequence being ctrl+alt
	and preventing ctrl+alt+del from working.

2012-05-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Running out of reserved space, break ABI
	The change abc56811de978ad336a651924a21b920cfe677f0 actually added
	a field in a public struct while changing overall struct size, the
	fields were also reorder, all of this breaks ABI.

	However, we are running out of free space in SpiceChannelClass
	struct. And since the SPICE_RESERVED_PADDING was 44 bytes, that is
	quite limited on 64bits (only 5 pointers fit).

	I propose we break ABI during this cycle. This means that programs
	using spice-gtk will need to be recompiled to use the new library.
	(the old library should be parallel installable though). This let us:
	- use a better SPICE_RESERVED_PADDING based on pointer size, since
	  it is what is usually added for virtual methods
	- reset the amount taken from the padding in the various struct
	- reorder fields a little
	- add some missing "priv" pointers
	- whatever I am missing that we can still change before next release

	Please comment if I am missing something, or correct me

	session: correctly set and unset ssl-verify flags
	If no cert-subject or pubkey is provided, we should unset the corresponding flags.

2012-05-17  Yonit Halperin  <yhalperi@redhat.com>

	record channel: reseting channel caps

	playback channel: reseting channel caps

	display channel: reseting channel caps

	main channel: reseting channel caps

	Fix not setting channel specific capabilities upon channel reset
	Related: rhbz#821795

	The capabilities have been zeroed after channel reset, which have lead to
	publish the wrong caps when both port and tls-port are given, and the
	channels are secured (first attempt to connect the channel with "port"
	has failed; the channel got reset, and then reconnected with "tls-port"
	and bad caps). Specifically, the bug causes semi-seamless migration not
	to work when part of the channels are secured.

2012-05-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	python: fix Spice.Audio binding
	The spice_audio_new() function is not correctly generated h2def.py
	anymore because of the surrounding #ifdef and macros. Add it in
	the manual.defs instead.

	Avoid API breakage:
	2012-05-10 01:56:48,884 (cli:83): Uncaught exception:
	Traceback (most recent call last):
	  File /usr/share/virt-manager/virtManager/console.py, line 475, in
	_channel_new_cb
	    self.audio = spice.Audio(self.spice_session)
	TypeError: GObject.__init__() takes exactly 0 arguments (1 given)

	https://bugzilla.redhat.com/show_bug.cgi?id=820335

2012-05-03  Yonit Halperin  <yhalperi@redhat.com>

	display: video streaming: add support for frames of different sizes
	rhbz #815426

	When playing a youtube video on Windows guest, the driver sometimes sends
	images which contain a video frame, but also other parts of the
	screen (e.g., the you tube process bar). In order to prevent glitches, we send these
	images as part of the stream, using SPICE_MSG_DISPLAY_STREAM_DATA_SIZED.

2012-05-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix parsing URI query
	Do not depend on uninitialized "len" variable to set the query string.

	https://bugzilla.redhat.com/show_bug.cgi?id=818169

2012-04-27  Christophe Fergeau  <cfergeau@redhat.com>

	g_getenv returns a const string
	When switching from getenv to g_getenv, 'doms' declaration
	wasn't changed from char * to const char *, which causes
	a gcc warning.

2012-04-27  Daniel P. Berrange  <berrange@redhat.com>

	Fix annotations for GrabSequence class
	The default transfer mode is wrong for spice_display_get_grab_keys.
	The array parameter for spice_grab_sequence_new needs explicit
	annotation

2012-04-26  Daniel P. Berrange  <berrange@redhat.com>

	Replace getenv/setenv with g_getenv/g_setenv for Win32 portability

2012-04-25  Daniel P. Berrange  <berrange@redhat.com>

	Fix --spice-debug flag on glib >= 2.31
	With glib >= 2.31 no debug messages are ever printed out by
	default, which makes the --spice-debug flag useless. This
	fix explicitly turns on the appropriate log domain when
	debug is requested. It takes care to preserve the users
	own existing log domain requests

2012-04-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.12

	Lower a few warnings when migration fails

2012-04-24  Daniel P. Berrange  <berrange@redhat.com>

	Fix multiple problems with URI parsing
	The URI parsing was not correctly skipping over the path component
	if a port number was specified using the traditional URI scheme,

	eg

	   spice://somehost:5900/

	would result in failed parse due to the trailing '/'

	The URI parsing was also not considering that the authority
	component is allowed to contain '[' and ']' around the hostname.
	This is used when specifying raw IPv6 addresses to remove the
	parsing ambiguity wrt ':'.

	eg

	   spice://[::1]:5900/

	Various stages of parsing also failed to report errors.

2012-04-23  Uri Lublin  <uril@redhat.com>

	setsockopt: check for ENOTSUP only if defined
	For windows (mingw32) ENOTSUP is not defined.

	Related to 3bfadb8587f59a74d373e26385d348a105c2e425

2012-04-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Allow to disable CELT at runtime
	We might want to make it a property, but having an environemnt variable
	is useful too, to override behaviour.

	build-sys: pyparsing req. moved to spice-common

2012-04-19  Daniel P. Berrange  <berrange@redhat.com>

	Fix callback signature for --spice-debug option handling
	The callback for option handling should return TRUE otherwise the
	option parser will think parsing failed. The current 'void' return
	type meant it was non-deterministic whether --spice-debug actually
	worked or not

2012-04-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Clear cache and glz dictionnary on switch-host
	If we don't clear the glz dictionnary, this might lead to
	corrupted/invalid dictionnary and invalid memory allocation due
	unbounded increase of dictionnary size

	Set new cert-subject when switching host
	https://bugzilla.redhat.com/show_bug.cgi?id=802574

	gtk: scroll event are not received with recent gtk+
	Add explicit scroll event mask to make it work again.

2012-04-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix cursor hide not hiding in some cases
	cursor_set() didn't un-hide correctly by setting "show_cursor" to
	NULL.

	The code is simplified a bit in server mode case, where the new cursor
	will be invalidated and shown during cursor move only, instead of
	twice (checked no regression with dual-head server mode)

2012-04-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix crash when closing while recording
	First notify about disconnection before resetting the channel data.
	An audio recording task might expect the channel to be in a ready
	state otherwise, for example.

	https://bugzilla.redhat.com/show_bug.cgi?id=810247

2012-04-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	agent: avoid use of alloca for sending large msg
	Instead of allocating unbounded memory and doing extra copy on the
	stack, let's just improve our helper function to send messages in
	various pieces.

	See also: https://bugzilla.redhat.com/show_bug.cgi?id=809145

2012-04-04  Christophe Fergeau  <cfergeau@redhat.com>

	autogen.sh: default to --enable-vala when building from git
	People using autogen.sh are likely to be building from git, so may
	get updates to vala files at any time. Checking for the presence of
	controller.vala.stamp to decide whether vala should be enabled or not
	is not very accurate since it doesn't reflect if a .vala file needs
	to be regenerated or not.
	It's better to always pass --enable-vala to configure, it's always
	possible to disable it by using --disable-vala as an autogen.sh argument.

	controller: handle USB redirection messages

	autogen.sh: log configure command line
	Since --enable-vala may or may not be passed to configure, seeing
	the actual command line that was used is helpful.

2012-04-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	fix build with glib < 2.32
	Reported and verified by Nicolas Prochazka

2012-04-03  Hans de Goede  <hdegoede@redhat.com>

	SpiceDisplay: Fix rounding of mouse motion events with GTK-3.0
	Before this patch we were assuming that the GdkEventMotion value we receive
	are always whole (integer) numbers, which is not the case with GTK-3.0.

	SpiceDisplay: Don't try to scale mouse coordinates when we're not scaling
	Often (when not resized by the user) even though scaling is enabled, we are
	not actually scaling. In this case it is not necessary to scale the
	mouse coordinates, and sometimes it is even harmful.

2012-04-03  Yonit Halperin  <yhalperi@redhat.com>

	controller: add support for DISABLE_EFFECTS and COLOR_DEPTH
	rhbz #787449

2012-03-31  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Handle grab-broken event
	This fixes the pointer being "trapped" in the center of the screen in
	server-side mouse mode. It also correctly inform the client that the
	pointer/keyboard is no longer grabbed so it can adjust its UI state
	accordingly (remote the "press ctrl+alt to ungrab" messages etc).

	I can reproduce only with RHEVM22 host, and a RHEL6 guest, when
	switching consoles.

	widget: fix invalid memory ref after channel is distroyed
	When the display channel is destroyed, we disconnect all signals
	handlers, but we don't remove the reference on the primary surface
	data, and that can lead to crashes in a later expose event, reusing
	the canvas surface (ex, if scaling is disabled). Call
	primary_destroy() when disconnecting the channel from the widget.

	We now keep the primary surface during channel reset (right after
	disconnect for example), so the primary surface can be eventually
	recycled, and the widget still holds a valid reference until the
	signal is received. The primary surface is ultimately destroyed during
	finalize, or if the new primary surface size doesn't match.

	Program received signal SIGSEGV, Segmentation fault.
	__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2130
	2130		lddqu	-68(%rsi), %xmm0
	Missing separate debuginfos, use: debuginfo-install gtk2-engines-2.20.2-2.fc15.x86_64 libusb1-1.0.9-0.3.rc1.fc16.x86_64 p11-kit-0.6-1.fc16.x86_64
	(gdb) bt
	    at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2130
	    srclen=<optimized out>, srcinc=4096, destinc=68, height=<optimized out>,
	    half_order=0) at /usr/include/bits/string3.h:52
	    dest_bits_per_pixel=32, req_yoffset=<optimized out>, req_xoffset=0,
	    image=0x7fffffffb9a0, req=<optimized out>, dpy=0x64a630) at PutImage.c:821
	    req_height=<optimized out>, req_width=<optimized out>, y=<optimized out>,
	    x=0, req_yoffset=<optimized out>, req_xoffset=0, image=0x7fffffffb9a0,
	    gc=0xa817e0, d=33554452, dpy=0x64a630) at PutImage.c:870
	    req_xoffset=0, req_yoffset=<optimized out>, x=0, y=26, req_width=17,
	    req_height=20, dest_bits_per_pixel=32, dest_scanline_pad=32)
	    at PutImage.c:908
	    image=0x7fffffffb9a0, req_xoffset=0, req_yoffset=0, x=0, y=26,
	    req_width=17, req_height=20) at PutImage.c:1027
	    image=<optimized out>, src_x=0, src_y=0, width=17, height=20, dst_x=0,
	    dst_y=26) at cairo-xlib-surface.c:1357
	---Type <return> to continue, or q <return> to quit---c
	    height=20, width=17, dst_y=26, dst_x=0, src_y=<optimized out>,
	    src_x=<optimized out>, pattern=0x7fffffffc6b0, op=CAIRO_OPERATOR_OVER,
	    surface=0xb9a650) at cairo-xlib-surface.c:2403
	    dst_y=26, dst_x=0, mask_y=0, mask_x=0, src_y=26, src_x=0,
	    abstract_dst=0xb9a650, mask_pattern=0x0, src_pattern=0x7fffffffc6b0,
	    op=CAIRO_OPERATOR_OVER) at cairo-xlib-surface.c:2452
	    src_pattern=0x7fffffffc6b0, mask_pattern=0x0, abstract_dst=0xb9a650,
	    src_x=0, src_y=26, mask_x=0, mask_y=0, dst_x=0, dst_y=26, width=17,
	    height=20, clip_region=0x0) at cairo-xlib-surface.c:2415
	    src=0x7fffffffc6b0, mask=0x0, dst=0xb9a650, src_x=0, src_y=26, mask_x=0,
	    mask_y=0, dst_x=0, dst_y=26, width=17, height=20, clip_region=0x0)
	    at cairo-surface.c:1802
	    traps=0x7fffffffbee0, src=0x7fffffffc6b0, op=CAIRO_OPERATOR_OVER,
	    dst=0xb9a650) at cairo-surface-fallback.c:762
	    op=CAIRO_OPERATOR_OVER, dst=0xb9a650, traps=0x7fffffffbee0,
	    antialias=CAIRO_ANTIALIAS_DEFAULT, clip=0x0, extents=0x7fffffffc600)
	    at cairo-surface-fallback.c:812
	---Type <return> to continue, or q <return> to quit---bt
	    op=CAIRO_OPERATOR_OVER, source=0x7fffffffc6b0, clip=0x0)
	    at cairo-surface-fallback.c:935
	    source=0x7fffffffc6b0, op=CAIRO_OPERATOR_OVER, surface=0xb9a650)
	    at cairo-surface.c:2027
	    source=0x7fffffffc6b0, clip=0x7fffffffc7b0) at cairo-surface.c:1993
	    at cairo-gstate.c:1049
	    at spice-widget-cairo.c:104
	    expose=0x7fffffffceb0) at spice-widget-cairo.c:133
	    expose=0x7fffffffceb0) at spice-widget.c:885
	    return_value=0x7fffffffca60, n_param_values=<optimized out>,
	    param_values=0x7fffffffcad0, invocation_hint=<optimized out>,
	    marshal_data=<optimized out>) at gtkmarshalers.c:86
	    return_value=0x7fffffffca60, n_param_values=2,
	    param_values=0x7fffffffcad0, invocation_hint=<optimized out>)
	---Type <return> to continue, or q <return> to quit---c
	    at gclosure.c:777
	    detail=0, instance=<optimized out>, emission_return=0x7fffffffccb0,
	    instance_and_params=0x7fffffffcad0) at gsignal.c:3584
	    signal_id=<optimized out>, detail=0, var_args=<optimized out>)
	    at gsignal.c:3305
	    signal_id=<optimized out>, detail=<optimized out>) at gsignal.c:3351
	    event=0x7fffffffceb0) at gtkwidget.c:4999

	mjpeg: fix blue-tinted video stream with old server
	The major == 1 uses RGB colorspace for mjpeg streams.

2012-03-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	session: take pubkey reference in setter
	The session assumed it owned a reference to it.
	But it didn't get it, and that lead to invalid memory access.

	Fixes:  https://bugzilla.redhat.com/show_bug.cgi?id=802574

	Be more tolerant on NULL arrays
	2 places where we should be more carreful with NULL arrays, and we can
	avoid potential crashes.

2012-03-29  Hans de Goede  <hdegoede@redhat.com>

	usb-device-widget: Call set_active on the toggle_button, not the alignment
	Since the gnome HIG-ifying of usb-device-widget.c, the vbox contains
	alignments, which in turn contain a toggle_button, so calling
	gtk_toggle_button_set_active directly on the vbox-containers childdren is
	wrong.

2012-03-29  Uri Lublin  <uril@redhat.com>

	usb-acl-helper: add a missing "break"

2012-03-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: move codegen & proto to spice-common
	With this iteration, all the spice_codegen.py/proto/marshaller
	generation has been moved to spice-common.

	The spice-common directory will ship spice-protocol, since it's needed
	there too to build libspice-common.

	Again, make distcheck passes. Build with mingw & fedora linux.

2012-03-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Always release shm of primary surfaces
	Always remove shared memory segment of primary surfaces when
	destroying its canvas.

2012-03-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controllers: signal when a client is connected

	controller: handle SEND_CAD message as a property

	Fix cursor not being shown in client mode in some cases
	The following seems to happen:
	- cursor-hide (for all cursor/display channels)
	- cursor-set (for all cursor/display channels)

	All cursor/display channels receive cursor-set events when the cursor
	is changed, however, only current display cursor should be drawn in
	server-mode. How to know which display?

	So it will wait until cursor-move to draw it in server-mode on the
	right display.

	In the case of client-mode cursor, it doesn't matter since it will
	depend on which client display the pointer is, so it can be changed
	immediately.

2012-03-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: fix make distclean going twice in vapi dir
	Don't use DIST_SUBDIRS, it's not needed anyway.

	build-sys: fix compilation of bindings
	Hide symbol from API to fix pygobject.

	Also vapigen chokes on "record" typename

	SpiceClientGtk-3.0.gir:32.55-32.55: error: The type name `Gtk.BoxClass' could not be found <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>

	This seems to be a bug in symbol lookup in vapigen. Using a struct
	typedef solves it.

	doc: gtk-doc cleanup
	Fix all the unused symbols and a few warnings (a lot left)

	Add SPICE_DISABLE_DEPRECATED guard

	build-sys: improve maintainer clean

	build-sys: use new git.mk

2012-03-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Hide cursor when it is on a different screen in server mode
	When the cursor shape is changed, all the cursor channels are
	updated. The current code assumed that the "set" of the shape should
	show the cursor, but it should stay hidden instead.

	Also, when the cursor is hidden, we must invalidate its current
	region to redraw display.

	Fix: https://bugzilla.redhat.com/show_bug.cgi?id=804308

2012-03-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Do not grab display widget
	We used to gtk_grab_add() after mouse grab to limit the mouse events
	to the display. But it isn't necessary if the display has its own
	window, since gdk_pointer_grab() will be limited to it.

	Note the widget has the keyboard focus & is focused, so this doesn't
	affect keyboard events.

	However, this allows application to keep global accelerators
	functionning if they want to (like virt-viewer with custom key
	bindings).

	Notify agent-connected property change

	Improve spice_main_set_display_enabled()
	Check given display id is within the range of array.
	Allows to be call with -1 to turn set all displays.

	Fix non-semi-seamless migration in spicy
	The windows are destroyed during non-semi-seamless migrations, but the
	gtk session and connected handlers remains. When a property changes
	again on it, it will signal a destroyed window and lead to a crash.

	The signal handler should be disconnected when the window is
	destroyed. Since we have N numbers of handlers, it's easier to use
	spice_signal_connect_object() helper to handle this for us by turning
	spice_window structure into a basic GObject.

	That GObject code could be improved, but that wasn't the goal of this
	patch.

	Use given color depth in monitor configuration
	The main channel only relied on
	VD_AGENT_DISPLAY_CONFIG_FLAG_SET_COLOR_DEPTH to set color depth when
	connecting to a guest. However, that doesn't seem to be
	enough. Instead send given color depth with monitor configuration.

	Fix --spice-color-depth option not "apparently" working.

2012-03-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build-sys: if stow is installed, default prefix to it
	This is going to make life easier for stow users, including myself.

	build: fix build with glib < 2.32
	Using GMutex as a static mutex is only possible since 2.32.

	Add a G_GNUC_NORETURN to a function that exits

2012-03-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	use common submodule

	Fix incorrect array size check

2012-03-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Move undef FORTIFY below config.h
	It used to be below, then was moved on top of all, but now it's
	defined in config.h. Hopefully below config.h is the right
	place. config.h should never have direct includes anyway.

2012-03-14  Hans de Goede  <hdegoede@redhat.com>

	buildsys: Disable some warnings
	Mostly so that they don't turn into errors when building from source:
	-Wno-missing-field-initializers:
	Because this has to be close to the most stupid warning gcc has ever produced
	-Wno-deprecated-declarations
	Because we use some deprecated functions to avoid #ifdef hell while maintaining
	compat with older gtk / glib versions

	usbredir: Check for existing usb channels after libusb init
	Currently trying to view a usbredir enabled vm from virt-manager causes
	virt-manager to crash. This crash is caused by the following happening:

	-virt-manager sets up the session, including connecting all the channels
	-a spice-gtk internal code path calls spice_usb_device_manager_get()
	-spice_usb_device_manager_get calls channel_new on all already connected
	 usb channels
	-channel_new does:
	 spice_usbredir_channel_set_context(SPICE_USBREDIR_CHANNEL(channel),
	                                    self->priv->context);
	-But self->priv->context has not been set yet (so is NULL) -> segfault!

	This patch fixes this by moving the iterating over already connected
	usb channels to after the setting of self->priv->context. Note this means
	that the channels will no longer get checked when there is no USB_REDIR
	support. That is not a problem since spice_usb_device_manager_initable_init
	will return FALSE in that case anyways.

2012-03-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Use GTK_DISABLE_DEPRECATED to avoid inclusion of problematic headers
	/usr/i686-w64-mingw32/sys-root/mingw/include/gtk-2.0/gtk/gtkitemfactory.h:47:1: error: function declaration isn't a prototype [-Werror=strict-prototypes]

	Fix 'libintl_printf' is an unrecognized format function
	../common/lz.h:18:5: error: 'libintl_printf' is an unrecognized format function type [-Werror=format]

	Remove deprecation warnings

2012-03-14  Daniel P. Berrange  <berrange@redhat.com>

	Disable -Wwrite-strings for Python binding
	The code generator for the python binding generates code which
	throws away const-ness on strings. Disable the -Wwrite-strings
	warning to avoid failing on this auto-generated code.

2012-03-13  Daniel P. Berrange  <berrange@redhat.com>

	Replace %02hhx with %02x in UUID format
	Use of 'hh' in the UUID format string is not required. Furthermore
	it causes errors on Mingw32, where the 'hh' modifier is not supported

	Import GNULIB's GCC warning macros
	GNULIB has a helpful module 'manywarnings' which makes it easy
	to turn on every single GCC warning. The general goal is that
	every possible GCC warning should be enabled, except for certain
	blacklisted warnings.

	This imports the GNULIB m4 macros, and updates configure.ac to
	use this new capability. As & when new GCC warnings are created,
	the 'manywarnings.m4' can be refreshed from upstream GNULIB

	* m4/manywarnings.m4, m4/warnings.m4: GNULIB warning macros
	* configure.ac: Remove custom compiler warning checks
	* m4/spice-compile-warnings.m4: Decide what GCC warnings to enable

	Avoid 'goto' jumping over variable initialization
	When a goto statement jumps over a variable declaration with an
	initializer, the state of that variable is undefined. Move the
	declaration further up, so that the goto doesn't jump over it.
	This lets the compiler then warn, if the goto jump results in
	use of undefined values.

	Fix no-arg functions declared () to use (void)
	* common/quic.h, common/rop3.h, common/sw_canvas.h: s/()/(void)/

	Add missing includes & make some functions static
	A number of functions were used without prior declaration. In
	some cases this was due to missing include files. In other cases
	the functions should have just been static.

	Ideally this would allow -Wmissing-declarations to be enabled, but
	the files generated by spice_codegen.py will still trip up on this.

	Ensure all no-args methods are declared (void) not ()
	* common/quic.c, common/rop3.c, common/sw_canvas.c,
	  gtk/spice-client-glib-usb-acl-helper.c: s/()/(void)/

	Add printf format annotations to all '...' functions
	To allow the compile to detect incorrect printf formats, any
	var-args function should have a format annotation

	* common/macros.h: Helper to define ATTR_PRINTF for code
	  which can't depend on glib
	* common/canvas_base.c, common/lz.h, common/macros.h: Annotate
	  some var-args methods

	Replace duplicated header declarations
	The usb-helper-acl.h header file duplicated some declarations
	already present in usb-device-manager.h

	The channel-display.c file declared the object init function
	which is already done by the GObject helper macros

	* gtk/channel-display.c: Remove duplicate decl of init function
	* gtk/usb-acl-helper.h: Remove duplicate decls

	Remove arithmetic on void* pointers
	Arithmetic on void * pointers is undefined by the C standard.
	Convert the one case of this to use guint8 instead.

	* gtk/channel-main.c: s/void */guint8 */

	Fix some integer range checks which always evaluate false
	There are some integer range checks which always evaluate false
	due to use of unsigned integer types. One of these would prevent
	detection of encoding errors from celt. The others are simply
	no-ops.

	* gtk/channel-record.c: Make 'frame_size' signed to allow detection
	  of celt encoding errors
	* gtk/spicy.c: nkeys is an unsigned type, so checks for nkeys < 0 are bogus
	* common/pixman_utils.c: SpiceROP is an enum & thus unsigned

	Avoid warnings about empty conditional statement bodies
	Add extra {} braces around if/else statements which only
	call SPICE_DEBUG to avoid:

	../common/ssl_verify.c: In function 'verify_pubkey':
	../common/ssl_verify.c:87:50: warning: suggest braces around empty body in an 'else' statement [-Wempty-body]
	../common/ssl_verify.c: In function 'verify_hostname':
	../common/ssl_verify.c:254:53: warning: suggest braces around empty body in an 'if' statement [-Wempty-body]
	../common/ssl_verify.c: In function 'verify_subject':
	../common/ssl_verify.c:381:41: warning: suggest braces around empty body in an 'else' statement [-Wempty-body]

	Fix deprecation warning handling
	Various methods are deprecated by using the G_GNUC_DEPRECATED_FOR
	macro. Unfortunately this macro was placed in the .c file impl,
	instead of the .h file decl. Thus applications building against
	SPICE-GTK would never see the deprecation warnings. At the same
	time, building SPICE-GTK itself would trigger some of the warnings
	preventing use of -Wdeprecated-declarations to detect use of
	deprecated GTK functions.

	The fix is in multiple parts

	 * Replace calls to G_GNUC_DEPRECATED_FOR with SPICE_DEPRECATED_FOR
	 * Move macros from .c to .h files
	 * Turn SPICE_DEPRECATED_FOR into a no-op if SPICE_NO_DEPRECATED
	   is defined
	 * Define SPICE_NO_DEPRECATED when building

	Fix old style declaration where 'inline' came after return type
	Fix a case of 'static int inline' to be 'static inline int'

	Fix const-correctness of functions & add explicit casts
	Some functions should be declared to take const char * instead
	of plain char *. In other places we intentionally cast away
	const-ness, so we should add explicit casts to stop compiler
	warnings

	Remove non-existant include directories from CFLAGS

	Don't delete gtk-doc.make in distclean
	gtk-doc.make is created by autogen.sh, therefore it should
	not be deleted in distclean, only maintainerclean

2012-03-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.11

	Update since annotation for some session properties

2012-03-08  Hans de Goede  <hdegoede@redhat.com>

	channel-usbredir: Handle some more usbredirhost_read_guest_data errors

2012-03-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Do not warn when starting spicy if usbredir is disabled

	sasl: sasl authentication failure results in disconnection
	When SASL auth failure happen, the Spice server disconnects the
	client. Sadly, this is not easily distinguishable from an IO error.
	However, since it happens during authentication phase it is better to
	error out an authentication error.

	sasl: lower visibility of normal debug message
	Those two g_critical() can happen when collecting credentials for the
	first time. It is not something to be warned about, but merely useful
	for debugging

	build: move @SPICE_GLIB_REQUIRES@ to Requires.private
	The libraries listed in Requires aren't needed during build time, they
	are library depedencies. And since this is only needed if linking
	statically, we can safely move them to Requires.private.

	Succesfully tested change with compilation against virt-viewer.

	Later, this will also help fixing bug rhbz #799112.

2012-03-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix semi-seamless migration handling
	SPICE_MSGC_MAIN_MIGRATE_END was dropped because the main channel was
	xmit_queue_blocked. When we swap the channels, we should also swap
	xmit_queue.

2012-03-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Warn if a message is dropped (before connection or after reset)
	Since c2ba62666beaee526e1b4288f9bd66976ce780ef messages can be ignored
	when a channel is reset. A warning can help explain why some messages
	are dropped.

	Support name & uuid
	Allows a client to identify the server it is connected to.

2012-02-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add a spice-controller-dump testing tool
	By default, start a controller listener.
	If ran with --menu, start a foreign-menu listener.

	Add controller foreign menu support

	Fix a few warnings on windows build

	Allow open_fd() to be called with -1
	In this case, a valid fd will be requested via the
	SpiceChannel::open-fd signal.

2012-02-24  Hans de Goede  <hdegoede@redhat.com>

	buildsys: Don't link glib-compat.o into libspice-client-gtk.so
	glib-compat.c was added to SPICE_GTK_SOURCES_COMMON since with the
	new SpiceUsbDeviceWidget libspice-client-gtk now also uses G_TYPE_ERROR
	and when compiling with an older glib this gets defined in glib-compat.o

	However doing this turns out to be a very BAD idea, since having
	glib-compat.o linked into 2 different libraries, each defining there
	own private spice_error_get_type, leads to the "GError" type getting
	registered twice with glib, which it does not like.

	So instead of linking glib-compat into 2 different libraries, put it only
	in libspice-client-glib and export spice_error_get_type from
	libspice-client-glib (this is ofcourse intended for libspice-client-gtk
	private use only).

	Fix building with policykit < 0.101

2012-02-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.10

	use :glz-window-size not :glz_window_size

	build: fix build with recent mingw64
	Christophe did similar patches for common/ directory in spice.  Some
	day, we should try to sync and move common/ to a spice-common
	project...

2012-02-22  Hans de Goede  <hdegoede@redhat.com>

	usbredir: Add awareness of host/guest side filtering

	usbredir: Add a spice_usb_device_manager_can_redirect_device function
	Add a spice_usb_device_manager_can_redirect_device function and use this
	in SpiceUsbDeviceWidget to check if redirection is available.

	usb-device-widget: Use an info_bar for error messages
	And in general gnome-hig-ify usb-device-widget:
	* Use spacing instead of padding so that there is no padding at the
	  outside/border of the widget, allowing the user to control the border size.
	* Use multiple of 6 as spacing / indentation values
	* Show the label left justified and bold, show the checkboxes (and the info
	  bar) 12 pixels indented from the label

	configure: Fix "USB redirection support" summary on --disable-usbredir
	When running "./configure --disable-usbredir" the
	"USB redirection support" line in the summary at the end of ./configure
	would be empty after "support" instead of ending with yes or no.

	usbredir: Treat the user cancelling the policykit dialog as a cancel
	Rather then treating it as any other error. This avoids showing an error
	dialog after the user pressed cancel in the policykit dialog.

	usbredir: Add device rejected errors

2012-02-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	RFC: Use spice protocol as a submodule
	Spice protocol contains only headers. We would like to be able to use
	a protocol update without having to wait for the release, a git
	submodule works well for this purpose.

2012-02-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix make distcheck

2012-02-20  Hans de Goede  <hdegoede@redhat.com>

	usbredir: Shrink the usb device selection dialog when devices are unplugged

	usbredir: make channel lifetime equal to session lifetime

	usbutil: Add support for getting strings from usb.ids
	Unfortunately not all device makers go to the "trouble" of adding device
	identification strings to a device's descriptors. This patch makes spice-gtk
	translate vid/pid into strings if the device lacks the strings.

	usbutil: Add a spice_usb_util_get_device_strings helper function

	usb: Move various helper functions into usbutil.[c,h]

2012-02-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add controller ENABLE_SMARTCARD message

2012-02-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: fix mouse wrapping failing when the window is outside
	Use a anchor mouse position after every move, similar to spicec to
	avoid reaching transparent border on the screen.

	We try to move to the center of the screen, but
	gdk_display_warp_pointer () will move the cursor within the grabbed
	window (so it still receives mouse events even on Windows)

	Tested with Linux and Windows clients.

	Fixes bug: https://bugs.freedesktop.org/show_bug.cgi?id=45595

2012-02-13  Nicolas Prochazka  <prochazka.nicolas@gmail.com>

	Set keepalive on channel socket
	Without keepalive on each connection(channel), channel is destroyed
	after ip_conntrack_tcp_timeout_established timeout.

	https://bugs.freedesktop.org/show_bug.cgi?id=45899

2012-02-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Use an openssl BIO stream using GSocket
	Until now, the BIO object used by openssl to read & write was using
	the socket fd directly. But the mainloop integration is done with
	GSocket.

	On Windows, the read/write events are cleared after
	g_socket_send()/receive() with private function
	_win32_unset_event_mask. If the glib functions aren't cleared, glib
	source will keep notifying of data available in or out. On Windows,
	this causes a busy loop when doing SSL_read() for example (glib
	POLL_IN data condition is reached and SSL_read() return needs data).

	Instead, openssl should read/write using GSocket methods.

2012-02-09  Daniel P. Berrange  <berrange@redhat.com>

	Don't warn if setsockopt(TCP_NDELAY) fails with errno==ENOTSUP
	If connecting to a UNIX domain socket, it is expected that the
	setsockopt(TCP_NDELAY) call will fail with errno=ENOTSUP, so don't
	issue a warning in that case

2012-02-08  Christophe Fergeau  <cfergeau@redhat.com>

	Link with usbredirparser
	spice-gtk uses usbredirfilter_string_to_rules which is defined
	in usbredirparser but does not link with it. This causes link errors
	on some distributions. Fixes fdo bug #45761.

2012-02-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Lower or silence some harmless debug messages

2012-02-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	widget: allow defining a zoom-level
	Add a "zoom-level" property. Maintain the given scaling ratio when
	scaling is enabled.

	If scaling is disabled, this property is ignored.

	For example at 50%, this allows to fit a 640x480 desktop in a 320x240
	widget and when resizing it to 640x512 to have a 1280x1024 desktop.

	(this feature is required by virt-viewer)

	widget: factor out update_size_request() and scaling_updated()
	Factor out and simplify a little the code to allow easier addition of
	zoom-level property.

	The "set_display" parameter for recalc_geometry() seems to be useless,
	since the code was apparently trying to set the guest to the given
	d->width and d->height, but reseting it to the current value, which
	cancel the effect.

	We should fix the problem of setting the guest resolution at
	display-init time in a follow-up patch since it probably never worked
	with spice-gtk.

2012-01-31  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Report the scaling is 1.0 if the widget isn't realized yet
	To avoid a few warnings in some corner cases.

	Do not grab/release the clipboard on guest without clipboard support
	Add an agent capability check before calling those functions from
	gtk-session. Avoid extra warnings.

2012-01-31  Hans de Goede  <hdegoede@redhat.com>

	Release 0.9

	Add a USB device selection widget
	This patch adds a SpiceUsbDeviceWidget which apps can use to easily
	add an UI to select USB devices to redirect (or unredirect).

	See spicy for an example usage.

2012-01-30  Hans de Goede  <hdegoede@redhat.com>

	usb-device-manager: Cleanup USB manufacturer and product strings
	The strings returned by devices sometimes can benefit from some clean-up.

2012-01-28  Hans de Goede  <hdegoede@redhat.com>

	spice-client-glib-usb-acl-helper: Fix mention of Lesser in license header

	spice-client-glib-usb-acl-helper: ensure we set the acl on a chardev
	Josh Bressers has been so kind to review the usb-acl-helper for possible
	security issues. One of his recomendations was to ensure that the file
	we're setting the acl on is a chardev.

	spice-client-glib-usb-acl-helper: Fix memleak
	Not really important given the short livedness of the process, but
	still should be fixed.

	configure: Add an option for building the acl helper as PIE
	Josh Bressers has been so kind to review the usb-acl-helper for possible
	security issues. One of his recomendations was to harden the usb-acl-helper
	by building it as a Position Independent Executable.

	configure.ac: s/x"$have_foo"/"x$have_foo"/
	configure.ac was using 2 slightly different styles for have_foo tests:
	if test x"$have_foo" = "xyes"; then
	and:
	if test "x$have_foo" = "xyes"; then

	Switch to the latter style everywhere for consistency.

	configure.ac: Cleanup policykit checks
	* No need to set AM_CONDITIONAL WITH_POLKIT from the enable_usbredir tests, it
	  get sets from the enable_polkit tests in all paths
	* Improve the help text: mention auto as option, policykit -> PolicyKit,
	  not yes but auto is the default
	* Warn when building with usbredir support but not building the acl helper

2012-01-24  Christophe Fergeau  <cfergeau@redhat.com>

	Add check for Perl::Text::CSV
	This check is only added to configure.ac contrary to the pyparsing
	patch.

	Add check for pyparsing
	Check both in configure.ac (after checking if we need to rebuild
	the marshalling files) and in the python script using pyparsing
	(for people modifying .proto files in tarballs)

	Use PKG_CHECK_EXISTS for g-i has_symbol_prefix check
	GOBJECT_INTROSPECTION_CHECK will alread test for the presence of
	gobject-introspection. The PKG_CHECK_MODULES(GOBJECT_INTROSPECTION)
	call only needs to set the has_symbol_prefix variable, so we can
	use PKG_CHECK_EXISTS here, and let GOBJECT_INTROSPECTION_CHECK do
	the rest of the work.

	Autodetect usbredir and PolicyKit by default
	Currently, usb redirection and policykit are enabled by default,
	and configure will error out if the required dependencies cannot
	be found. This commit changes the default behaviour, by default
	usb redirection/policykit support is automatically enabled/disabled
	depending on the availability of the needed dependencies. Passing
	--enable-usbredir will error out if the dependencies for usb
	redirection cannot be found, ditto for policykit. This should make
	things nicer for people running configure or autogen.sh with no
	argument.

2012-01-24  Yonit Halperin  <yhalperi@redhat.com>

	Add command line options for setting the cache size and the glz window size
	This options will help us tune and find the optimal values.

	Change the setting of the images cache size and the glz window size
	Set the default sizes to be the same as in the old linux spice client.
	cache_size=20M pixels (instead of 32M), window_size=8M pixels for a 64MB
	dev ram (instead of 16M pixels).

2012-01-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix vapigen error and warnings
	Thanks to Jeremy Bicha for the bug report and testing solution.

	https://bugs.freedesktop.org/show_bug.cgi?id=45154

2012-01-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	controller: use a controller listener abstraction
	Add a wrapper file for named pipe and socket listener, so we can release
	tarball with code compatible with windows and unix.

	build: use AM_GLIB_GNU_GETTEXT
	For some unknown reason, this set DATADIRNAME='share' on Windows,
	which is what is expected.

	Although some people say only IT_PROG_INTLTOOL is necessary, it gets
	the path wrong in this case too.

2012-01-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk-session: weak reference the session for clipboard cb
	It seems Gtk is lacking a way to cancel a gtk_clipboard_request_*().

	Although it seems like gtk_selection_remove_all() would solve that
	problem, it will have nasty effect of destroying other pending
	requests from others..

	Let's make use of an extra weak reference object that will be nulled
	when the session is destroyed.

	This should help solving the follwing bug:
	https://bugzilla.redhat.com/show_bug.cgi?id=743773

	gtk-session: ignore destroy of outdated main channel
	This solves clipboard sharing not working with a password protected
	server, since new main channel are created for each connection
	attempt.

2012-01-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: allow out-of-tree building of python bindings

2012-01-17  Hans de Goede  <hdegoede@redhat.com>

	spice-channel: Allow calling spice_msg_out_send from any context
	spice_msg_out can be not only called from system context and usb event
	handling thread context, but also from co-routine context. Calling from
	co-routine context happens when a response gets send synchronously from
	the handle_msg handler for a certain received packet. This happens with
	certain usbredir commands.

	This triggers the following assert in the coroutine code:
	"GSpice-CRITICAL **: g_coroutine_wakeup: assertion `coroutine !=
	 g_coroutine_self()' failed"

	This patch fixes this by making spice_msg_out_send callable from any
	context and at the same time changing the code to not do unnecessary
	wakeups.

2012-01-16  Hans de Goede  <hdegoede@redhat.com>

	gtk/display: Get rid of old FSF address in copyright headers
	rpmlint pointed this out while I was checking the new spice-gtk-0.8 package
	for Fedora.

2012-01-16  Christophe Fergeau  <cfergeau@redhat.com>

	Handle spice_audio_new failures
	spice_audio_new can return a NULL pointer when there's a failure
	during the initialization of the audio system. When this happens,
	we shouldn't keep initializing the spice audio channel as if nothing
	happened, but just stop the connection.
	This can be tested by forcing the "self" variable to NULL in
	spice_audio_new
	This should fix https://bugzilla.redhat.com/show_bug.cgi?id=772118

2012-01-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release 0.8

	Generate ChangeLog and ship it in the tarball

	Send grab-key signal even in mouse client mode

2012-01-15  Hans de Goede  <hdegoede@redhat.com>

	usbredir: Add support for filtering out devices from auto-redirection
	Note this patch adds a default filter filtering out HID devices, since
	redirecting ie a mouse plugged into a laptop is usually not what the user
	wants. Also sometimes usb keyboards/mice may experience a glitch causing
	them to temporarily drop of the bus. If this happens when the spice-client
	has focussed it used to redirect them to the vm when they re-appeared,
	not good!

2012-01-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix compilation on mingw/windows

	Warn if windows keyboard hook failed

	Don't release images after the tail gap
	This fix a hang on an image lookup that has already been remved.  It
	only happens in multihead, when stressing a bit the displays.

	The decoder assumed that the last added images is the tail of the
	window. However, there are "gaps" in the window that will be filled by
	other channels. Instead of taking the last added image as the current
	up to date tail, let's take the reference to the last image before the
	first gap as the up to date tail, and release from there.

	The spicec code does things differently, perhaps it needs slightly
	less memory at the cost of added complexity by maintaining list of
	missing images and much more conditions/synchronization.

	Grab focus before grabing keyboard
	Make sure the display has the focus before grabing the keyboard for
	the application.

2012-01-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	wait for cached images that haven't been added to the cache yet
	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Log if condition wait got cancelled
	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Make g_coroutine_condition_wait() cancellable
	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Remove the non-interruptible version g_io_wait()
	Use the common g_coroutine_socket_wait()

	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Create a GCoroutine, get rid of wait_queue
	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Hide g_condition_wait_source, use GLib style convention
	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Lower connection error from warning to debug, it's normal to fail
	We try several connections, so it's normal to fail for some.
	No need to warn.

	https://bugs.freedesktop.org/show_bug.cgi?id=44570

	Lower our gtk+ requirement to 2.18, as we claim
	Needed to build on RHEL6

	Lower polkit requirement to 0.96

	Lower our glib requirement to 2.22, as we claim
	Required to build on RHEL, even upcoming 6.3

2012-01-11  Yonit Halperin  <yhalperi@redhat.com>

	migration: swap serials and mini header support when swapping peers.

	Add support for SPICE_COMMON_CAP_MINI_HEADER
	Don't send/receive serial and sub_list when the server supports the
	above cap.

2012-01-10  Yonit Halperin  <yhalperi@redhat.com>

	spice-channel:  support SPICE_MSG_LIST

	configure: spice-protocol >= 0.10.1 (support mini header)

2012-01-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Wait for channels before invalidating images
	https://bugs.freedesktop.org/show_bug.cgi?id=44179

	Implement SPICE_MSG_WAIT_FOR_CHANNELS
	https://bugs.freedesktop.org/show_bug.cgi?id=44179

2012-01-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	add optional format string to spice_usb_device_get_description()

2012-01-07  Marc-André Lureau  <marcandre.lureau@gmail.com>

	build: oops, fix previous commit

2012-01-06  Marc-André Lureau  <marcandre.lureau@gmail.com>

	build: fix compilation with --disable-usbredir

2012-01-05  Alon Levy  <alevy@redhat.com>

	spice-session: support uri with colon
	With this patch if you use:
	 spice://<host>:<port>

	it will be treated the same as:
	 spice://<host>?port=<port>

	You will also get a warning for the following double port definitions:
	 spice://<host>:<port1>?port=<port2>
	 spice://<host>:<port1>:<port2>

	(similar to the double key warnings introduced in the previous commits)

	spice-session/spice_uri_parse: fail if a key is seen twice

2012-01-04  Hans de Goede  <hdegoede@redhat.com>

	Makefile: Ensure the acl helper is installed before making it suid root
	On my system when running make install, after installing the libraries it
	first executes install-binPROGRAMS:

	  /bin/sh ../libtool   --mode=install /usr/bin/install -c spicy snappy spicy-st
	libtool: install: /usr/bin/install -c .libs/spicy /usr/bin/spicy
	libtool: install: /usr/bin/install -c .libs/snappy /usr/bin/snappy
	libtool: install: /usr/bin/install -c .libs/spicy-stats /usr/bin/spicy-stats

	Then the install-exec-hook:

	make  install-exec-hook
	make[6]: Entering directory `/home/hans/projects/spice/spice-gtk/gtk'
	chown root /usr/bin//spice-client-glib-usb-acl-helper
	chmod u+s  /usr/bin//spice-client-glib-usb-acl-helper

	And only then does it install the actual helper by executing
	install-aclPROGRAMS:

	  /bin/sh ../libtool   --mode=install /usr/bin/install -c spice-client-glib-usb
	libtool: install: /usr/bin/install -c spice-client-glib-usb-acl-helper /usr/bin

	Which means that the install-exec-hook runs too early, either there is no
	spice-client-glib-usb-acl-helper for it to make suid root, or if there is it
	will later get overwritten and its rights will get reset.

	The problem is that install-fooPROGRAMS gets run as part of install-data,
	not install-exec. So we can fix this by changing the code to make the helper
	suid root run from install-data-hook.

	usbredir: Don't directly use g_mutex_foo()
	In glib <= 2.30 g_mutex_foo() are macro's so dereferencing them directly
	does not work.

2012-01-03  Hans de Goede  <hdegoede@redhat.com>

	usbredir: Don't call spice_usbredir_channel_disconnect on channel reset
	channel_reset gets called from spice_channel_disconnect, and
	spice_usbredir_channel_disconnect calls spice_channel_disconnect
	(so as to disconnect the channel when a usb device gets disconnected).

	So calling spice_usbredir_channel_disconnect from channel_reset leads to
	undesirable recursion. More over calling spice_usbredir_channel_disconnect
	disconnects / closes both the channel and *the usb device* and closing the
	usb device on migration is not what we want.

	Note that currently migration of usbredir channels does not work, and this
	patch does not fix this, but it does fix a regression when disconnecting
	usb devices normally (by unplugging them for example).

	usbredir: Give devices a user friendly description
	Before this patch devices were described like this to the user:
	USB device at 2-14
	After this patch the description is:
	SanDisk Cruzer Blade [0781:5567] at 2-14

	usbredir: Drop our embeddied GUsb copy
	No that we no longer use GUsbSource we're hardly using any code from GUsb,
	so drop our embeddied GUsb copy and do the last few things (device
	enumeration through gudev) ourselves.

	usbredir: Remove spice_usb_device_manager_get main_context argument
	Now that we no longer use a GUsbSource this is no longer needed.

	Note this is a change to our public API, but that is ok since we have not
	yet done an official release with usbredir support.

	usbredir: Handle usb events from a thread
	This solves various latency issues with USB handling.

	usbredir: Add locking callbacks for libusbredirhost
	This is a preparation patch for handling usb packet completion in a
	separate thread.

2011-12-22  Hans de Goede  <hdegoede@redhat.com>

	usbredir: Create USB event source on demand
	This is a preparation patch for handling usb packet completion in a
	separate thread.

	usbredir: Use new libusbredirhost write flush callback
	The new (in usbredir-0.3.2) usbredirhost_open_full()
	function allows us to be notified whenever usb packets completing
	result in data to be send to the host. This removes the need for using
	g_usb_source_set_callback and seeing if there is data to write on
	any of the usb channels each time some usb event happens.

	This also bumps the minimum needed libusbredirhost version to 0.3.2

	usbredir: USB channels can not be read only
	A usbredir channel must always be bi-directional. spice-server
	allows only one client to connect even when in multi-client mode. Since
	usually there are multiple usb channels available, it is allowed for one client
	to use one channel, while another client uses another usb channel.

	usbredir: Stop setting private data explictly to NULL on init
	This is not necessary and as we get more private data it becomes
	unyieldly.

	spice-channel: Allow spice_msg_out_send to be called from multiple threads
	This is a preparation patch for handling usb packet completion in a
	separate thread.

	spice-channel: setsockopt TCP_NODELAY
	spicec does this for all channels, and it seems like a good idea to do the
	same in spice-gtk.

2011-12-22  Christophe Fergeau  <cfergeau@redhat.com>

	Disable vala bindings unless --enable-vala is used
	Currently, building vala bindings from a tarball is broken because
	spice-client-glib-2.0.deps is missing from the tarball. This commit
	adds it to EXTRA_DIST and also makes sure the vala bindings don't
	get built/installed unless --enable-vala has been passed to configure.
	This means vala must be installed to build the vala bindings from a
	tarball. Fixes fdo bug #44000.

	Revert previous vala-related commits
	They were work in progress and not meant to be committed, apologies
	for the noise :-/

	Only install vala bindings when using --enable-vala

	More distcheck fixes

2011-12-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: ship vala files & fix make distcheck
	Disable usbredir, since it wants to install file in /.

	Disable vala for distcheck for 2 reasons: not needed after dist and
	binding build issue.

	Ship with spice-gtk-3.0 vala bindings

	https://bugs.freedesktop.org/show_bug.cgi?id=44000

2011-12-22  Christophe Fergeau  <cfergeau@redhat.com>

	Make path to the USB ACL helper configurable
	It's currently installed in $bindir, but this patch makes it possible
	for distros like fedora to install it in $libexecdir/spice/

2011-12-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: remove unused common/win/my_getopt

2011-12-22  Jani Välimaa  <wally@mageia.org>

	build: string format fix
	https://bugs.freedesktop.org/show_bug.cgi?id=44019

2011-12-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: depends on spice-protocol 0.9.1

	Support semi-seamless migration
	Yonit Halperin described the flow, that I followed:

	(1) when client_migrate_info is called SPICE_MSG_MAIN_MIGRATE_BEGIN is
	sent to the client.

	Then, the client should link to the target server (SpiceLinkMess),
	i.e., connect all the channels, but it shouldn't poll from the target,
	only from the source. You can refer to RedClient::Migrate class.  The
	connection id in the link message should be the id of the connection
	to the source server.

	(2) The client sends to the source server
	SPICE_MSGC_MAIN_MIGRATE_(CONNECTED|CONNECT_ERROR)

	(3) When migration completes  SPICE_MSG_MAIN_MIGRATE_(END|CANCEL) is
	sent to the client.

	(3.1) In case of SPICE_MSG_MAIN_MIGRATE_CANCEL, the client closes the
	connections to the target.

	(3.2) In case of SPICE_MSG_MAIN_MIGRATE_END, the client should reset
	all the data that is related to the connection to the source and
	complete the transition to the target server (without sending
	ATTACH_CHANNELS, and without guest display initialization via agent).

	Then, the client sends SPICE_MSG_MAIN_MIGRATE_END to the target.

	main: Handle semi-seamless MIGRATION_BEGIN

	display: try to reuse exisiting primary surface

	Add channel_reset method
	This new private method is to reset the channel to its initial state,
	used by semi-seamless migration

	gio-coroutine: add a few more run-time checks

	Update protocol and messages for semi-seamless migration

2011-12-19  Marc-André Lureau  <marcandre.lureau@gmail.com>

	windows: initialize co->ret to not randomly release fiber

2011-12-18  Frédéric Péters  <fpeters@0d.be>

	add explicit links against libraries that are directly used

2011-12-16  Hans de Goede  <hdegoede@redhat.com>

	spice-channel: cleanup, remove spice_channel_send_msg()
	There are only 2 callers, both of which want it to do a different thing,
	making the callers do this directly allows us to remove
	spice_channel_send_msg(); and gets rid of the weirdness where we've a
	function which can be called in both co-routine and system context.

	spice-channel: Move read only check to spice_channel_write_msg()
	This is a preparation patch for removing spice_channel_send_msg().

	Note that this means that buffered writes won't get checked until they are
	actually send by the co-routine.

	spice-channel: Move setting of header->size to spice_channel_write_msg()
	Just a small cleanup patch.

	spice-channel: replace the xmit buf by a queue of SpiceOutMsg-s
	This has a number of advantages:
	-It significantly simplifies the code
	-It avoids memcpy-ing all the write data one more time
	-It avoids malloc / realloc / free of the xmit buffer
	 (this gets replaced by gslice alloc / free for the queue elements)

	Make sure spice_channel_iterate_write() always flushes *all* pending writes
	This patch changes 1 line, and fixes 2 bugs in this one line:
	1) We keep the xmit_buffer around for reuse (re-filling) later, so checking
	   if we've a xmit_buffer to determine wether we should do a write is wrong,
	   instead we should check if the xmit_buffer has data in it.
	2) If the write blocks, and we switch to another co-routine context, this
	   context may queue more writes, we check for this and throw away the
	   buffer we've been consuming when this happens, since the other context
	   will then have allocated a new buffer. But when this happens, we do *not*
	   consume the new buffer. So the queued data will not get transmitted
	   until the co-routine gets woken up by either another write, or by
	   receiving data to read.
	   This patch fixes this by changing the if to a while.

	Note that the code in question gets completely removed by the next patch in
	this series. As I noticed this while rewriting the code in question, still
	I decided to do a separate patch to fix this to:
	1) Document this issue in the old code
	2) Otherwise the move from the if to the while will happen in the new code
	   which may confuse readers of that patch.

	spice_msg_out[_send_internal]: Take ownership of the passed SpiceMsgOut
	All callers of spice_msg_out[_send_internal] unref the message immediately
	after calling spice_msg_out[_send_internal]. This patch changes the
	semantics so that spice_msg_out[_send_internal] takes ownership and it
	is responsible for unref-ing the passed in SpiceMsgOut.

	This is a preparation patch for changing the buffered write code
	to use a queue of SpiceMsgOut-s, rather then memcpy the message contents
	into an intermediate buffer.

	channel-smartcard: unref in flight messages as soon as they are sent
	This is a preparation patch for making spice_msg_out_send() take ownership
	of the passed in msg.

2011-12-15  Hans de Goede  <hdegoede@redhat.com>

	smartcard_message_complete_in_flight cleanup error checking
	smartcard_message_complete_in_flight should never get called if there
	is no message in flight (priv->in_flight_message != NULL).

2011-12-14  Hans de Goede  <hdegoede@redhat.com>

	spice-channel: cleanup, get rid of wait_interruptible variable
	The private wait_interruptible channel variable is not used anywhere,
	except in one test, which is useless since it never gets set.

	Disable mouse accelleration when grabbing the mouse (in server mode)
	Otherwise accel will be applied twice, once by the client and then once
	more by the guest. Unfortunately there seems to be no gdk / gtk API for this
	so this patch uses direct libX11 calls.

2011-12-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	windows: fix broken left shift
	On Windows, the received key when pressing left shift is VK_SHIFT 0x10

	Wrap in window, because windows doens't receive mouse events outside it

	windows: clip pointer when grabbed, so it stays inside widget

2011-12-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix crash on mouse server mode grab with gtk2
	With gtk3 gdk_cursor_unref = g_object_unref. But not with older
	version. Let's be consitent with the rest of the code and use
	cursor_unref().

	build: add missing smartcard manager in python binding
	Probably broken since the manually edited defs files have been removed

2011-12-10  Hans de Goede  <hdegoede@redhat.com>

	spice-widget: rename mouse_update to update_mouse_mode.
	We already have update_mouse_pointer and update_mouse_grab, so having
	a mouse_update function without specifying what "part" of the mouse handling
	it exactly updates is confusing, rename it to update_mouse_mode to reflect
	what it does and to match the other names.

	spice-widget: cleanup mouse handling.
	Some background on this patch, we currently behave
	as follows in server mouse mode:

	1) When spicy first connects, a frozen guest cursor is shown
	 (no mouse events are send to the guest) and the client cursor
	 is set to the standard right pointer,

	2) When one clicks on / inside the spice-widget, the mouse is
	 grabbed, the client cursor is hidden and the guest pointer
	 becomes alive (gets events).

	3) On ungrab we move back to state 1)

	Which is fine, but the code implementing it is somewhat convoluted.
	We have update_mouse_pointer(), which does more then just update the mouse
	pointer, it also calls try_mouse_grab(), and we've update_mouse_grab(),
	which calls update_mouse_pointer() rather then try_mouse_grab().

	* I. lets look at what we currently have in update_mouse_pointer(): *

	    case SPICE_MOUSE_MODE_SERVER:
	        if (!d->mouse_grab_active) {
	            if (gdk_window_get_cursor(window) != NULL)
	                gdk_window_set_cursor(window, NULL);
	        } else {
	            try_mouse_grab(display);
	        }
	        break;

	Now lets invert the test to make it more readable:

	    case SPICE_MOUSE_MODE_SERVER:
	        if (d->mouse_grab_active) {
	            try_mouse_grab(display);
	        } else {
	            if (gdk_window_get_cursor(window) != NULL)
	                gdk_window_set_cursor(window, NULL);
	        }
	        break;

	Hmm, so if we're grabbing the mouse, we try to grab the mouse
	-> does not make sense, esp not since try_mouse_grab() has:

	    if (d->mouse_grab_active)
	        return;

	So we can drop the else block.

	But why the if? Well that would be because when we're grabbing
	the windows should have a blank cursor. But where does that get set?

	The blank cursor gets set in do_pointer_grab(), by specifying a blank
	cursor as the cursor to show as long as the grab is active.

	Since that cursor will be active as long as we're grabbing, so we can
	drop the if (!d->mouse_grab_active) check as well.

	And with the mouse_grab_active check gone, we no longer need to call
	update_mouse_pointer() from try_mouse_ungrab().

	* II. lets look at update_mouse_grab() *

	So currently when the mouse should be grabbed according to the
	mouse-grab and disable-inputs properties, update_mouse_grab() calls
	update_mouse_pointer(), which as discussed above does nothing with the grab,
	as the code path calling try_mouse_grab() is dead code. The right thing to do
	would of course be to have update_mouse_grab() call try_mouse_grab() in this
	case.

	But, that would mean that as soon as the property is changed the cursor will
	get torn away from whereever it is and get grabbed, which may not always
	be desirable. To fix this this patch also moves the mouse_have_pointer
	and keyboard_have_focus checks from mouse_update() to try_mouse_grab()


	foo

2011-12-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix build issue because of double declaration
	Patch based on Mageia, provided by Olav Vitters.

	https://bugzilla.freedesktop.org/show_bug.cgi?id=43457

2011-12-09  Michael Chudobiak  <mjc@avtechpulse.com>

	use "connection" instead of "connexion"

2011-12-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Take the grab when mouse switching to client mode
	Only when the widget has the focus and the pointer is over the widget

	Do not send ungrab key sequence to the server

	Don't leak cursor shape objects

	Refresh mouse shape/visibility when changing mouse mode
	This fixes the dynamic mode changing when running/quitting the agent.

	Correctly hide client pointer (in server mode)
	The hide cursor event happen when the widget is not yet
	realized. Forcing realize may fail if the widget is not yet embedded
	for example. Instead, let's update the cursor whenever there is a
	draw().

	v2: do not call gdk_window_set_cursor() with the same cursor

	Document the pointer ungrab for drag-n-drop in multihead

	Draw mouse with cairo in server mode

	Ignore the first mouse click when taking the grab

	Grab on the display too
	Without this additional grab, the pointer grab was effective for the
	whole application

	Add a get_blank_cursor() helper

	Use the border margin from recalc_geometry()

	Do not send pointer motion of 0x0

	Warn with the connect connect socket error

	Fix controller with newer vala

2011-12-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: vapi bindings only available if HAVE_INTROSPECTION

	controller: use SPICE_XPI_NAMEDPIPE first

2011-12-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: do not clean spice-client-glib-2.0.deps

	build: fix linking with -Wl,--as-needed -Wl,--no-undefined etc..
	Mageia is using linker flags and miss symbols when linking.
	The error can be reproduced with:

	make LDFLAGS="-Wl,--as-needed -Wl,--no-undefined -Wl,-z,relro -Wl,-O1 -Wl,--build-id -Wl,--enable-new-dtags"

	Based on patch by Christophe Fergeau.

	https://bugs.freedesktop.org/show_bug.cgi?id=43416

2011-12-02  Hans de Goede  <hdegoede@redhat.com>

	usb-device-manager: Don't g_warning on autoconnect failure
	We already emit a signal for this, either the app using spice-client-glib
	listens to this signals and does something with it, or it is not interested
	in this happening, at which point logging a g_warning for it is not really
	useful.

	spicy: Don't show an error dialog on a cancelled device open
	If for example the user plugs in a new device, then gets the policykit agent
	authentication dialog and then unplugs the device, spice-gtk will cancel
	the acl-helper request, which in turn will dismiss the policykit agent
	authentication dialog. Which is all a nice and smooth user experience,
	except that when this happens spicy throws a dialog with an error
	that the open was cancelled. Since a cancel usually is done deliberately
	(such as on the user unpluging the device) no error dialog should be thrown
	for it.

	channel-usbredir: Call the acl helper without first trying to open the device
	Normally opening the USB device without first calling the helper will fail,
	except when the process using spice-gtk is running as root.

	So the current code which first tries to open the USB device before calling
	the helper is optimizing for an exception rather then for the default code
	path. More over it also causes libusb to print the following errors to stderr:
	libusb:error [op_open] libusb couldn't open USB device /dev/bus/usb/002/017: Permission denied.
	libusb:error [op_open] libusb requires write access to USB device nodes.

	So this patch changes things to first call the helper and only then try
	to open the device node.

	This patch also modifies the helper to not call policykit when called by
	a root process, since the set_facl which it will do, if policykit says it
	is ok, is a no-op for root anyways. Instead it directly returns a success
	status without doing anything when called by a root process.

2011-12-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	string formatting fixes
	Patch based on Mageia, provided by Olav Vitters.

	https://bugs.freedesktop.org/show_bug.cgi?id=43456

2011-12-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Move auto-connect logic in Audio base class

	Make UsbDeviceManager main-context a boxed property

2011-11-26  Marc-André Lureau  <marcandre.lureau@gmail.com>

	Fix get_type() with --disable-smartcard
	It's quite a bad hack, but I can't think of anything really better

	Without this patch, g-ir-scanner introspection hangs with:
	GLib-GObject-CRITICAL **: g_boxed_type_register_static: assertion `boxed_copy != NULL' failed

	GLib-CRITICAL **: g_once_init_leave: assertion `result != 0' failed

	GLib-GObject-WARNING **: gsignal.c:1585: parameter 1 of type `<invalid>' for sig
	nal "SpiceSmartcardManager::reader_added" is not a value type

2011-11-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Do not send specific messages in read-only

	Check if msg are permitted to be sent in read-only

	Add read-only property on sessions
	It is useful to have a way to prevent sending commands in read-only
	sessions (think of multi-client)

	No clipboard sharing allowed in this case in gtk-session.

	Add disable-inputs on Spice widget

	cleanup: the try_grab() functions should take a SpiceDisplay

	Fix a few g-ir-scanner warnings

	Export spice_g_signal_connect_object
	The helper needs to be accessible from spice-client-gtk too.

	Regenerate map-file correctly
	We should use update-map-file instead of modifying it manually

2011-11-21  Hans de Goede  <hdegoede@redhat.com>

	Release our keyboard grab when we're going to invoke the usb acl helper
	The usb acl helper asks policykit, which may want to interact with the
	user through the policykit agent, which wants to grab the keyboard, if
	we then have the keyboard grabbed, the agent says authentication has failed,
	policykit rejects the helper opening up the acl and usbredir won't work.

	Unfortunately the only way to work around this is to temporarily release our
	own keyboard grab, not pretty but as discussed on irc, this is the "best"
	solution.

2011-11-16  Hans de Goede  <hdegoede@redhat.com>

	Add a suid root helper to open usb device nodes
	spice-client needs to be able to open the device nodes under /dev/bus/usb
	to be able to redirect a usb device to the guest. Normally opening these
	nodes is only allowed by root. This patch adds a suid root helper which
	asks policykit if it is ok to grant raw usb device access, and if policykit
	says it is ok, opens up the acl so that the spice-client can open the device
	node.

	As soon as spice-client closes the stdin of the helper, the helper removes
	the extra rights. This ensures that the acl gets put back to normal even if
	the spice client crashes. Normally the spice-client closes stdin directly
	after opening the device node.

	channel-usbredir: Make spice_usbredir_channel_connect async
	With the (upcoming) introduction of the usb device node acl helper, which
	uses policykit, spice_usbredir_channel_connect() may take a long time as
	it will be waiting for the helper, which will be waiting for policykit which
	may be interacting with the user -> Make spice_usbredir_channel_connect() async

	Note that this patch only changes spice_usbredir_channel_connect's
	API to use the standard GIO async API, it is not actually async after this
	patch since it does not yet call the acl helper.

	usb-device-manager: Make spice_usb_device_manager_connect_device async
	With the (upcoming) introduction of the usb device node acl helper, which
	uses policykit, spice_usbredir_channel_connect() may take a long time as
	it will be waiting for the helper, which will be waiting for policykit which
	may be interacting with the user. So spice_usbredir_channel_connect() will
	need to become async, and since spice_usb_device_manager_connect_device
	calls spice_usbredir_channel_connect it thus also needs to become async.

	Note that this patch only changes spice_usb_device_manager_connect_device's
	API to use the standard GIO async API, it is not actually async after this
	patch since spice_usbredir_channel_connect is not yet async.

	channel-usbredir: Move usb device opening into a helper function
	This is a preparation patch for adding the usb device node acl helper

	channel-usbredir: Do disconnect from dispose instead of from finalize

	channel-usbredir: Fixup and simplify #ifdef USE_USBREDIR handling
	glib does not like it when objects have a private data size of 0, so don't
	declare any private data when compiling without USE_USBREDIR set.

	Correct Since tag for SpiceSession:enable-usbredir:
	This was introduced post 0.7, and given the major changes done in git
	sofar the next release will be 0.8 rather then 0.7.1

2011-11-09  Christophe Fergeau  <cfergeau@redhat.com>

	Use correct GLib macros

2011-11-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Mark deprecated props/signals/functions

	Remove g_object_{set,get}_data() usage
	This is not really clean, as it may conflict with client usage

	Drop useless memset
	Private data in GObject's is initialized to 0's upon constuction

	Use G_PARAM_CONSTRUCT for property initial value

2011-11-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add missing include of spice-audio

	Add session enable-audio property
	Create audio channels only if enable-audio is TRUE

	SpiceAudio stream name default to get_application_name()

	Add spice_audio_get()
	We are going to deprecate spice_audio_new()
	some day. There are a few know problems:
	- SpiceAudio is an abstract class,
	  so it can't have a ctor
	- SpiceAudio should be a singleton,
	  associated with the session lifetime
	- SpiceSession should have a enable-audio property,
	  internal code should be able to access the audio object

	That way of getting the audio object is similar to the smartcard manager and usb manager.

2011-11-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Return NULL if taking screenshot fails
	It can happen if the display is not yet ready.
	This change just removes a couple of warnings.

	Fix package `SpiceClientGLib-2.0' not found

2011-11-02  Tiziano Müller  <tiziano.mueller@stepping-stone.ch>

	Correctly parse RFC-conform URIs separating the host and the arguments by a '/'
	Little patch to make spice-gtk accept RFC-conform URLs of the form
	"spice://host/?port=5901".

	I didn't add '/' to the list of the other characters to ignore (?;&)
	by intention since an URL like spice://host/?port=5901/somotherstuff
	should not be valid, resp. the password may contain '/' because the
	string is already unescaped at that point.

	Unfortunately glib does not seem to have functions to 'explode' an URI
	which would be really helpful.

	Cheers,
	Tiziano

2011-11-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk-session: add more checks

2011-10-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add missing spice-gtk-session.h in spice-widget.h

2011-10-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add vapi bindings generation

2011-10-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Fix missing dispose() chain-up

2011-10-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	do not segfault if link message header size is set to 0
	https://bugs.freedesktop.org/show_bug.cgi?id=41988

2011-10-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Add SPICE_NOGRAB environment variable for debugging

	gtk: channel-event emit an enum
	This doesn't break ABI, as int and enum are compatible at glib level.

	gtk: warn if argument is invalid instead of crash

2011-10-10  Hans de Goede  <hdegoede@redhat.com>

	Add spice-gtk-session-priv.h to make dist output
	Brown paper bag bug number 2 wrt spice-gtk-session-priv.h, sorry about this.

	Add missing spice-gtk-session-priv.h file
	This file was missing from the previous commit, my bad.

	Make auto-usbredir a session setting rather then a per display setting

	spicy: Stop using SpiceDisplay's deprecated clipboard methods

	SpiceDisplay: mark clipboard properties and functions as deprecated
	The SpiceGtkSession ones should be used instead.

	SpiceDisplay: Don't set auto-clipboard on construction
	The auto-clipboard setting now lives in the SpiceGtkSession, if that
	was changed to FALSE (from the default of TRUE) and later a SpiceDisplay
	was created for this session that would change it back to TRUE again because
	it would set it to its default from its constructor. This patch fixes this.

	Remove auto-generated .gitignore files from git
	Auto-generated files do not belong in git. Having these in git causes
	changes to them accidentally ending up in other commits.

	Fix compilation of python bindings
	This was broken by the addition of SpiceGtkSession.

2011-10-07  Hans de Goede  <hdegoede@redhat.com>

	decode-glz: Handle needing glz images before they have arrived
	With multi monitor guests, it is possible for a glz-image to refer to
	bits from another glz-image which has not arrived yet! This can happen
	because each monitor has its own display channel, and thus its own socket,
	but they share the glz dict. Thus things can arrive out of order, with a
	glz-image on display 1 arriving before the glz-image on display 2 which it
	refers too.

	This triggers the:
	g_return_val_if_fail(w->images[slot]->hdr.id == id - dist, NULL);

	In glz_decoder_window_bits(), which is what caused me to debug this, once
	the out order thing was clear, so was the fix.
	If w->images[slot]->hdr.id == id - dist is not true, we need to wait for the
	correct image to arrive.

	The out of order issue with multiple monitors can also trigger the
	g_warn_if_reached() in glz_decoder_window_resize(), so remove that.

	SpiceDisplay: Pass on notify signal from GtkSession for GtkSession properties
	Since some SpiceDisplay properties are now just a pass through to the
	equivalent SpiceGtkSession property, we also need to pass on the notify
	signal for these, so interested users can get notified of them changing.

	Use this in spicy to ensure that changes to SpiceGtkSession (and thus per
	session rather then per window) properties get reflected in all windows for
	a multimonitor guest.

	usb-device-manager: One instance per session instead of a singleton
	Since usb device manager keeps track of which usb channels there are and
	if they have usb devices attached there should be one usb-device-manager
	instance per session, rather then one global singleton.

	Tying the usb-device-manager to the session also allows us to get rid of
	spice_usb_device_manager_[un]register_channel and the need for SpiceDisplay
	to call these.

2011-10-06  Hans de Goede  <hdegoede@redhat.com>

	SpiceDisplay: Add a constructor and construction properties
	With SpiceDisplay now passing through auto-clipboard settings to
	SpiceGtkSession, it needs to have its SpiceSession and SpiceGtkSession
	private members initalized at construction time, as
	spice_display_set_property() gets called at construction time.

	Currently its SpiceSession and SpiceGtkSession are NULL when that
	happens leading to the g_object_set() calls in spice_display_set_property()
	triggering g_return_if_fail statements inside glib and rightly complaining
	loudly.

	This patch fixes this by making the SpiceSession and channel ID construction
	properties and passing them to the g_object_new call in spice_display_new.

	Move clipboard handling to SpiceGtkSession
	This fixes copy and paste with multi-monitor guests. There still is
	one small issue left with this patch, changing the setting for auto-clipboard
	in one spicy window, does not get reflected in the Options menu of the
	other spicy windows.

	This can be fixed by listening to the notify signal, this also requires
	SpiceDisplay to listen to property changes on its SpiceGtkSession and
	then do a g_object_set on itself to update its own property (and also
	emit its own notify signal.

	I'll write a separate patch for this.

	Add a SpiceGtkSession Class
	This initial commit of the SpiceGtkSession Class only adds the empty
	class and the 1:1 linkage to SpiceSession through 2 new private methods
	added to SpiceSession: spice_session_{get|set}_gtk_session.

	The following commits will move things which are currently per SpiceDisplay,
	but which really should be global, such as the clipboard, over to
	SpiceGtkSession.

2011-10-04  Hans de Goede  <hdegoede@redhat.com>

	Fixup some headers so that they include headers the depend up on.
	Otherwise they cannot be included unless other headers are included
	first (and in the right order).

2011-09-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: Add missing <package> and <c:include> in gir
	This is required for source-level binding, such as Vala.

2011-09-30  Hans de Goede  <hdegoede@redhat.com>

	spice_codegen: Always write a channels entry for an ifdef-ed channel
	Before this patch, if a channel is defined conditionally in spice.proto
	(because it depends on external headers like the smartcard channel),
	spice_codegen would write an entry to the channels array in
	spice_get_*_channel_parser which would only take up a place in the array
	if the ifdef condition is true, thus moving up all other intializers
	one place when it is not true. This was causing issues (crashes) when building
	spice-gtk with the combination of usbredir support enabled and smartcard
	support disabled.

	This patch fixes this by adding #else { NULL, 0 }, to the generated code.

	Thanks to coolper chen <lixin.chen@saicocch.com> for reporting this!

2011-09-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: move G_DEFINE_BOXED in glib-compat.h and fix build with old glib

	pulse: use spice_g_signal_connect_object
	Disconnect all handlers when either emitter or observer is gone.
	That should help https://bugzilla.redhat.com/show_bug.cgi?id=737202

	util: add spice_g_signal_connect_object
	This is a copy of telepathy-glib tp_g_signal_connect_object.

	That function allows to connect object's signals without
	having to worry much about emitter/observer lifetime.

	It handles automatic disconnection for us, no need to track
	all the handlers id. Nice!

2011-09-02  Hans de Goede  <hdegoede@redhat.com>

	gtk/Makefile.am: Better explicit deps fro autogenerated files
	Auto-generated files need explicit deps on them to ensure things
	are build in the right order when doing things like make -j200:
	1) We had an explicit deps on spice-marshal.h, but only for spice-channel.c,
	   but others need it to
	2) autogen.c files need autogen.h, note this is done in a separate make
	   statement, since the deps of the actual build rule are used during the
	   generation!
	3) Group all the autogen explicit deps together

	configure.ac: Update minimum required spice-protocol to 0.9.0
	This is needed for usbredir support.

	gtk/continuation.c: undef _FORTIFY_SOURCE earlier
	We need to undef _FORTIFY_SOURCE before our first include, so as to
	avoid the extra checks it does on longjmp which don't play well with
	our coroutine stuff.

	gtk/controller/Makefile.am: Add explicit rules for autogenerated files
	The autogenerated files are part of make dist, without these explicit
	rules doing "./autogen.sh && make dist" on a clean git checkout
	will fail because it wants them but does not know how to build them.

	gtk/Makefile.am: Remove a bunch of .c files from EXTRA_DIST
	automake is smart enough to add _SOURCES files to make dist's result even
	if there compilation is depending on an AM conditional, and we are already
	depending on this for the smartcard / usb files, so lets depend on it for
	the other ones too.

	gtk/Makefile.am: Don't include auto-generated files into make dist tarbal
	We have various files which are auto-generated which currently get included
	into the tarbal, yet they are part of CLEANFILES, so the first make clean
	removes them, which is rather weird. Use nodist_foo_SOURCES to make them
	not end up in the tarbal.

	generated_[de]marshallers[1].c, are special as autogenerating those on
	end user builds would mean requiring the end user to have pyparser installed,
	so we add them to EXTRA_DIST and remove them from CLEANFILES. It may seem
	weird to have them in nodist_... and then add them to EXTRA_DIST,
	but this patch also adds an explict depenency on the autogenerated files
	to the non autogerated ones:
	$(libspice_client_glib_2_0_la_SOURCES): spice-glib-enums.h

	Leaving generated_[de]marshallers[1].c in libspice_client_glib_2_0_la_SOURCES,
	would cause it to get a dep on autogenerated files, and thus get regenerated
	itself no matter what, defeating the purpose of having them in dist in the
	first place.

2011-09-01  Hans de Goede  <hdegoede@redhat.com>

	spice_usb_device_get_description fixups
	1) Fix spice_usb_device_get_description compilation when building without
	   usb support
	2) Don't return "Unknown" when the device param is NULL, the caller should
	   g_free the returned string, so we cannot return a const string
	3) Fix the existing callers to actually g_free the result of
	   spice_usb_device_get_description. To avoid code duplication this patch
	   makes usb-device-manager prefix the error it gets from the usbredir-channel,
	   so that users of the auto-connect-failed signal can use the error as is.

	usbredir: provide out own libusb_strerror for now
	libusb_strerror is not going upstream because of i18n worries, provide
	our own for now.

	usb-device-manager: Add a auto-connect-failed signal
	And use it in spicy to inform users of auto redirect failures (usually due
	to insufficient rights on the /dev/bus/usb device nodes).

	usb-device-manager: Add a spice_usb_device_get_description() method
	This is just a place holder for now. A better implementation requires
	gusb changes, and I hope there will be an official gusb release by the
	time I get around to fixing this up.

	Drop VOID:BOXED user marshaller
	We were generating a user marshaller for VOID:BOXED, but there is a standard
	marshaller for that, use that instead.

2011-08-31  Marc-André Lureau  <marcandre.lureau@redhat.com>

	doc: various improvements

	doc: update to include USB redirection

2011-08-30  Hans de Goede  <hdegoede@redhat.com>

	Remove spice-client-gtk.defs from git (as it is auto-generated)
	spice-client-gtk.defs gets autogenerated (but only when building for
	gtk2). Having it in git means having to keep it in sync with the public
	API manually, which requires doing a gtk2 build before committing each
	time one makes changes to the public API.

	As with any autogenerated files, this really does not belong in git,
	removing it from git removes the need for the manual syncing.

	Also add it to make clean, and change gtk/Makefile.am so that
	the contents on EXTRA_DIST don't depend on how ./configure was run
	making "make dist"-s result depend on ./configure flags is not a good idea.

	Remove gtk/.gitignore
	gtk/.gitignore gets autogenerated and thus should not be part of git.

	It currently being part of git is esp. annoying since depending on
	wether you're building for gtk2 or gtk3, lines like:
	/SpiceClientGtk-2.0.gir
	/SpiceClientGtk-2.0.typelib
	/libspice-client-gtk-2.0.la

	Keep disappearing from it, leading to these changes accidentally
	getting included into whatever commit your working on.

	spice_gstaudio: s/SpiceGstAudio/SpiceGstaudio
	We should either have SpiceGstAudio && spice_gst_audio or
	SpiceGstaudio && spice_gstaudio, not SpiceGstAudio && spice_gstaudio
	like we have today. This patch fixes this by replacing SpiceGstAudio
	with SpiceGstaudio. We can do this since this is only used internally.

	Rename my_foo private datatypes to MyFooPrivate
	We were using the gobject standard notation of MyFooPrivate everywhere
	except for 3 places, this brings these 3 into sync, with what we do elsewhere.

	Add auto_usbredir property to spice-widget

	spice-session: at a spice_session_has_channel_type method

	Add an USB device manager

	Add an usbredir channel

	Add a private copy of gusb
	While working on usb redirection support for spice-gtk I needed some
	code to integrate libusb into glib's mainloop amongst other things. I ended
	up borrowing code from colord for this. Richard (the colord author) and I
	quickly agreed that doing generic glib bindings for libusb is a good idea,
	akin to the gudev bindings for libudev we've called our WIP on this gusb:
	https://gitorious.org/gusb

	Since this very much is a WIP, the API is nowere near stable, so for now
	we bundle a copy of this code with spice-gtk. When gusb has an official
	release out the door with a stable API we should switch to that.

	spice.proto: Add usbredir channel

	spice-channel: Reset SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION on disconnect
	Our disconnect handler clears the common_caps array so that a new
	connection starts with a clean slate. But in our constructor we set
	the SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION in common_caps as starting
	cap. Do the same on disconnect, so the behavior of a re-using a channel
	after disconnect is the same as using a fresh channel.

2011-08-17  Hans de Goede  <hdegoede@redhat.com>

	spice-channel: fix writing a byte twice when a write blocks
	When a write blocks, and thus ret == -1 (and the gerror matches EAGAIN) we
	still do offset += ret, causing the last written byte to be send twice.
	Lets not do that :)

	spice-widget: release_keys on focus out
	This fixes alt getting stuck in the guest when the user alt-tabs away from the
	spice-widget (thus making it see the alt press but not the release) and then
	closing it without giving it the focus back (by using the windows close button
	for example).

	Note that doing this on focus out (when we know we may be missing key releases
	afterwards) makes a lot more sense then doing this on focus in, and with
	the release_keys on focus out I don't really see a reason any more to do it
	on focus in. But I'm leaving it in on focus in just in case, it certainly
	cannot hurt there.

	spice-widget: remove keyboard_grab_count / keyboard_grab_time hack
	With the filtering of focus in / out events caused by grabs we should no
	longer need this.

	spice-widget: ignore focus in / out events caused by keyb ungrab/grab
	As documented in XGrabKeyboard(3): "The XGrabKeyboard function actively grabs
	control of the keyboard and generates FocusIn and FocusOut events."

	Note that for some reason this only happens when we call XGrabKeyboard
	from our enter_event / leave_event callbacks and not from our focus_in /
	focus_out callbacks? Either way we still need to filter these out.

	Filtering these out fixes 4 issues:
	1) keyboard_have_focus now no longer gets unset when the keyboard is grabbed,
	   making USB auto redirection when focussed actually work
	2) Before this patch, if you pressed alt and then (accidentally) moved the
	   cursor out of the spice-widget window before pressing a second key,
	   the focus in event would clear the keyboard status causing the guest to no
	   longer see alt as pressed and register the second key press as a regular
	   keypress rather then as alt-foo.
	3) It allows us to remove the keyboard_grab_count / keyboard_grab_time hack
	   from try_keyboard_grab, although since we are no longer doing an
	   ungrab on focus out, this likely could have been removed before.
	   I will do this in a separate patch for easier reverting if necessary.

	spice-channel: Fix a possible race triggered by spice_channel_iterate_write
	Fix a race between spice_channel_buffered_write and
	spice_channel_iterate_write.

2011-08-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	data: fix spicy.nsis.in to include right libraries

	build: fixes build with gtk3 on win32

	build: warn and instruct if valac is missing

	gtk: implement coroutines using Windows fibers

2011-08-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	use _setjmp/_longjmp to speed up coroutine switching
	As described in http://www.1024cores.net/home/lock-free-algorithms/tricks/fibers

2011-07-29  Christophe Fergeau  <cfergeau@redhat.com>

	mjpeg: don't leak last stream image
	When a stream is destroy, the memory allocated to handle the mjpeg
	decoding is freed by calling stream_mjpeg_cleanup. However, the
	memory allocated to contain the last uncompressed stream image
	wasn't freed.

	mjpeg: remove wrong g_return_if_fail
	After calling jpeg_read_scanlines, spice-gtk checks that we read
	the amount of lines we expected, and if not, it returns early.
	This is doubly wrong:

	* jpeg_read_scanlines is documented as returning at most the number
	of lines requested, but it also warns that an application shouldn't
	rely on getting exactly the number of scanlines requested. In this
	case, if rec_outbuf_height is bigger than 1, we'll get a short read
	on the last line of odd-sized images, thus triggering the
	g_return_if_fail

	* returning from this function without calling jpeg_abort will cause
	libjpeg to abort next time we use it because jpeg_start_decompress
	was called before

	This commit removes this check and early return.

	mjpeg: restrict use of i and j
	Using i and j as variable names that are used from one loop to the
	other isn't really readable, and makes the code more fragile than
	it could be. This commits adds a "lines_read" variable which is more
	expressive than "j", restricts "j" lifetime to the loop where it's
	used, and it removes the "i" variable and uses counters provided
	by libjpeg to iterate all the image lines.
	It also has the side-effect that if jpeg_read_scanlines returns a short
	read (less lines than expected are read), "dest" won't go out of sync but
	will be set to the right place at the end of the loop.

	mjpeg: properly abort decompression in error path
	spice-gtk jpeg decompression code honors libjpeg's recommended size
	for its output buffer to improve performance. However, when this
	recommended size is too big, it just gives up on the decompression
	process by returning early from the function. But since
	jpeg_start_decompress has been called to compute this recommended
	size, the decompression must be aborted before returning, otherwise
	libjpeg will get in an inconsistent state and will abort next time
	we try to use it.
	This commit also moves the check that the recommended size isn't
	too big out of the decompression loop because it shouldn't changed
	during decompression.

2011-07-28  Christophe Fergeau  <cfergeau@redhat.com>

	fix integer marshalling helpers on big endian
	They were trying to convert the destination pointer to an integer before
	trying to dereference it. The initial conversion was meant to be a cast
	to a pointer of the right size, not to an integer.

	fix typo in big endian code path
	uint63_t should be uint64_t

2011-07-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix libtool versionning
	As pointed out by Daniel P. Berrange:
	"Arrggh !  There's a typo there. You want '-version-info' not
	'-version-number'.   The latter directly sets the major/minor
	soname values hence why you keeping seeing incompatible versions :-("

2011-07-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Release v0.7

	build: update library version
	client-glib interfaces have been changed or added, but binary compatibility has been preserved, change to current+1:0:age+1

	client-gtk updated code, same API: increment revision.

	build: fix make distcheck

	build: fix introspection warnings
	The only one left is related to GOptionGroup, which is not boxed.

	gtk/controller: fail if SPICE_XPI_SOCKET is not provided
	Instead of trying to connect to a '(null)' socket.

2011-07-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: snappy/spicy-stats move connection option to main group

	gtk: update spicy to use new option API

	gtk: add spice_get_option_group()

	gtk: add color-depth and disable-effects options

2011-07-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add spice_strv_contains in util-priv.h

	build: fix .pc Requires

2011-07-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: avoid doing GdkWindow operations if widget is not realized

	gtk: honour CURSOR_FLAGS_NONE by hiding cursor

	gtk: comment channel_new() returns a weak reference
	And add a few sanity checks.

	gtk: add glz_decoder_window_clear, to recycle decoder

2011-07-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: rework widget destroy/dispose()
	Make sure to remove handlers during dispose.
	Destroy is purely a gtk+ thing, so let the widget do the job.

	This solves a refcount/crash issue found with virt-manager.

2011-07-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/doc: improve the generated gtk-doc a bit

	Merge remote-tracking branch 'teuf/master'

2011-07-13  Christophe Fergeau  <cfergeau@redhat.com>

	document SpiceSession properties

	smartcard: add smartcard API doc

2011-07-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: remove false warning

2011-07-12  Daniel P. Berrange  <berrange@redhat.com>

	gtk: remove double symbol definition

	gtk/pulse: fix memory leak

2011-07-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: allow setting color depth

	gtk/spicy: add disable-effects option

2011-07-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/smartcard: make smartcard init async

	gtk: add SPICE_CLIENT_ERROR

	gtk/debug: put package version in session_init

2011-07-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: remove surface cache, why do we need it?

2011-07-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/channel-cursor: refcount display_cursor, make explicit the life of rgba

	gtk/smartcard-manager: remove useless trailing ;

2011-07-05  Christophe Fergeau  <cfergeau@redhat.com>

	cursor: don't leak uncached cursors
	When the cursor channel creates a new cursor, if the message
	indicates not to cache it, the cursor is leaked after being used.
	This commit fixes that, though I'm not really satisfied with it.

	==22568== 378,432 bytes in 162 blocks are definitely lost in loss record 7,699 of 7,699
	==22568==    at 0x4A0649D: malloc (vg_replace_malloc.c:236)
	==22568==    by 0x4E624CF: spice_malloc (mem.c:88)
	==22568==    by 0x4E4F1C4: set_cursor (channel-cursor.c:323)
	==22568==    by 0x4E4FA29: cursor_handle_set (channel-cursor.c:469)
	==22568==    by 0x4E4FD19: spice_cursor_handle_msg (channel-cursor.c:548)
	==22568==    by 0x4E30292: spice_channel_recv_msg (spice-channel.c:1641)
	==22568==    by 0x4E3062A: spice_channel_iterate_read (spice-channel.c:1776)
	==22568==    by 0x4E307F9: spice_channel_iterate (spice-channel.c:1820)
	==22568==    by 0x4E30EE4: spice_channel_coroutine (spice-channel.c:1968)
	==22568==    by 0x4EE48A2: coroutine_thread (coroutine_gthread.c:77)
	==22568==    by 0x302E4683A5: g_thread_create_proxy (gthread.c:1955)
	==22568==    by 0x302C807AF0: start_thread (pthread_create.c:305)

2011-07-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: s/SmartCard/Smartcard/g

	gtk: total-read-bytes is ulong
	As pointed out by Christophe on the ML.

2011-07-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: remove warning if !USE_SMARTCARD

	Merge commit 'refs/merge-requests/16' of ssh://gitorious.org/spice-gtk/spice-gtk into merge-requests/16

2011-07-02  Alon Levy  <alevy@redhat.com>

	gtk: add spicy-stats test app

	spice-channel: add property total-bytes-read

	spice-channel: export spice_channel_type_to_string

2011-07-01  Christophe Fergeau  <cfergeau@redhat.com>

	prepend smartcard cmdline options with --smartcard
	This is consistent with what spicec does, and is also less
	confusing since other certificates can be passed on the command
	line (for client/server host authentication).

	add --smartcard option to spicy
	People starting spicy will not always want their smartcard data
	to be forwarded to the guest they're connecting to. Currently,
	smartcard events are unconditionnally forwarded to the server if
	spicy was compiled with smartcard support. This commit adds a
	--smartcard option that must be used in order to enable smartcard
	support in the client. By default, smartcard data won't be forwarded
	to the server unless this option is specified.

2011-06-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/smartcard: make cacard dependency optional without breaking API

2011-06-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/smartcard: remove g_assert

2011-06-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	TODO: update

	build-sys: fix disable-smartcard broken earlier

2011-06-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/smartcard: add a couple of debug

	gtk/smartcard: simplify a little spice_smartcard_manager_init_libcacard

2011-06-23  Christophe Fergeau  <cfergeau@redhat.com>

	use new @ifdef directive for smartcard messages
	We don't want to conditionally compile the smartcard messages
	depending on whether USE_SMARTCARD is set or not, we can now use
	the @ifdef attribute for that.

	handle @ifdef on messages and channels

	allow attributes on channel elements in .proto files
	We want to be able to add an @ifdef annotation to optional messages
	For example, we want to compile in the smartcard messages only if
	libcacard is available

	add ifdef/endif methods to spice code generator
	These methods will be needed to be able to make some fields optional
	in spice.proto

	fix compilation when libcacard isn't installed

	set menu actions sensitivity for software smartcards
	Make sure menu actions are only sensitive when we are using a
	software smartcard reader, and properly update the sensitivity
	depending on the presence or not of a software smartcard in the
	software reader.

	add smartcard actions to spicy
	Add code to add/remove a software smartcard in spicy UI. These
	2 entries were added as items in the Input menu. They are not
	grayed out for now if there is no software reader available.

	add software smartcard reader support

	use user-provided certificates when init'ing libcacard

	read certificate information from command line
	When using a software card reader, one needs to pass 3 certificates
	to be used to simulate the smartcard (and optionnally the path to
	a certificate database). This commit adds support for --certificates
	and --certificate-db command line options to do that.

	add smartcard properties to SpiceSession
	To handle software smartcards, we need to be able to pass the
	certificates to use for the smartcard as well as the database where
	these certificates can be found. This commit adds "certificates"
	and "certificate-db" properties to make this possible.

	handle smartcard channel in SpiceWidget

	handle smartcard channel in spice_channel_new

	initialize libcacard

	don't always serialize messages sent to the server
	The communication between spice clients and servers on the smartcard
	channel can be initiated either by the client or by the server.
	It's initiated by the client for smartcard reader events (reader
	hot(un)plug, card insertion/removal), or it can be initiated by the
	server when it wants to query the certificates available on the
	smartcard.
	When communication is initiated by the client, we want to serialize
	the messages we sent, ie we don't want to send a message if we
	haven't received yet the answer to the previous message.
	However, when it's the server which initiates the communication,
	we don't want to use this serializing mechanism.

	This commit adds a "serialize_msg" boolean to be able to disable
	message sending serialization as needed.

	forward APDU requests from server to smartcard reader
	These requests are sent by the server when trying to read the
	certificates from the smartcard.

	handle messages from spice server

	serialize sending of smartcard channel messages
	Messages sent to the spice server by the smartcard channel have to
	be serialized: before sending a message, the channel has to wait
	for the server answer to the previous message. Add a GQueue to be
	able to queue several messages to the server while we wait for the
	answer to an earlier message.
	I think the reason why that serialization is needed is to be able
	to deterministically assign IDs to readers on reader addition. We
	have no way to match a message from the spice server with the
	message to the server that triggered this reply, which means that
	if we could send several reader additions to the server without
	waiting for answers, when the server answers, we wouldn't know
	which reader it's trying to assign an ID to.

	send messages to spice server on reader/card events

	add basic callbacks for smartcard events
	Now that the smartcard manager sends event for smartcard readers,
	the smartcard channel has to do something with them. For now, we just
	add basic callbacks which don't try to forward these events to the
	spice server. However, we start adding the glue needed to handle
	the fact that plugging of smartcard readers and creation of these
	readers in the spice server will be asynchronous.
	After receiving a "reader addition" command, the spice server sends
	back an ID to identify this reader which must be used in all other
	requests (card insertion, removal and reader removal) to identify
	this reader. However, if the server is slow to send back this ID,
	there's a window when we can get additional events for the reader
	that is being added that we can't send right away to the server
	because we don't know the ID to use. That's why we add the various
	pending_* hashes in this commit, to be able to keep track of the
	requests that will have to be sent once the spice server has
	assigned an ID to the reader.

	add smartcard bits to spice.proto

2011-06-22  Christophe Fergeau  <cfergeau@redhat.com>

	emit signals in reaction to libcacard events

	add signals for smartcard events
	Add signals which will be emitted when a reader appears/disappears,
	or when a smartcard is inserted/removed.

	add boxed type for VReader
	VReader is a type defined in libcacard which contains all the
	information we need ot handle card readers. Since it's refcounted,
	we can make it a boxed type for use in signals.

	add smartcard monitor GSource
	This source gets events from libcacard and inserts them into
	a regular glib mainloop. The smartcard manager will then emit
	signals in reaction to the events it got from libcacard.

2011-06-22  Marc-André Lureau  <marcandre.lureau@gmail.com>

	build-sys: some minor cleanup

2011-06-22  Christophe Fergeau  <cfergeau@redhat.com>

	add --enable-smartcard configure flag

	add smartcard channel and smartcard manager skeletons

	improve debug log on coroutine start

	factor base message handling in SpiceChannel
	Currently, every channel has to define all the server messages it
	handles, including the "generic" ones. Since it's error prone (easy
	to forget the handling of default messages in new sources), it's
	better to move this handling to the base channel class, and to call
	the parent method when the message is unknown in the ::handle_msg
	method.

	On top of this, another factoring that can be done is to make the
	message handling function generic instead of reimplementing it in
	every class. Each class would only have to register its own
	(class-specific) set of handlers.

	Conflicts:

		gtk/channel-playback.c
		gtk/channel-record.c

	display more options in default --help
	When running spicy --help, very few options are shown. I didn't
	notice at first that it was possible to specify the spice server
	host/port/... showing them in the default help output should make
	these options more obvious.

2011-06-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: get rid of duplicated channel_desc table

	gtk/gstaudio: add volume control support

2011-06-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/audio: announce volume capability

	add git .mailmap

	gtk/pulse: add volume control support

	common: add volume messages

	spice.proto: updated with volume messages

	playback/record: add audio volume properties

2011-06-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: add accel menuitem property

	gtk/controller: change namespace to SpiceCtrl

2011-06-17  Christophe Fergeau  <cfergeau@redhat.com>

	gtk/spicy: fix buttons in connect dialog
	Use proper button order (confirmation should be bottom right) and
	use a "Connect" button instead of "Ok".

2011-06-14  Alon Levy  <alevy@redhat.com>

	channel-display: destroy_stream: fail if streams is NULL

2011-06-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: fix connection events on namedpipe
	Strangely, Wine was working fine with the NamedPipe handle itself.

	But WinXP wants the Event handle, obviously.

2011-06-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: build win32 controller pipe name

2011-06-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: rule out clicks in outside region
	Not so great change: we should have a grab on the pointer when
	pressing, to receive the release event even if outside the
	region. Unfortunately, grabs are single widget for now.

	gtk: oops, forgot to put signal detail first

2011-06-08  Marc-André Lureau  <marcandre.lureau@gmail.com>

	gtk/widget: keep a ref on the session
	This is to make more explicit that the session isn't owned by the
	widget display, but rather shared.

	Also, it makes it easier to deal with dispose() since there is
	explict referencing.

	gtk/session: allow spice_session_disconnect() to be called several times

	gtk/channel: add more runtime check, and make sure any pending idle associated are removed

2011-06-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Merge commit 'refs/merge-requests/14' of ssh://gitorious.org/spice-gtk/spice-gtk into merge-requests/14

2011-06-07  Christophe Fergeau  <cfergeau@redhat.com>

	add really basic GDK GnomeRR backend
	It doesn't know about available resolutions, nor about clones,
	rotations, ..., it can't trigger resolution changes, but hopefully
	it will be enough for basic GnomeRR support in the mac port.

	configure.ac: add defines for windows and osx
	Check for gtk+-win32/gtk+-osx to know when we should define
	HAVE_WINDOWS/WITH_DISPLAY_WINDOWS and HAVE_QUARTZ/WITH_DISPLAY_QUARTZ

	This is better than the old scheme that blindly tried to detect
	libx11, and chose between x11/windows depending on only this
	test.
	We probably should check that only one of windows/x11/quartz is
	enabled at once.
	NB: for now the QUARTZ defines are not used since we will be
	using a generic GnomeRR backend instead of having our own
	OSX backend.

	configure.ac: only check for X11 libs on X11 builds
	No need to try to detect xrandr or xkb headers when we won't be
	doing an X11 build. This is even detrimental on Mac OSX when
	we want to attempt a native build but have the xkb headers installed.

	configure.ac: simplify --with-x11 processing a bit

	configure.ac: improve X11 detection
	Use gtk-x11-[23].0.pc to detect whether we want an x11 build or
	not. Don't AC_SUBST X11_CFLAGS and X11_LIBS since they are unused.

	configure.ac: group all X11 checks
	Gather all x11 related checks in the same place

2011-06-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/win32: interecept low level keys - fix alt-tab and such

	gtk: improve gstaudio backend
	Do not timestamp gst audio buffers, since they are continuous anyway
	and it fixes directsoundsink stuttering

	Also, add a new SPICE_GST_AUDIOSINK environment variable to play with
	sink parameters

	build/win32: they broke libjpeg again

2011-06-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/win32: gtk maps LAlt & LCtrl to Alt and Ctrl keycode, but they are missing from keymaps.csv

2011-06-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: update spicy.nsis installer

2011-06-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix windows build with recent mingw64

2011-06-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: remove unused c++ check

	gtk/spicy: add rudimentary grab-sequence configuration setting

2011-05-28  Christophe Fergeau  <cfergeau@redhat.com>

	fix miscellaneous memleaks
	Fix various memleaks that were reported by valgrind.

	plug a memleak in ChannelMain::_channel_new
	ChannelMain::_channel_new was leaking memory in an error path.
	Unconditionnally free the used memory, which has the added benefit
	of making the code simpler.

2011-05-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: load ca-file if SPICE_SESSION_VERIFY_SUBJECT
	Fix SSL verify to work like spicec, not sure what I am doing there, but it works.

	gtk: update python binding generated file

	gtk: log spice-gtk version when creating a session

2011-05-25  Christophe Fergeau  <cfergeau@redhat.com>

	fix make distcheck

	make perl-Text-CSV optional for tarball builds
	Ship the files generated using perl-Text-CSV in the tarball so that
	end-users (as in "people compiling from a tarball") won't need to
	have perl-Text-CSV installed.

2011-05-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: free some more objects when quitting

2011-05-25  Zeeshan Ali (Khattak)  <zeeshanak@gnome.org>

	Connect on recent connection item activation
	Now (commit 27df918) that we already gather connection information when
	user (single)-clicks a recent connection item, we can safely use the
	selected recent connection when user activates (double-clicks) it.

	RecentChooser should act on single-click
	Fill-in the connection dialog fields as soon user selects a recent
	connection.

	Minor coding-style fix
	Don't use mix of tabs and spaces.

	Get rid of redundant argument

	Minor clean-up
	Prefer 'if/else' over 'switch' when dealing with only 2 possibilities.

2011-05-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Merge branch 'merge-requests/11'

2011-05-25  Christophe Fergeau  <cfergeau@redhat.com>

	sync protocol files with spice

	remove duplicate headers from Makefile.am
	Headers needed for map-file generation were listed twice, once in
	libspice_client_glibinclude_HEADERS and once in _SOURCES. It's ok
	to only have them in _HEADERS. Order channel names alphabetically
	while I'm touching this part of Makefile.am

	remove G_GNUC_CONST from get_type functions
	These functions call g_type_register_* the first time they are
	called which is not G_GNUC_CONST so this attribute can't be used
	here. This had the side effect of making these functions not appear
	in sym-file after running make update-sym-file.

2011-05-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add SSL ciphers session property

	THANKS: update

	Merge commit 'refs/merge-requests/10' of ssh://gitorious.org/spice-gtk/spice-gtk into merge-requests/10

2011-05-23  Christophe Fergeau  <cfergeau@redhat.com>

	add const to arrays in marshalling functions

	fix copy & paste error in ptypes.py

	remove duplicate #include

	fix wrong comment in spice_spice_channel_send_msg

	s/interruptable/interruptible

2011-05-23  Daniel P. Berrange  <berrange@redhat.com>

	Fix missing OS-X keymapping for letter 'A'
	The keymap-gen.pl script was not correctly distinguishing
	keycodes with a value of '0', from undefined keycodes. All
	were skipped. This meant that the mapping for OS-X ANSI_A
	key was lost (since it has value 0).

	For similar reasons the XQuartz mapping for the letter A
	was also lost.

	* src/keymap-gen.pl: Fix handling of 0 vs undef for keycodes
	* src/keymaps.csv: Remove bogus 0x0 entry in OS-X keymap

	Add missing keytable entry for KEY_KATAKANAHIRAGANA
	* src/keymaps.csv: Add XT code for KEY_KATAKANAHIRAGANA

2011-05-23  Christophe Fergeau  <cfergeau@redhat.com>

	include stddef.h in continuation.h
	It uses size_t so it needs it to get a definition for this type.
	If it's not there, this causes build breakage on OS X

2011-05-23  Attila Sukosd  <attila.sukosd@gmail.com>

	define MAP_ANON as MAP_ANONYMOUS if needed
	Mac OS X doesn't have MAP_ANONYMOUS, only MAP_ANON, so use MAP_ANON
	when MAP_ANONYMOUS isn't defined.

2011-05-23  Christophe Fergeau  <cfergeau@redhat.com>

	ssl_verify: include <string.h>
	ssl_verify.c is using memcmp which comes from string.h, this was
	breaking compilation with -Werror -Wall on Mac OS X

	link with gthread when appropriate
	The corouting gthread code and spicy are using gthread functions
	but were no linked against the gthread library. This causes build
	failures on older glibs where gthread isn't mandatory when using
	glib.

	gnome-rr: use g_object_notify instead of g_object_notify_by_spec
	The latter was added in glib 2.26, and we only require glib 2.22

2011-05-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	display: fix build error GLib <2.26
	https://bugs.freedesktop.org/show_bug.cgi?id=37443

2011-05-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: correctly close namedpipe after calling close()

	gtk/controller: add some missing clean up of namedpipe

	gtk/controller: forgot to dispose stream as well

	controller: stick to 2.22 API

2011-05-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix build with latest mingw

2011-05-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: got NamedPipe basic working

2011-05-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/controller: start NamedPipe support (compile with mingw32)

2011-05-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: restore correctly UI elements visibility state

2011-05-10  Zeeshan Ali (Khattak)  <zeeshanak@gnome.org>

	gtk: some code cleanup

2011-05-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: spicy - leave fullscreen when grab sequence is pressed
	Workaround since accels are now disabled.. Ideally we either have a
	different key sequence or we use Vinagre UI

	gtk: fix spicy grab key sequence

	gtk: warn on invalid key sequence

	gtk: add grab-keys-pressed signal

	gtk: don't ungrab keyboard on focus-ous
	Mainly to avoid the crazy loop:
	focus-in > grab -> focus-out -> ungrab -> focus-in
	on kde & gnome-shell.

	gtk: keyboard handling improvements
	- spicy: disable accels/mnemonics when grabbed

	gtk: extra check only compiled if !NDEBUG

2011-05-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: get rid of a useless warning

	gtk: return RGB -> BGRX color conversion for non-turbo jpeg

2011-05-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: use faster jpeg decompression by default

2011-05-08  Marc-André Lureau  <marcandre.lureau@gmail.com>

	gtk: warn if received invalid frame timestamp

2011-05-07  Marc-André Lureau  <marcandre.lureau@gmail.com>

	gtk: speed up mjpeg decompression
	Remove custom rgb->argb functions, and remove fancy post-proc (which I
	don't think were applied, but we now do the same as spicec)

	gtk: sync audio with gst backend

2011-05-06  Marc-André Lureau  <marcandre.lureau@gmail.com>

	build: update README with depedencies

	gtk: warn unsupported channel type with a description

2011-05-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: adjust overall playback latency to 100ms
	The previous parameters didn't adjust overall latency.  Adjusted to
	100ms overall latency lower cpu load, and improve video flickering

	(damn /me suck at PulseAudio client-side...)

2011-05-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix SASL auth failed
	Signal correctly to the client that AUTH failed.

	Before, we only had a IO error on channel disconnection.

2011-05-03  Zeeshan Ali (Khattak)  <zeeshanak@gnome.org>

	configure.ac: Use gtk+ 3.0 be default
	Hi Zeeshan!!

2011-05-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	TODO: fix wrong mouse ungrabbing for dragndrop

2011-04-27  Christophe Fergeau  <cfergeau@redhat.com>

	configure.ac: remove setting default C(XX)FLAGS
	automake/autoconf already set them for us to -g -O2 if there are
	no flags defined.

	configure.ac: use AC_LANG_SOURCE
	Recent autoconf complains when AC_COMPILE_IFELSE is used without
	using AC_LANG_SOURCE to generate the code snippet to compile. Add
	the missing AC_LANG_SOURCE call to SPICE_CC_TRY_FLAG to make it
	quiet.

	configure.ac rework introspection detection
	When running autogen.sh without having gobject-introspection, this
	should give a slightly nicer error message. It currently errors out
	with
	gtk/Makefile.am:450: HAVE_INTROSPECTION does not appear in AM_CONDITIONAL

	After the patch the error will be
	checking for GOBJECT_INTROSPECTION... yes
	./configure: line 21307: syntax error near unexpected token `0.6.7'
	./configure: line 21307: `GOBJECT_INTROSPECTION_CHECK(0.6.7)'

2011-04-18  Christophe Fergeau  <cfergeau@redhat.com>

	spicy: disable Ctrl+W/Close keyboard shortcut
	The keyboard shortcut for the Close gtk action isn't disabled,
	which leads to spicy closing when trying to use Ctrl+W in the guest.
	All other problematic shortcuts are disabled, but in this case the
	disabling was commented out. Reenable it to prevent people from
	accidentally closing spicy when pressing ctrl+w

	spicy: fix keyboard shortcuts in comments
	The various action entries have a comment about the keyboard
	shortcut that is being disabled. However, all these comments were
	copied from the "Quit" action and were all referring to Ctrl-Q.
	This commit puts the right keyboard shortcuts in the comments

	spicy: remove non-needed keyboard shortcut disabling
	GTK_STOCK_CONNECT doesn't have an associated keyboard shortcut
	so there is no need to explicitly disable it.

2011-04-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	NEWS: update for v0.6

	TODO: update

	gtk/display: move some RANDR code to X11 file

	build: fix make distcheck

2011-04-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Merge commit 'refs/merge-requests/6' of git://gitorious.org/spice-gtk/spice-gtk into merge-requests/6

	gtk/map-file: fix spice_main_send_monitor_config function name

2011-04-11  Marc-André Lureau  <marcandre.lureau@gmail.com>

	gtk/controller: fix build with non-default arguments

2011-04-11  Christophe Fergeau  <cfergeau@redhat.com>

	gtk: fix "set but not used" gcc 4.6 warnings
	Since we are compiling with -Werror, this was breaking compilation.

2011-04-11  Alon Levy  <alevy@redhat.com>

	python_modules/codegen.py: fix indent error in an unused function

	demarshaller/marshaller fix gcc 4.6.0
	python_modules/demarshal.py and marshal.py fixes for gcc 4.6.0
	warning about set but unused variables. The fixes disable creating
	of variables mem_size when they are not used (demarshall) and
	declaring a src variable when the message doesn't use it (marshal).

	You need to touch *.proto after applying this (should add a Makefile
	dependency).

	codegen: avoid creating out if not used (fix gcc 4.6.0 warning)

	mingw32 build: python_modules/marshal: use unsigned for for_loop index variable

2011-04-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: do not show again toolbar when going full-screen, if mark received

	gtk: calling connect() on a connecting channel is fine
	This avoid problems where different display shares the same input
	channel and try to connect two times.

	gtk: allow to drag-and-drop between displays / windows

	gtk/controller: install spice-controller library

2011-04-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	common: fix build error of used uninitialized
	  CC     sw_canvas.lo
	cc1: warnings being treated as errors
	../common/sw_canvas.c: In function 'canvas_draw_text':
	../common/sw_canvas.c:1037:16: error: 'pos.x' may be used uninitialized in this function
	../common/sw_canvas.c:1037:16: error: 'pos.y' may be used uninitialized in this function
	make[4]: *** [sw_canvas.lo] Error 1

2011-04-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	TODO: update

	build: fix gtk/controller/Makefile valac line which had custom.vapi

	Merge commit 'refs/merge-requests/5' of git://gitorious.org/spice-gtk/spice-gtk into merge-requests/5

	gtk: don't send MonitorConfig after agent start
	We don't know yet what will be the guest previous configuration.

	Ie, what should we send otherwise? Current hardware configuration?
	This works badly with windowed mode, where we expect the same windows
	to be displayed on reconnection.

	gtk: introduce more complete spice_main_send_monitor_config()
	Since it's unclear yet how MonitorConfig should be used depending on
	use case (full-screen vs windowed) we prefer to make a public api so
	that the client implementation can send it when it is the most
	appropriate time.

	gtk: add disable-display-position

	gtk: remove unnecessary invalidate mark signal

	gtk: send FALSE mark when destroying the primary surface after 1s...
	This is similar to what is done in spicec.

	gtk: hide the cursor after setting it
	So that when we move the cursor again, we can show the right one

	gtk/spicy: hide the display if mark is FALSE

	gtk/spicy: update status of all windows

	gtk/spicy: only show window when we receive the mark

	gtk: not having a window is not critical, if the widget is not yet shown

2011-04-08  Hans de Goede  <hdegoede@redhat.com>

	gtk: fixup clipboard_by_guest tracking
	clipboard_by_guest tracking was used more or less for 2 things, to keep track
	if the agent has clipboard data ready to send, and to see if we have done a
	clipboard_set_with_data on behalf of the guest agent.

	This patch splits the tracking of the 2, fixing several issues:
	1) spice_display_paste_from_guest would not work if since receiving
	   the grab from the agent some other app has copied something to
	   the client clipboard.
	2) We would do a clipboard_clear unconditionally even if we were
	   not the clipboard owner in the client (iow some other app has
	   done a clipboard_set_with_data since out last one).

	This patch changes the meaning of the clipboard_by_guest boolean to just
	track if we've done a clipboard_set_with_data on behalf of the guest
	and are the last one to have a done a clipboard_set_with_data (iow we are the
	client os' clipboard owner). It adds a checks to clipboard_release to
	only call clipboard_clear if we are the current ownerm fixing 1).

	This patch uses nclip_targets to keep track of the agent having data
	available which we could paste, fixing 2).

	gtk: Clear hasdata when we do a clipboard_set_with_data
	When we call gtk_clipboard_set_with_data to set the client clipboard
	to the targets reported as available by the agent, the clipboard no
	longer has data in the sense that it has data which is interesting
	for spice_display_copy_to_guest, so clear clip_hasdata whenever we
	call gtk_clipboard_set_with_data,

	gtk: receiving a grab from the agent implies releasing our own
	By setting d->clip_grabbed[selection] to FALSE when we receive a grab from
	the agent, we can remove the weird "if (!d->clipboard_by_guest[selection])"
	check from clipboard_owner_change, and we fix spice_display_copy_to_guest not
	working in the following case:
	1) autoclipboard share disabled
	2) Copy something to the clipboard in the client
	3) Send it to the guest by calling spice_display_copy_to_guest
	4) Copy something to the clipboard in the guest
	5) Tried to send the client clipboard to the guest again by calling
	   spice_display_copy_to_guest (again).

	5) would not work because d->clip_grabbed[selection] would still be true in
	spice-gtk's view, where as the agent no longer sees the clipboard as grabbed
	by the client since it send a grab itself.

	gtk: use a separate var to keep track of self caused new clipboard owner events
	Also change 0/1 to FALSE/TRUE in touched code. spice-widget seems to be
	using all 3 of: 0/1 false/true and FALSE/TRUE for booleans. The glib convention
	is FALSE/TRUE.

2011-04-05  Hans de Goede  <hdegoede@redhat.com>

	gtk: take selection into account in clipboard_release

2011-04-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: only release clipboard when neither guest nor client own it
	08:55 < hansg> elmarco, this is from vdagent.log with debugging enabled. What is happening is that the last thing done was a primary
	               selection in the client, so vdagent owns the clipboard in the guest (on behalf of spice-gtk), then something gets selected
	               inside the guest, the agent sends a grab to spice-gtk, which then does a gtk_clipboard_set_with_data, this triggers an
	               clipboard_owner_change which sends a release message to the agent
	08:56 < hansg> To which the agent then responds by dropping it, and logging:
	08:56 < hansg> primary: received release while not owning client clipboard
	09:11 < elmarco> hansg: but this bug we are talking about is not related to multi-clipboard right?
	09:11 < elmarco> and it's only a warning in vdagent, things works as expected otherwise, right?
	09:11 < elmarco> the bug was thee before I suppose
	09:12 < hansg> right, they work because vdagent is diligent and sees the client sends a release while it is not owning the clipboard. The
	               diligence is mainly there in case things race though (release on client racing with a grab on guest), not to make things
	               work with buggy clients :)
	09:13 < hansg> wrt: <elmarco> hansg: d->clip_grabbed is only for client-side grab, iirc
	09:13 < elmarco> ok, I think it's just an obscure area of the spec, where basically, we don't define exactly the "state machine"
	09:13 < elmarco> so the client is releasing his last client-side grab, because he had one before, but now, it is a guest grab
	09:13 < hansg> True (not exactly definging the state machine)
	09:14 < hansg> So to try again wrt the  d->clip_grabbed, what happens there (which has the same cause) is:
	09:14 < elmarco> so, what it should do is just don't release the clipboard if it is switching from client-side to guest
	09:15 < hansg> gtk/spice-widget.c: clipboard_grab gets called, and does:
	09:15 < hansg> Hmm, hold on, I see what you mean wrt d->clip_grabbed now
	09:16 < elmarco> to me, it looks like the client made a grab and to complete it's cycle, it should release his grab
	09:16 < elmarco> but the order of things confuse vdagent and we should agree on something and document it
	09:18 < hansg> elmarco, I need some time to take a somewhat closer look at the spice-gtk code in this area, give me 1/2 an hour and I'l
	               get back to you
	09:20 < elmarco> from client 1. grab -> 2. grab <- 3. release -> or 1. grab -> 2. grab <- 3. no release
	09:21 < elmarco> I think state should not be mixed between client grab / release -> and guest grab/release <-
	09:22 < elmarco> so, overriding client grab by guest grab should release client grab
	09:23 < hansg> spicec and the linux agent both assume that after sending a grab they won't get back a release (for that selection). The
	               purpose of the release is to tell the OS that the agent resp,  client no longer own the clipboard (by setting the owner to
	               None under X11), so that other apps can disable their paste menu item, etc. There is no need to do that (and actually
	               doing so would be a bug) if an other app now owns the clipboard. So if the other side claim
	09:23 < hansg> s ownership of the clipboard there is no need to tell it you're releasing your side, since it already assume you have
	09:24 < hansg> Scenarios to keep in mind are:
	09:24 < hansg> Seen from the client side:
	09:28 < hansg> client grabs clipboard
	09:28 < hansg> some app on guest becomes owner, guest sends grab, assume client release
	09:29 < hansg> some app on guest asks agent for clipboard data -> tells it to go away since the client no longer the owner
	09:29 < hansg> If it would not assume the release, there would be a window where it would think the client still owns the clipboard and
	               forward potential request to the client, even though the client no longer owns the clipboard
	09:30 < hansg> The thing to keep in mind is that the delivery of messages is not instant, so there is some window where the 2 sides are
	               out of sync.
	09:30 < hansg> I can see the logic in how you're advocating to do things, but that is not how they are currently done and I'm reluctant
	               to change this
	09:33 < elmarco> hansg: yeah, I don't think one solution or the other affect user experience, for me there is no gap if the client and
	                 agent agrees, it's only protocol/implementation details
	09:33 < elmarco> since there was prior implementation, we can decide to follow it

2011-04-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix multi-head support by sync the display cache
	An image may come later from a different channel, even if it is referenced by another image.

	gtk: add some debugging in glz decoder and avoid crashes

	gtk: display now use the cache from the session

2011-04-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: the caches are shared with the session

	common: get rid of abort() in canvases

	common: remove unnecessary outdated c++ debug

2011-04-01  Christophe Fergeau  <cfergeau@redhat.com>

	configure.ac: remove detection of WARN_UNUSED_RESULT
	spice-gtk configure.ac has some code to detect if the compiler has
	a special attribute to tag some functions so that they generate a
	warning when their return value isn't checked. However, this test
	is broken (the gcc attribute name is "warn_unused_result", not
	"__warn_unused_result__" and WARN_UNUSED_RESULT is unused anyway
	since spice-protocol provides SPICE_GNUC_WARN_UNUSED_RESULT. Thus
	we can just drop that block of code from configure.ac

2011-04-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	adding THANKS

2011-04-01  Christophe Fergeau  <cfergeau@redhat.com>

	configure.ac: remove unused tests
	configure.ac had -fvisibility detection, but it's not used by
	spice-gtk. It also has a --enable-static-linkage flag which isn't
	used anywhere apart from in configure.ac, so remote this too. I
	think the same effect as --enable-static-linkage can be achieved
	using make LDFLAGS="-all-static" since we are using libtool.

2011-03-31  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: correct CLIPBOARD_LAST so that array are sized correctly

	gtk: show cursor when cursor-move

	gtk: fix handling of incoming large clipboard data
	The main fix was probably the agent_msg_pos guin8 -> guint, although I
	modified the code for more clarity

	gtk: multi-clipboard improvements

2011-03-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix make dist

	gtk/controller: add XPI controller code

	build: provide a conditional for WIN32

	build fixup

	build: install spice-protocol.vapi

	build: check for vala if necessary

2011-03-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: remove some debugging, update TODO

2011-03-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Revert "gtk/display: remove unused mode name"
	This reverts commit 33ef5a9368534f7fcb77ef60d8811ae08a707e4f.

2011-03-23  Christophe Fergeau  <cfergeau@gmail.com>

	gtk/display: be more paranoid about potentially NULL pointer
	If things don't go as expected in gnome_rr_config_ensure_primary
	(for example we don't find any usable output), we may end up
	trying to dereference a NULL pointer. It's better to check
	top_left is not NULL before using it.

	gtk: don't attempt to dereference NULL pointer
	In spice_channel_handle_migrate there's an explicit check for
	data being NULL. However, we subsequently dereference it twice
	even when it can be NULL. Add explicit checks to avoid that.

	gtk: remove unused variables
	They were spotted by the clang static analyzer.

2011-03-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: WIN32 support resolution update

	gtk/spicy: WIN32 GTK icon theme fallback in recentmanager is buggy

	gtk/display: implement windows backend

	gtk/display: remove unused mode name

2011-03-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/display: avoid use of g_assert, we are trying to make a library

	gtk/display: split x11/windows backend
	For better or worse..

2011-03-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/display: start splitting display x11/windows backend

2011-03-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/display: fix build with win32

	TODO: update

	gtk: fix warning when building without sasl

	gtk/spicy: fix win32 build

	build: clean up some unused autoconf.ac

2011-03-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	README: minor sasl dependency update

	gtk/channel: return if pubkey is NULL
	Patch suggested by Alon Levy.

	http://lists.freedesktop.org/archives/spice-devel/2011-March/002943.html

	build: fix a copy&paste typo

	spicy: change current output resolution in fullscreen

	gtk/display: add rr_config_dump

	gtk: import display configuration from gnome-desktop

2011-03-15  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix crash when clipboard_primary owner change
	Clean up handler when destroyed.

	/usr/local/stow/virt-manager/share/virt-manager/virt-manager.py:450: Warning: g_type_instance_get_private: assertion `instance != NULL && instance->g_class != NULL' failed
	  gtk.main()

	Program received signal SIGSEGV, Segmentation fault.
	[Switching to Thread 0x7ffff7fd4720 (LWP 19098)]
	0x00007fffe8881ab2 in get_selection_from_clipboard (d=0x0, cb=0x1df8510)
	    at spice-widget.c:996
	996     if (cb == d->clipboard) {
	(gdb) bt
	    at spice-widget.c:996
	    0x30f5750, data=0x1ea3000) at spice-widget.c:1114
	    0x0, n_param_values=2, param_values=0x1e96a90, invocation_hint=
	    0x7fffffffd280) at gclosure.c:767
	    detail=0, instance=0x1df8510, emission_return=0x0, instance_and_params=
	    0x1e96a90) at gsignal.c:3252
	    instance=<value optimized out>, signal_id=<value optimized out>,

	gtk: map-file missig test_common_capability

2011-03-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	TODO: update

	gtk: add display width/height properties

2011-03-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add multiple selection clipboard sharing

2011-02-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add SASL support

2011-02-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix spice-client-gtk-3.0.pc requires

2011-02-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add private spice_session_get_{password,host,cert_subject}()

	gtk: add error block to spice_channel_recv_link_msg()

	gtk: add spice_channel_flush_sasl()

	gtk: add spice_channel_read_sasl()

	build: add --with-sasl build option (from gtk-vnc)

	gtk: share clipboard images

	gtk: split agent msg to VD_AGENT_MAX_DATA_SIZE if required
	Fix clipboard sharing of large objects

	gtk: add spice_channel_set_common_capability()

	gtk: make it easier to debug test_capability

	gtk: s/g_get_monotonic_clock/g_get_monotonic_time

	common: add spice_channel_test_common_capability()

2011-02-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	data: update spicy-for-windows.nsis

2011-02-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk/spicy: add --version option

2011-01-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	release 0.5

	gtk: fix windows build

	common: fix windows build

	gtk: fix hitting wall / real screen borders

2011-01-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add "migration-state" enum to make it easier to track migrations

	gtk: when input channel is not ready, silently drop input events

2011-01-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	common: sync with upstream

	common: spice_memdup could accept NULL

	gtk: spicy: add --host-subject argument

	gtk: move channel verification parameter to session

	gtk: rename s/spice-channel-enums/spice-glib-enums

	gtk: add pubkey verification on migration

	gtk: make use of common/ssl_verify.c

	common: add ssl_verify.c common code

	common: ring.h should include stddef for NULL usage

	gtk: add 'pubkey' and 'cert-subject' properties

2011-01-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add channel certificate 'verify' property

	gtk: spicy: display connection dialog on TLS error

	TODO, README: update

	gtk: implement MIGRATE_CANCEL

	gtk: track switch host idle source

	gtk: add SpiceMainChannel::migration-started
	With this signal, it is possible for the client to provide sockets to
	a migrating session.

2011-01-24  Tiziano Mueller  <dev-zero@gentoo.org>

	Use g_free instead of free in fail codepath as well. Warn if password is provided in the uri. Free allocated unencoded uri string.

2011-01-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: handle seamless migrations

	gtk: handle DISPLAY_RESET

	gtk: add spice_session_new_from_session()
	A light copy constructor for migration.

	gtk: exit coroutine loop of a channel migrating

	gtk: add spice_channel_swap(), swap connection details

	gtk: use a callback to handle spice_channel_recv_msg()

	gtk: add channel_up() helper and SPICE_CHANNEL_STATE_MIGRATING

	gtk: use a session state on disconnection, be reentrant

	gtk: add spice_session_set_port() private API, use it

	TODO: add todo about mouse reaching borders

	gtk: order to clarify what is swapped on migration

	gtk: add private get_channel_{id,type}

2011-01-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: cosmetic, make it look safer session_channel_destroy()
	Although not necessary, this loop rewrite is easier to read, to see
	that the function is safe: the function returns when removing the
	item, so it was safe before but as well...

2011-01-19  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix small mem-leak

	gtk: default construction value in property parameter

2011-01-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: remove scheme parsing, and tidy up the function

	Merge commit 'refs/merge-requests/2' of git://gitorious.org/spice-gtk/spice-gtk

	gtk: support reconnection during channel loop (coroutine regression)
	This is needed for protocol downgrade, and TLS switching.

2011-01-17  Tiziano Mueller  <dev-zero@gentoo.org>

	Add 'password' to recognized parameters in the uri.

	Use glib's URI parse functions to properly identify the scheme and unescape the string.

	Fixed implicitly declared toupper.

2011-01-16  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: stay unconnected until the FD is provided by the client

2011-01-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: fix distcheck

2011-01-14  Daniel P. Berrange  <berrange@redhat.com>

	Fix rendering with GTK3
	In GTK2 world there is an expose_event handler, so a choice
	of the X11 or cairo backends can be used.

	In GTK3 world only the draw_event exists, which must use
	cairo

	Disallow python module and X11 rendering with GTK3
	In GTK3 the python binding is provided via introspection.
	The X11 rendering code is not compatible with GTK3 since
	all GTK3 drawing is cairo based and there is no expose_event
	any more

	Make keyboard code support multiple GDK backends
	Adapt the keyboard code so that it builds with GTK2 and GTK3,
	where the latter has multiple GDK backends

	Fix use of GdkDrawable to be compat with GTK3
	In GTK3, the GdkDrawable class is gone, leaving only GdkWindow.
	The GdkDrawable class can be mostly avoided in Gtk2, thus
	eliminating the compat problems with Gtk3. Only a couple of
	compat calls need to be added to allow compilation on both.

	Adapt build system to allow building with GTK3
	The new configure flag '--with-gtk' can be used to choose
	which GTK version to build against, defaulting to GTK2.
	To enable GTK3 use

	   ./configure --with-gtk=3.0

	The libspice-client-glib-2.0.la library is unchanged, building
	against glib-2.0 at all times.

	The GTK3 build will produce a libspice-client-gtk-3.0.la
	The include files will also live in $prefix/spice-client-gtk-3.0
	and the pkgconfig is called spice-client-gtk-3.0 too.

	This allows for full parallel install of GTK2 and GTK3 builds

	Include ABI version in library names.
	To allow easy parallel install of spice-gtk builds against GTK2
	and GTK3, include the ABI version in the library names.

	 libspice-gtk.la -> libspice-gtk-2.0.la
	 libspice-glib.la -> libspice-glib-2.0.la

	The PyGtk module doesn't change because that is obsolete and
	unused in GTK3 world.

2011-01-14  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: spicy: make recent name similar to a URI without spice://

	gtk: TLS add hostname verification

	gtk: TLS fixes: URI parsing and coroutine regression

2011-01-13  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: spicy: add recent connexions chooser in connect dialog

	gtk: spciy: connect to selected recent item

	gtk: spicy: display recent connexions in chooser list

	data: add spice-mime, and spicy.desktop - disabled for now

	gtk: spicy: correctly unref ui/accel objects

	gtk: warn only if audio playback time is not monotonic

2011-01-12  Marc-André Lureau  <marcandre.lureau@redhat.com>

	common: add ring_get_length() for debugging purposes

	gtk: simplify debugging of coroutine-related path

	gtk: handle MIGRATE_SWITCH_HOST

2011-01-11  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: make channel_disconnect() a vmethod

	gtk: remove useless g_object_get

	gtk: allow calling spice_main_clipboard_release() even if agent is not connected

	gtk: add some DEBUG related to migration

2011-01-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: build x11 keyboard code with cairo backend

	build: replace echo by AC_MSG_NOTICE, that way it's logged

	build: get rid of _DEPENDENCIES and -lspice-client*
	Suggested by Jürg Billeter.

2011-01-08  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: be more careful when accessing GDK_WINDOW_XDISPLAY

2011-01-07  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: emit ERROR_LINK when connecting to non-spice server

	gtk: fix async reading... booo, that was *really* missing

	update NEWS and TODO for v0.4

	gtk: ignore clipboard owner signal when main channel disconnected

	gtk: simplify CHANNEL_CLOSE event handling

2011-01-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add missing set_delay() symbol to map-file

2011-01-04  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: help libtool/koji install client-glib before client-gtk

	gtk: fix reconnection from dialog in spicy
	Closing the session while attempting a new one is a bad idea

	gtk: s/warning/message on failed connect

	build: win32: package libgstdirectsoundsrc.dll as well

	gtk: gstaudio: add recording

2011-01-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: gstaudio: timestamp appsrc buffer to be in sync with audio sink clock
	If buffer are not timestamped with the current running time, they
	arrive too late. GStreamer seems to deal with some compensation of
	buffer jitter, but do not correct clock time. Late buffer are late and
	not heard.

2010-12-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: win32: refix jpeg_boolean to build on mingw
	Same fix made by Alon Levy in spice.

	Merge commit 'refs/merge-requests/1' of git://gitorious.org/spice-gtk/spice-gtk into integration

	build: win32: add spicy-for-windows.exe scripts

2010-12-29  Tiziano Mueller  <dev-zero@gentoo.org>

	jpeg_boolean is a mingw32-libjpeg specific thing. Use a define check rather than a version check.

2010-12-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: win32: clean-up and GSocket quirks

2010-12-28  Marc-André Lureau  <marcandre.lureau@redhat.com>

	build: search for .defs file under $(srcdir)

2010-12-27  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: win32: fallback to g_get_home_dir() if g_getenv() failed

	gtk: win32: channel_new() must be called in main context

	gtk: win32: create a drawing context

2010-12-23  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: pulse: reduce playback latency to 20ms

	gtk: pulse: flush audio buffer on cork

	gtk: synchronize video on mmtime

	gtk: update mm time based on playback time+delay

2010-12-22  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add private spice_channel_get_session()

2010-12-22  Alon Levy  <alevy@redhat.com>

	gtk: handle server sending DRAW_COPY before MARK

2010-12-21  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: spicy use shift+f12 for grab sequence

	gtk: handle SPICE_CURSOR_FLAGS_NONE correctly

	update NEWS, fix distcheck

	gtk: improve mouse support in server mode with scaling enabled

2010-12-20  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix cursor r/b colors being inverted

	gtk: add support for SPICE_CURSOR_TYPE_COLOR{4,16,32}

	gtk: improve 16bits color code, fix rendering glitches

	gtk: fix scaling for x11 backend

	gtk: spicy, save statusbar/toolbar display status
	Fix https://bugs.freedesktop.org/show_bug.cgi?id=31991

	gtk: fix scaling line artifacts

	gtk: add a few precondition checks, and modify debug messages

2010-12-18  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix a dead-lock in clipboard handling
	In some condition (in virt-manager but not with spicy),
	g_main_loop_run() will deadlock.  Use GDK_THREAD_LEAVE () like
	gtk_dialog_run() code.

	Also, turn on clipboard sharing by default.

2010-12-17  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: implement clipboard_paste_from_guest()

	gtk: correctly return empty clipboard request

	gtk: fix invalid memory access on palette cache
	This fixes a valgrind error:

	GSpice-Message: display_handle_stream_create: id 49
	(lt-spicy:23948): GSpice-DEBUG: spice-channel-cache.h:107 cache_add: palette 26704 (1)
	GSpice-Message: display_handle_stream_destroy: id 49
	==23948== Invalid read of size 4
	==23948==    at 0x53C07E9: lz_plt8_to_rgb32_decompress (lz_decompress_tmpl.c:304)
	==23948==    by 0x53C71FA: lz_decode (lz.c:661)
	==23948==    by 0x53231AF: canvas_get_lz (canvas_base.c:834)
	==23948==    by 0x5323747: canvas_get_image_internal (canvas_base.c:1109)
	==23948==    by 0x5323BD0: canvas_get_image (canvas_base.c:1282)
	==23948==    by 0x5325FDB: canvas_draw_copy (canvas_base.c:2196)
	==23948==    by 0x531670A: display_handle_draw_copy (channel-display.c:967)
	==23948==    by 0x53171B5: spice_display_handle_msg (channel-display.c:1130)
	==23948==    by 0x52F3B4D: spice_channel_recv_msg (spice-channel.c:1026)
	==23948==    by 0x52F3E61: spice_channel_iterate_read (spice-channel.c:1140)
	==23948==    by 0x52F3F51: spice_channel_iterate (spice-channel.c:1163)
	==23948==    by 0x52F44F7: spice_channel_coroutine (spice-channel.c:1272)
	==23948==  Address 0x191c067c is 1,132 bytes inside a block of size 1,277 free'd
	==23948==    at 0x4C27187: free (vg_replace_malloc.c:325)
	==23948==    by 0x52F1D03: spice_msg_in_unref (spice-channel.c:363)
	==23948==    by 0x52F3B60: spice_channel_recv_msg (spice-channel.c:1029)
	==23948==    by 0x52F3E61: spice_channel_iterate_read (spice-channel.c:1140)
	==23948==    by 0x52F3F51: spice_channel_iterate (spice-channel.c:1163)
	==23948==    by 0x52F44F7: spice_channel_coroutine (spice-channel.c:1272)
	==23948==    by 0x53CA1C9: coroutine_trampoline (coroutine_ucontext.c:52)
	==23948==    by 0x53C9FBA: continuation_trampoline (continuation.c:43)
	==23948==    by 0x5EED71F: ??? (in /lib64/libc-2.12.90.so)
	==23948==    by 0xE7F2E7F: ???
	==23948==

	The invalid pointer seems to come from an image palette that might not
	be cached or ref'ed correctly:

	    at ../common/canvas_base.c:697
	    0x7fffe45aab88) at ../common/canvas_base.c:705

	gtk: wip gstreamer audio backend

	gtk: wip scaling support

	gtk/spicy: add scaling option

	gtk: add cairo display backend

	build: basic windows build support

	common: add windows.h where required
	This patch should be sent to upstream as well..

	common: sync with upstream

	gtk: make pulse audio backend optional

	gtk: revert 16 bits multi-monitor config
	The Linux vdagent doesn't like multi-monitor configuration.

	build: add map-file in EXTRADIST

	gtk: fix 16bits expose code when black borders >0

	gtk: fix XShm error fallback code
	XDestroyImage is attempting to free(ximage->data). However, data is
	owned by the display channel.

	gtk: avoid spurious set_display() calls

	gtk: add support for 16 bits

	gtk: fix video playback being distorted

	gtk: fix windows qxl rendering and warnings
	Based on experimentation with spicec, it is normal to get
	surface_destroy() with unknown surface id. Also, it should be
	considered as an added refcount when adding an existing image/pixmap
	in the cache.

2010-12-10  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: complete API documentation

2010-12-09  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add g_object_notify_main_context()

	gtk: continue API documentation

2010-12-06  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: hide unwanted public symbols

	gtk: s/vnc/spice/ grab_sequence, break API

	gtk: remove old tcp.c code

	TODO: update

2010-12-05  Marc-André Lureau  <marcandre.lureau@redhat.com>

	Merge branch 'wip/coroutines'

	gtk: first stab at gtk-doc documentation

	gtk: WIP coroutines playback & record

	gtk: WIP coroutines inputs

	gtk: WIP coroutines display

	gtk: WIP coroutines cursor

	gtk: WIP coroutines main channel

	gtk: WIP handle disconnect with coroutines

	gtk: WIP tidy main_context_signal_emit() up
	Add g_signal_emit_main_context() and make use of it

	gtk: WIP make coroutine loop overridable

	gtk: WIP add the support for system -> coroutine write

	gtk: WIP spice-channel documentation

	gtk: WIP enable TLS connection with coroutines

	gtk: WIP use coroutines in spice-channel

	gtk: WIP use coroutines and GSocket to connect

	gtk: add coroutine utilities

	gtk: fix an invalid clipboard memory copy

	gtk: don't grab our own guest grab
	Hack? There might be a better way to do that...

	gtk: fix an invalid clipboard memory copy

	gtk: don't grab our own guest grab
	Hack? There might be a better way to do that...

	build: add .gitignore

	gtk: SPICE_DEBUG glz_decoder_window_resize message

2010-12-03  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: fix crash when spicy configuration is empty

	gtk: fix crash when spicy configuration is empty

	gtk: remove invalid properties warning in spicy

	build: spice-protocol >= 0.6.3 required

	gtk: remove invalid properties warning in spicy

	build: spice-protocol >= 0.6.3 required

2010-12-02  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: visibility option for statusbar/toolbar in spicy

	gtk: delay PA stream creation when context is ready

2010-12-01  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: don't uncork new streams

	gtk: save/restore spicy configuration
	Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=31991

	gtk: add CELT recording

	gtk: add CELT playback

2010-11-30  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add {session,channel}_open_fd()

2010-11-29  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add channel.set_capability()

	gtk: put some g_message() under SPICE_DEBUG

	TODO: update

	gtk: add clipboard sharing for text

	gtk: add dispay config

2010-11-26  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: progressive agent message recomposition

	gtk: add jpeg decoder

2010-11-25  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add zlib decoder

	build: fix make -j

	build: re-enable -Wflags, and fix a few warnings

	build: use git-version-gen

	README: add a few missing dependencies

	gtk: disconnect record stream when record_stop()
	This behaviour is different than playback. The main difference is that
	a playback stream will stay active, while the recording stream will be
	removed: that way the GNOME volume control can notice the user there
	is no active recording, by hiding the microphone icon.

	Playback is more frequent (sounds events...) and it would be
	unfriendly if the stream was removed/added every now and then from the
	volume control list.

	build: update build depedencies

	build: update README

	po: add fr translation

	gtk: mark spice-cmdline strings as translatable

	gtk: make snappy translatable

	gtk: remove spice prefix in default signal handler

	gtk: add raw audio recording

2010-11-24  Marc-André Lureau  <marcandre.lureau@redhat.com>

	gtk: add channel_test_capability()

	gtk: add save mm_time in session

	add AUTHORS & TODO

	i18: add basic support - mark translatable spicy strings

	gtk: read remote caps

	gtk: add a couple of new TODO

	gtk: handle agent token

	gtk: add SPICE_MSG_DISCONNECTING handler

	gtk: don't send inputs before the channel is ready, or else it will eof

	gtk: expose Audio object in python

	gtk: fix MainChannel python bindings

	gtk: ensure we sync key locks after connection

	gtk: move audio stuff in client-glib

	gtk: fix make distcheck

	gtk: fix out of dir build

	gtk: add missing copyright headers

	README: move from gtk/ to /

	build: install gtk and glib headers in different dirs
	And various improvements

	gtk: current code is blocking - remove O_NONBLOCK

	gtk: add padding on common base classes: channe/session/widget

	gtk: send the channel caps

	gtk: uncomment some agent string-msg table entries
	I don't know why it was commented.

	gtk: sync keyboard lock (X11 only)

	gtk: release keys on disconnect

	gtk: fix getpixbuf colorspace

	gtk: make spice_session_disconnect() reentrant

	gtk: a channel own a ref on a session
	This fix calling session_disconnect() in a main_channel_event() callback for instance.

	gtk: add a couple of warning on invalid arguments in public methods

	gtk: use sane default values for spice_audio_new()

	gtk: passing seems wrong, it should be the context

	gtk: adapted to be a working C library

	gtk: handle display-mark

	gtk: hack to handle scrolling

	gtk: implement cursor_reset and plug a memleak

	build: fix a few warnings reported by clang

	gtk: add a flag to turn debug off, SPICE_DEBUG=1 to override

	gtk: don't dereference NULL pointers in destroy
	On some error conditions, that happens.

	gtk: add get_pixbuf() for 8/8/8 surfaces

	gtk: add display_send_keys() again, adapted from gtk-vnc..

	gtk: signal keybard-grab status
	Perhaps we should have grab/ungrab signals, instead of an int...

	gtk: add support fro grab keys, based on gtk-vnc code

	gtk: track when mouse/keyboard grab fail
	Avoid sending mouse-grab true if the grab failed.

	gtk: python module, register enums

	gtk: untabify

	gtk: use SPICE_DEBUG_CURSOR=1 for debugging

	gtk: allow key repeatition

	gtk: get rid of the remaining assert()

	gtk: make more build silent

	gtk: python module - add manualy defined bindings

	gtk: fix a few gcc warnings

	gtk: add pygtk module

	gtk: remove spice_channel_id() function
	The value can be retrieved by property

	gtk: remove spice- prefix in signal name

	gtk: remove spice-event
	The abstraction was not really useful, a bit buggy, and a bit more restrictive

	gtk: get rid of asserts, they are not good in libraries

	gtk: use g_log functions instead of fprintf and custom handler

	gtk: make spice_msg_out private

	gtk: GObject Introspection support

2010-11-23  Gerd Hoffmann  <kraxel@redhat.com>

	fix channel cleanup (unbreaks tls)

	spicy: quit on connect failure

	cursor tweaks

	widget: server mouse fixups.

	spicy: use uri for recent entries.

	session: add uri property.

	sound: add recording [not finished yet]

	display: release cursors

	drop+improve debug messages. make protocol a session not a channel property.

	handle partial link message reads

	display: release streams

	display: release glz window bits

	display: release surfaces

	display: release cached palettes and images

	move resize timer from widget to display channel

	more object destruction fixes

	misc object destruction fixes

	spicy cleanup fixes

	display: move IPC_RMID to avoid shm leaking

	spicy: allocate all state storage

	inputs fixups

	spicy: use modifier signal, improve status line.

	inputs: add modifier signal.

	stream regions

	spicy: use grab-mouse signal, set initial kbd focus

	spice widget: some agent bits, add mouse-grab signal

	some more agent bits

	main channel signal fixup.

	auit when the connect dialog is canceled.

	handle VD_AGENT_ANNOUNCE_CAPABILITIES

	mouse and agent interface tweaks.

	connect dialog windup

	spicy: started working on a fancy connect dialog.

	switch snappy to glib command line parsing, factor out common spice options.

	make option menu more verbose

	switch spicy to glib command line parsing

	add audio init wrapper, move pulse bits into gtk lib.

	make spice_session_get_channels return a glist

	rename spice_msg get/put functions to ref/unref

	more clipboard bits

	early cut+paste bits

	zap sub-message debug printfs

	display: handle inval-list message, fix image cacheing.

	spice-channel: Handle incoming sub messages.

	Add glib objects + gtk widgets for spice.

2010-11-23  Marc-André Lureau  <marcandre.lureau@gmail.com>

	Initial import from SPICE
